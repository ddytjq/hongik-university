ID=E0646
URL=http://www.rit.edu/~jpw9607/gne/html/classGNE_1_1SyncConnection.html
SIZE=22553
DATE=12/07/02
TIME=19:23:03
DATASET=C
HTML=<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>GNE::SyncConnection class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body bgcolor="#ffffff">
<!-- Generated by Doxygen 1.2.13.1 -->
<center>
<a class="qindex" href="main.html">Main Page</a> &nbsp; <a class="qindex" href="namespaces.html">Namespace List</a> &nbsp; <a class="qindex" href="hierarchy.html">Class Hierarchy</a> &nbsp; <a class="qindex" href="annotated.html">Compound List</a> &nbsp; <a class="qindex" href="files.html">File List</a> &nbsp; <a class="qindex" href="namespacemembers.html">Namespace Members</a> &nbsp; <a class="qindex" href="functions.html">Compound Members</a> &nbsp; <a class="qindex" href="pages.html">Related Pages</a> &nbsp; </center>
<hr><h1>GNE::SyncConnection  Class Reference</h1>A class for performing syncronous connections. 
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="SyncConnection_8h-source.html">SyncConnection.h</a>&gt;</code>
<p>
<p>Inheritance diagram for GNE::SyncConnection::
<p><center><img src="classGNE_1_1SyncConnection.gif" usemap="#GNE::SyncConnection_map" border="0"></center>
<map name="GNE::SyncConnection_map">
<area href="classGNE_1_1ConnectionListener.html" alt="GNE::ConnectionListener" shape="rect" coords="0,0,153,24">
</map>
<a href="classGNE_1_1SyncConnection-members.html">List of all members.</a><table border=0 cellpadding=0 cellspacing=0>
<tr><td colspan=2><br><h2>Public Methods</h2></td></tr>
<tr><td nowrap align=right valign=top>&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1SyncConnection.html#a0">SyncConnection</a> (<a class="el" href="classGNE_1_1Connection.html">Connection</a> *target)</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Creates a new <a class="el" href="classGNE_1_1SyncConnection.html">SyncConnection</a>.</em> <a href="#a0">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>virtual&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1SyncConnection.html#a1">~SyncConnection</a> ()</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Destructs this <a class="el" href="classGNE_1_1SyncConnection.html">SyncConnection</a>, calling <a class="el" href="classGNE_1_1SyncConnection.html#a6">release</a>() if necessary.</em> <a href="#a1">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top><a name="a2" doxytag="GNE::SyncConnection::getConnection"></a>
<a class="el" href="classGNE_1_1Connection.html">Connection</a> *&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1SyncConnection.html#a2">getConnection</a> () const</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Returns the underlying <a class="el" href="classGNE_1_1Connection.html">Connection</a>.</em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>void&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1SyncConnection.html#a3">open</a> (const <a class="el" href="classGNE_1_1Address.html">Address</a> &amp;dest, int outRate=0, int inRate=0, int localPort=0, bool wantUnreliable=true)</td></tr>
<tr><td nowrap align=right valign=top>void&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1SyncConnection.html#a4">connect</a> ()</td></tr>
<tr><td nowrap align=right valign=top>void&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1SyncConnection.html#a5">disconnect</a> ()</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Disconnects the underlying <a class="el" href="classGNE_1_1Connection.html">Connection</a>.</em> <a href="#a5">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>void&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1SyncConnection.html#a6">release</a> ()</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Releases this <a class="el" href="classGNE_1_1SyncConnection.html">SyncConnection</a>, returning the underlying <a class="el" href="classGNE_1_1Connection.html">Connection</a> to its previous event handler.</em> <a href="#a6">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top><a name="a7" doxytag="GNE::SyncConnection::isReleased"></a>
bool&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1SyncConnection.html#a7">isReleased</a> () const</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Returns true if <a class="el" href="classGNE_1_1SyncConnection.html#a6">release</a>() has been called on this <a class="el" href="classGNE_1_1SyncConnection.html">SyncConnection</a>, and it is not a valid object to use anymore.</em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>SyncConnection &amp;&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1SyncConnection.html#a8">operator&gt;&gt;</a> (<a class="el" href="classGNE_1_1Packet.html">Packet</a> &amp;packet)</td></tr>
<tr><td nowrap align=right valign=top>SyncConnection &amp;&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1SyncConnection.html#a9">operator&lt;&lt;</a> (const <a class="el" href="classGNE_1_1Packet.html">Packet</a> &amp;packet)</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Writes a <a class="el" href="classGNE_1_1Packet.html">Packet</a> to the connection by placing it in the outgoing queue.</em> <a href="#a9">More...</a><em></em></font><br><br></td></tr>
<tr><td colspan=2><br><h2>Friends</h2></td></tr>
<tr><td nowrap align=right valign=top><a name="l0" doxytag="GNE::SyncConnection::ServerConnection"></a>
class&nbsp;</td><td valign=bottom><b>ServerConnection</b></td></tr>
<tr><td nowrap align=right valign=top><a name="l1" doxytag="GNE::SyncConnection::ClientConnection"></a>
class&nbsp;</td><td valign=bottom><b>ClientConnection</b></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
A class for performing syncronous connections.
<p>
All methods of this class except writing block until completion. This is useful while connecting or performing trivial connections/communications. Many times if you want to perform non-game transfers, for example a server-query connection or another simple service it might be simpler to spawn a new thread and run the <a class="el" href="classGNE_1_1SyncConnection.html">SyncConnection</a> while the rest of the program runs.
<p>
SyncConnections throw an <a class="el" href="classGNE_1_1Error.html">Error</a> class on an error, so you must use try/catch blocks. Note that the <a class="el" href="classGNE_1_1Error.html">Error</a> class can't describe everything about an error, so sometimes more specific information is available in the debug logs (enable them with <a class="el" href="namespaceGNE.html#a46">GNE::initDebug</a>).
<p>
All transfers with <a class="el" href="classGNE_1_1SyncConnection.html">SyncConnection</a> are reliable (using TCP, SPX, or similar protocol).
<p>
If an error occurs, the connection was terminated. The underlying connection is disconnected, and this <a class="el" href="classGNE_1_1SyncConnection.html">SyncConnection</a> becomes released.
<p>
When you wrap a <a class="el" href="classGNE_1_1Connection.html">Connection</a> with this class, the event listener for that <a class="el" href="classGNE_1_1Connection.html">Connection</a> is suspended and <a class="el" href="classGNE_1_1SyncConnection.html">SyncConnection</a> "takes over" until it is <a class="el" href="classGNE_1_1SyncConnection.html#a6">release</a>()d. So while in syncronous mode you will receive no events through your asyncronous event listener, with the exception of onDisconnect and onConnect. It is best only to use <a class="el" href="classGNE_1_1SyncConnection.html">SyncConnection</a> while connecting, because of possible side-effects when you wrap the <a class="el" href="classGNE_1_1Connection.html">Connection</a>. If there was already data pending that you did not receive in asyncronous mode -- it was not lost, but you will get it from the next packet read. If you start out with a <a class="el" href="classGNE_1_1SyncConnection.html">SyncConnection</a>, then you can be certain no unexpected packets will be arriving.
<p>
See the example exsynchello for more help with the usage of this class. 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a name="a0" doxytag="GNE::SyncConnection::SyncConnection"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> GNE::SyncConnection::SyncConnection </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classGNE_1_1Connection.html">Connection</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp; <em>target</em>          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Creates a new <a class="el" href="classGNE_1_1SyncConnection.html">SyncConnection</a>.
<p>
Pass in the <a class="el" href="classGNE_1_1Connection.html">Connection</a> that you want to wrap. See the details above for more information.     </td>
  </tr>
</table>
<a name="a1" doxytag="GNE::SyncConnection::~SyncConnection"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> GNE::SyncConnection::~SyncConnection </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp;          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Destructs this <a class="el" href="classGNE_1_1SyncConnection.html">SyncConnection</a>, calling <a class="el" href="classGNE_1_1SyncConnection.html#a6">release</a>() if necessary.
<p>
If releasing would throw an <a class="el" href="classGNE_1_1Error.html">Error</a>, it is ignored.
<p>
<dl compact><dt><b>
See also: </b><dd>
<a class="el" href="classGNE_1_1SyncConnection.html#a6">release</a>() </dl>    </td>
  </tr>
</table>
<hr><h2>Member Function Documentation</h2>
<a name="a4" doxytag="GNE::SyncConnection::connect"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void GNE::SyncConnection::connect </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp;          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Your event listener will receive the onConnect event resulting from this -- it is not repressed just like onDisconnect is not repressed. Many times though, when using this method you won't have a need for onConnect, but if you do create one, connect will wait until onConnect is finished.
<p>
It is important that the wrapped <a class="el" href="classGNE_1_1Connection.html">Connection</a> is a <a class="el" href="classGNE_1_1ClientConnection.html">ClientConnection</a>,  otherwise undefined behavior (likely a crash) will result.<dl compact><dt><b>
Exceptions: </b><dd>
<table border=0 cellspacing=2 cellpadding=0>
<tr><td valign=top><em><a class="el" href="classGNE_1_1Error.html">Error</a></em>&nbsp;</td><td>
 if the connection failed. </td></tr>
</table>
</dl>    </td>
  </tr>
</table>
<a name="a5" doxytag="GNE::SyncConnection::disconnect"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void GNE::SyncConnection::disconnect </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp;          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Disconnects the underlying <a class="el" href="classGNE_1_1Connection.html">Connection</a>.
<p>
It is best to use this function instead of <a class="el" href="classGNE_1_1SyncConnection.html#a2">getConnection</a>()-&gt;<a class="el" href="classGNE_1_1SyncConnection.html#a5">disconnect</a>() because this will make sure any pending writes will have completed through a call to <a class="el" href="classGNE_1_1SyncConnection.html#a6">release</a>().<dl compact><dt><b>
Exceptions: </b><dd>
<table border=0 cellspacing=2 cellpadding=0>
<tr><td valign=top><em><a class="el" href="classGNE_1_1Error.html">Error</a></em>&nbsp;</td><td>
 if release throws an error, or if the disconnection was unsuccessful. </td></tr>
</table>
</dl>    </td>
  </tr>
</table>
<a name="a3" doxytag="GNE::SyncConnection::open"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void GNE::SyncConnection::open </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="classGNE_1_1Address.html">Address</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap>&nbsp; <em>dest</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap>&nbsp; <em>outRate</em> = 0, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap>&nbsp; <em>inRate</em> = 0, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap>&nbsp; <em>localPort</em> = 0, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap>&nbsp; <em>wantUnreliable</em> = true</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
If the open failed, an <a class="el" href="classGNE_1_1Error.html">Error</a> is thrown.
<p>
It is important that the wrapped <a class="el" href="classGNE_1_1Connection.html">Connection</a> is a <a class="el" href="classGNE_1_1ClientConnection.html">ClientConnection</a>,  otherwise undefined behavior (likely a crash) will result.<dl compact><dt><b>
Exceptions: </b><dd>
<table border=0 cellspacing=2 cellpadding=0>
<tr><td valign=top><em><a class="el" href="classGNE_1_1Error.html">Error</a></em>&nbsp;</td><td>
 if the connection could not be opened. </td></tr>
</table>
</dl>    </td>
  </tr>
</table>
<a name="a9" doxytag="GNE::SyncConnection::operator<<"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> SyncConnection &amp; GNE::SyncConnection::operator&lt;&lt; </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="classGNE_1_1Packet.html">Packet</a> &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp; <em>packet</em>          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Writes a <a class="el" href="classGNE_1_1Packet.html">Packet</a> to the connection by placing it in the outgoing queue.
<p>
This method actually doesn't block like every other <a class="el" href="classGNE_1_1SyncConnection.html">SyncConnection</a> method, but on a write there is no reason to block, since it will not effect the logic of the code. This allows for packet caching to improve network performance, and allows you to perform reads while the connection is still writing. All of this is transparent to your logic, though. <a class="el" href="classGNE_1_1SyncConnection.html#a6">release</a>() will block until all writes are completed, and the destructor and <a class="el" href="classGNE_1_1SyncConnection.html#a5">disconnect</a>() function call <a class="el" href="classGNE_1_1SyncConnection.html#a6">release</a>() if needed.<dl compact><dt><b>
Exceptions: </b><dd>
<table border=0 cellspacing=2 cellpadding=0>
<tr><td valign=top><em><a class="el" href="classGNE_1_1Error.html">Error</a></em>&nbsp;</td><td>
 if an error occured while writing, or an error occured since the last interaction with this object. </td></tr>
</table>
</dl>    </td>
  </tr>
</table>
<a name="a8" doxytag="GNE::SyncConnection::operator>>"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> SyncConnection &amp; GNE::SyncConnection::operator&gt;&gt; </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classGNE_1_1Packet.html">Packet</a> &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp; <em>packet</em>          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
You should provide an already allocated packet whose <a class="el" href="classGNE_1_1Packet.html#a6">Packet::readPacket</a> function will be called. There will be type checking performed before this call to make sure the right packet is being read. If there is a mismatch, an error is thrown. The passed packet is untouched, and the connection remains connected; however, the data just received (the incorrect packet) is lost. The connection will remain connected in this case.<dl compact><dt><b>
Exceptions: </b><dd>
<table border=0 cellspacing=2 cellpadding=0>
<tr><td valign=top><em><a class="el" href="classGNE_1_1PacketTypeMismatch.html">PacketTypeMismatch</a></em>&nbsp;</td><td>
 if the read packet was of the wrong type. </td></tr>
<tr><td valign=top><em><a class="el" href="classGNE_1_1Error.html">Error</a></em>&nbsp;</td><td>
 if an error occured while reading, or an error occured since the last interaction with this object. </td></tr>
</table>
</dl>    </td>
  </tr>
</table>
<a name="a6" doxytag="GNE::SyncConnection::release"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void GNE::SyncConnection::release </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp;          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Releases this <a class="el" href="classGNE_1_1SyncConnection.html">SyncConnection</a>, returning the underlying <a class="el" href="classGNE_1_1Connection.html">Connection</a> to its previous event handler.
<p>
Once a <a class="el" href="classGNE_1_1SyncConnection.html">SyncConnection</a> has been released, then it is essentially in an invalid state and should not be used anymore (with the exception of the dtor, <a class="el" href="classGNE_1_1SyncConnection.html#a2">getConnection</a>(), <a class="el" href="classGNE_1_1SyncConnection.html#a7">isReleased</a>(), and this function). This function throws an <a class="el" href="classGNE_1_1Error.html">Error</a> if some underlying pending operations failed since the last call on this <a class="el" href="classGNE_1_1SyncConnection.html">SyncConnection</a>.
<p>
If release is called when the <a class="el" href="classGNE_1_1SyncConnection.html">SyncConnection</a> is already released, no errors will be thrown.
<p>
onReceive will be called in the original listener after release if necessary, and onDoneWriting will be called after release if any data since writing packets.<dl compact><dt><b>
Exceptions: </b><dd>
<table border=0 cellspacing=2 cellpadding=0>
<tr><td valign=top><em><a class="el" href="classGNE_1_1Error.html">Error</a></em>&nbsp;</td><td>
 if an error has occured since the last operation on this <a class="el" href="classGNE_1_1SyncConnection.html">SyncConnection</a> instance. </td></tr>
</table>
</dl>    </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="SyncConnection_8h-source.html">SyncConnection.h</a><li>SyncConnection.cpp</ul>
<hr><address><small>Generated on Fri Mar 8 03:03:23 2002 for GNE by
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.gif" alt="doxygen" align="middle" border=0 
width=110 height=53></a>1.2.13.1 written by <a href="mailto:dimitri@stack.nl">Dimitri van Heesch</a>,
 &copy;&nbsp;1997-2001</small></address>
</body>
</html>

