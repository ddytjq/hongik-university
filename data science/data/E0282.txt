ID=E0282
URL=http://www.hh.se/stud/d98rolb/ansi/errno.html
SIZE=4418
DATE=12/07/02
TIME=19:19:30
DATASET=C
HTML=<html>
<head>
  <title>errno</title>
  <meta name="Generator" content="GuideML V1.6">
  <meta http-equiv="Content-Type" content="text/html">
</head>
<body>
<a href="main.html"><img src="toc.gif" alt="CONTENTS" border=0></a><a href="alphalist.html"><img src="index.gif" alt="INDEX" border=0></a><a href="usefultables.html"><img src="prev.gif" alt="PREV" border=0></a><a href="abort().html"><img src="next.gif" alt="NEXT" border=0></a><a href="http://www.hh.se/stud/d98rolb/programming.html"><img src="home.gif" alt="HOME" border=0></a>
<hr>
<pre>
errno-UNIX error number

Synopsis

        #include &#060;error.h&#062;

        extern int errno;

Description

        The external integer errno is initialized to 0 at start-up time.
        Then, if an error is detected by one of the standard library
        functions, a nonzero value is placed there.  The standard library
        never resets errno.

        Programmers typically use this information in two ways.  In some
        cases, it is appropriate to check errno after a sequence of
        operations and abort if any error occurred along the way.  In
        other cases, errno is checked periodically, and if it is nonzero,
        the appropriate corrective action is taken.  Then, the application
        program resets errno before beginning the next processing phase.

        The __sys_nerr and __sys_errlist items are defined in a C source
        file named syserr.c and are used by the <a href="perror().html"> perror </a> function to print
        messages that correspond to the code found in errno.

        Even though error information is normally placed into errno by the
        standard library functions, application programs can also use this
        technique to indicate problems.  However, you should be careful
        about adding new codes and messages just above the highest UNIX
        code currently defined, since new UNIX codes are occasionally
        added. Also, it is recommended that you add application-dependent
        codes by extending the header file error.h, which contains
        symbolic definitions of the code numbers.  The currently defined
        symbols are as follows:

            Symbol        Meaning
            ------        -------
            EOSERR        operating system error
            EPERM        user is not owner
            ENOENT        no such file or directory
            ESRCH        no such process
            EINTR        interrupted system call
            EIO         I/O error
            ENXIO        no such device or address
            E2BIG        arg list is too long
            ENOEXEC        EXEC format error
            EBADF        bad file number
            ECHILD        no child process
            EAGAIN        no more processes allowed
            ENOMEM        no memory available
            EACCES        access denied
            EFAULT        bad address
            ENOTBLK        block device required
            EBUSY        resource is busy
            EEXIST        file already exists
            EXDEV        cross-device link
            ENODEV        no such device
            ENOTDIR        is not a directory
            EISDIR        is a directory
            EINVAL        invalid argument
            ENFILE        no more files (units) allowed
            EMFILE        no more files (units) allowed for this process
            ENOTTY        not a terminal
            ETXTBSY        text file is busy
            EFBIG        file is too large
            ENOSPC        no space left
            ESPIPE        seek issued to pipe
            EROFS        read-only file system
            EMLINK        too many links
            EPIPE        broken pipe
            EDOM        math function argument error
            ERANGE        math function result is out of range


See Also

        <a href="perror().html"> perror </a>
</pre>
<hr>
<a href="main.html"><img src="toc.gif" alt="CONTENTS" border=0></a><a href="alphalist.html"><img src="index.gif" alt="INDEX" border=0></a><a href="usefultables.html"><img src="prev.gif" alt="PREV" border=0></a><a href="abort().html"><img src="next.gif" alt="NEXT" border=0></a><a href="http://www.hh.se/stud/d98rolb/programming.html"><img src="home.gif" alt="HOME" border=0></a>
</body>
</html>

