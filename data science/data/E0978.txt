ID=E0978
URL=http://www.delorie.com/djgpp/v2faq/faq15_9.html
SIZE=8374
DATE=12/07/02
TIME=19:26:25
DATASET=C
HTML=<html><head><title>DJGPP FAQ -- How much stack can I have in DJGPP programs?</title>
<base href="http://www.delorie.com/djgpp/v2faq/faq15_9.html">
</head><body><center><!-- BEGIN RICH-MEDIA BURST! CODE --> 
     <script language="JavaScript"> 
     <!-- /* (C) 1997-1999 BURST! Media, LLC. All Rights Reserved.*/ 
     var TheAdcode = 'ad1954a'; 
     var bN = navigator.appName; 
     var bV = parseInt(navigator.appVersion); 
     var base='http://www.burstnet.com/'; 
     var Tv='/5291'; 
     var agt=navigator.userAgent.toLowerCase(); 
     if (bN=='Netscape'){ 
          if ((bV>=4)&&(agt.indexOf("mac")==-1))
     {  document.write('<s'+'cript src="'+ 
           base+'cgi-bin/ads/'+TheAdcode+'.cgi/RETURN-CODE/JS' 
           +Tv+'">'); 
          document.write('</'+'script>');    
     } 
          else if (bV>=3) {document.write('<'+'a href="'+base+'ads/'+ 
             TheAdcode+'-map.cgi'+Tv+'"target=_top>'); 
             document.write('<img src="' + base + 'cgi-bin/ads/' + 
             TheAdcode + '.cgi' + Tv + '" ismap width=468 height=60' + 
             ' border=0 alt="Click Here"></a>');} 
      } 
     if (bN=='Microsoft Internet Explorer') 
      document.write('<ifr'+'ame id=BURST src="'+base+'cgi-bin/ads/'
     + 
       TheAdcode + '.cgi' + Tv + '/RETURN-CODE" width=468 height=60' + 
       'marginwidth=0 marginheight=0 hspace=0 vspace=0 ' + 
       'frameborder=0 scrolling=no></ifr'+'ame>'); 
     // --> 
     </script> 
     <noscript><a href="http://www.burstnet.com/ads/ad1954a-map.cgi" target=_top> 
     <img src="http://www.burstnet.com/cgi-bin/ads/ad1954a.cgi" 
      width=468 height=60 border=0 alt="Click Here"></a> 
     </noscript> 
     <!-- END BURST CODE --> 
<table width=100% border=0 cellspacing=0 cellpadding=3><tr><td align=left valign=top bgcolor="#ffcc99"><small><font face="itc avant garde gothic,helvetica,arial"><b> &nbsp;
<a href="/" target="_top">www.delorie.com</a>/<a href="/djgpp/" target="_top">djgpp</a>/<a href="/djgpp/v2faq/" target="_top">v2faq</a>/faq15_9.html</b></font></small></td>
<td align=right valign=top bgcolor="#ffcc99"><small><font face="itc avant garde gothic,helvetica,arial"><b> &nbsp;
<a href="/search/">search</a> &nbsp;
</b></font></small></td>
</tr></table><a href="bulktrap.html"></a></center>

Node:<a name="Stack%20size">Stack size</a>,
Next:<a rel=next href="faq15_10.html">Windows 98</a>,
Previous:<a rel=previous href="faq15_8.html">Swap out</a>,
Up:<a rel=up href="faq15.html">Memory</a>
<br>

<h2>15.9 How much stack can I have in DJGPP programs?</h2>

<p><em><strong>Q</strong>: My program bombs when I use very large automatic arrays.</em>

<br><p>
<p><em><strong>Q</strong>: How much stack space do I have in my program?</em>

<br><p>
<p><em><strong>Q</strong>: My program seems to overflow the stack, but only when I run it
under a debugger<small>...</small>.</em>

<br><p>
<p><em><strong>Q</strong>: My program crashes with SIGSEGV, but the traceback makes no
sense: it points to something called ___djgpp_exception_table<small>...</small>
When I try to debug this, the traceback mysteriously changes to some
innocent library function, like getc().  What is going on??</em>

<br><p>
<p><strong>A</strong>: DJGPP v2 programs get fixed-size stack which is allocated by the
startup code and then stays fixed for the entire lifetime of the
program; this is due to a bug/feature of the DPMI 0.9
specification<a rel=footnote href="faq25.html"><sup>26</sup></a>.  By default,
you have a 512KB-long stack (DJGPP v2.01 and earlier used 256KB stack),
but some programs which use large automatic arrays, or are deeply
recursive, might need more.  If the default stack size is not enough,
you can change it with the <code>STUBEDIT</code> program (change the parameter
"Minimum amount of stack space"), or by setting the global variable
<code>_stklen</code> in your program.  Example:

<pre> unsigned _stklen = 1048576;  /* need a 1MB stack */
</pre>

<p>The DJGPP startup code checks both the value in the stub (that can be
changed by <code>STUBEDIT</code>) and the value of <code>_stklen</code>, and uses
the larger of these two.  Therefore, programs that are known to require
large stack size should set <code>_stklen</code> to make sure they will always
work, even if somebody stub-edits them to a lower value.  Setting
<code>_stklen</code> is also safer to ensure sufficient stack size during
debugging (see below).  However, you might be left with <code>STUBEDIT</code>
as your only option of enlarging the stack with programs for which you
don't have the sources handy, or rebuilding which is not practical.

<p>Alternatively, you could rewrite your code to declare large arrays with
the <code>static</code> qualifier, or put their declaration outside any
function (thus making them static by default).  Static arrays don't use
stack space at all.

<p>Programs that need an unusually large stack might crash with bogus
stack traces, because part of the static data gets overwritten by the
overflowing stack.  To see if that is the cause of such crashes, run
<code>STUBEDIT</code> on your program and crank up the stack size to a large
value (like 4 MBytes).  If that makes the problem go away, tune the
stack limit to the minimum value your program can live with, then set
<code>_stklen</code> to an appropriate value as explained above and recompile
the program.  (Some DPMI hosts will actually allocate the entire stack,
even if not all of it is used, so leaving it at unnecessarily large
value will hurt the program on low-memory machines.)

<p>Some users have reported that they needed to enlarge the stack size of
the C<tt>++</tt> compiler, <code>cc1plus.exe</code>, to prevent it from crashing when
compiling some exceedingly large and complex C<tt>++</tt> programs.  Another
program that was reported to need a stack larger than the default is
<code>bccbgi.exe</code> from the <code>BCC2GRX</code> package.

<p>After you've used <code>STUBEDIT</code> to change the stack size, run it again
to make sure it displays as default the value you thought you entered. 
This is because <code>STUBEDIT</code> will sometimes silently set the stack
size to 0 (and then you will get the default 512K stack) if it doesn't
like the value you type (e.g. if it has a wrong syntax).

<p>When you run a raw COFF image under a debugger, the stack size is taken
from the debugger's stack size, which might not be appropriate for your
program .  So the only way to change the default stack size in these
cases is to set <code>_stklen</code>.  You can also stubedit the debugger, to
achieve the same effect, albeit at a price of more memory used by the
debugger.

<p>Under Windows 3.X, be sure you've allocated a sufficiently large swap
file (let's say, 40MBytes) from the Windows' Control Panel, and make
sure the <code>.PIF</code> file for your program doesn't have too low limit on
EMS/XMS usage (better make them both -1).  What's that?  You don't
have a <code>.PIF</code> file for this program?  Then Windows uses the default
file <code>DOSPRMPT.PIF</code>, which almost surely defines very low limits on
these two, and your program might have problems getting the memory it
needs for its stack.

<p>DJGPP v2.0 has a subtle bug in its startup code that is seen very
rarely, and that manifests itself by a program crashing with Page Fault
or SIGSEGV.  If you are using v2.0 and enlarging the stack and the
CWSDPMI heap size didn't help, try adding some (e.g., 4KB) static data
to your program and see if that helps.  But the best way to overcome
this is to upgrade to DJGPP v2.01 or later.

<p><hr>



<br clear=both></p>
<a href="bulktrap.html"></a><table width=100% border=0 cellspacing=0 cellpadding=3><tr>
<td align=left valign=top bgcolor="#ffcc99"><small><font face="itc avant garde gothic,helvetica,arial"><b> &nbsp;
<a href="/users/dj/" target="_top">webmaster</a> &nbsp;
<a href="/donations.html" target="_top">donations</a> &nbsp;
<a href="/store/books/" target="_top">bookstore</a> &nbsp;
</b></font></small></td>
<td align=right valign=top bgcolor="#ffcc99"><small><font face="itc avant garde gothic,helvetica,arial"><b> &nbsp;
<a href="/" target="_top">delorie software</a> &nbsp;
<a href="/privacy.html" target="_top">privacy</a> &nbsp;
</b></font></small></td>
</tr><tr><td align=left valign=top bgcolor="#ffcc99"><small><font face="itc avant garde gothic,helvetica,arial"><b> &nbsp;
<a href="/copyright.html" target="_top">Copyright © 2001</a> &nbsp;
<a href="/users/eliz/" target="_top">by Eli Zaretskii</a> &nbsp;
</b></font></small></td>
<td align=right valign=top bgcolor="#ffcc99"><small><font face="itc avant garde gothic,helvetica,arial"><b> &nbsp;
Updated Apr 2001 &nbsp;
</b></font></small></td>
</tr></table>
<center><iframe
 SRC="http://www.burstnet.com/cgi-bin/ads/ba1954a.cgi/RETURN-CODE/if/5291/"
 scrolling="no" marginwidth="0" marginheight="0" frameborder="0" vspace="0" hspace="0"
 width="468" height="60"><A target="_top"
 HREF="http://www.burstnet.com/ads/ba1954a-map.cgi/5291"><IMG SRC="http://www.burstnet.com/cgi-bin/ads/ba1954a.cgi/5291"
 border="0" width="468" height="60" alt="Please support our sponsor."></A></iframe><br><small><i>Please take a moment to fill out
this <a href="http://survey.burstmedia.com/cgi-win/client.exe?Burst,welcome,ad1954a,2000">visitor survey</a></i></small>
<br><small><i>You can help support this site by
visiting the advertisers that sponsor it! (only once each, though)</i></small>
</center>
</body></html>


