ID=E0778
URL=http://www.hh.se/stud/d98rolb/ansi/sprintf().html
SIZE=3074
DATE=12/07/02
TIME=19:24:21
DATASET=C
HTML=<html>
<head>
  <title>sprintf()</title>
  <meta name="Generator" content="GuideML V1.6">
  <meta http-equiv="Content-Type" content="text/html">
</head>
<body>
<a href="main.html"><img src="toc.gif" alt="CONTENTS" border=0></a><a href="alphalist.html"><img src="index.gif" alt="INDEX" border=0></a><a href="sinh().html"><img src="prev.gif" alt="PREV" border=0></a><a href="sqrt().html"><img src="next.gif" alt="NEXT" border=0></a><a href="http://www.hh.se/stud/d98rolb/programming.html"><img src="home.gif" alt="HOME" border=0></a>
<hr>
<pre>
sprintf-Formatted print to a string

Synopsis

        #include &#060;stdio.h&#062;

        length = sprintf(s,fmt,arg1,arg2,...);

        int length;                    /* number of characters generated */
        char *s;                    /* pointer to a character string */
        const char *fmt;            /* format string */
        type argx;                      /* arguments */

Description

        This function produces an output stream of ASCII characters and
        sends the output to the storage area whose address is given by the
        argument s.  Make sure that this area is large enough to hold the
        maximum number of characters that might be generated. The sprintf
        function also generates a NULL byte to terminate the stored
        string.

        This function works like the <a href="fprintf().html"> fprintf </a> function.    See the
        description of the <a href="fprintf().html"> fprintf </a> function earlier in this chapter for a
        complete description.


Returns

        This function returns the number of output characters generated.
        This number does not include the terminating NULL byte.

Example

        /*
         * This example prints a message indicating whether
         * the function argument is positive or negative.
         * In the second printf, the width and precision
         * are 15 and 8, respectively.
         */
        #include &#060;stdio.h&#062;

        void pneg(double value)
        {
            char *sign, buff[256];

            if (value &#060; 0) sign = &quot;negative&quot;;
            else sign = &quot;not negative&quot;;

            sprintf(buff,&quot;The number %E is %s.n&quot;, value, sign);
            printf(buff);
            sprintf(buff,&quot;The number %*.*E is %s.n&quot;, 15, 8, value, sign);
            printf(buff);
        }

        void main(void)
        {
            pneg(37.8);
            pneg(-18.2);
        }

See Also

        <a href="fprintf().html"> fprintf </a>, <a href="printf().html"> printf </a>
</pre>
<hr>
<a href="main.html"><img src="toc.gif" alt="CONTENTS" border=0></a><a href="alphalist.html"><img src="index.gif" alt="INDEX" border=0></a><a href="sinh().html"><img src="prev.gif" alt="PREV" border=0></a><a href="sqrt().html"><img src="next.gif" alt="NEXT" border=0></a><a href="http://www.hh.se/stud/d98rolb/programming.html"><img src="home.gif" alt="HOME" border=0></a>
</body>
</html>

