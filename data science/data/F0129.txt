ID=F0129
URL=http://jadebox.dreamhost.com/vbprog/html/what_s_wrong_with_vb_.html
SIZE=10238
DATE=09/07/2002
TIME=13:15:12
DATASET=Visual Basic
HTML=<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">

<HTML>
<HEAD>
<TITLE>What's Wrong With VB?</TITLE>
<meta name="keywords" content="Visual Basic,VB,VB5,VB6,Programming,Application,Development,Debug,Debugging,Basic,Metafiles,WMF,JPEG,JPG,GIF,Image,Images">

<META NAME="Generator" CONTENT="NetObjects Fusion 2.0.2 for Windows">

</HEAD>

<BODY BGCOLOR="#FFFFFF" LINK="#800000" VLINK="#808080" TEXT="#000000">
<TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH=1315>
<TR VALIGN="top" ALIGN="left">
<TD>

  <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=98>
   <TR VALIGN="top" ALIGN="left">
	<TD WIDTH=2 HEIGHT =75><IMG SRC="../assets/auto_generated_images/img_3dfbb805.gif" WIDTH =2 HEIGHT =1 BORDER=0></TD>
	<TD WIDTH=96><IMG SRC="../assets/auto_generated_images/img_3dfbb805.gif" WIDTH =96 HEIGHT =1 BORDER=0></TD>
   </TR>
   <TR VALIGN="top" ALIGN="left">
	<TD HEIGHT =230></TD>
	<TD WIDTH=96>
	  <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=3 >
	 <TR VALIGN="top" ALIGN="left">
		<TD WIDTH=90 HEIGHT=40><A HREF="../index.html"><IMG HEIGHT=40 WIDTH=90 SRC="../assets/auto_generated_images/img_49ab4036.gif"  BORDER=0  ALT=" Home " ></A></TD>
	 </TR>
	 <TR VALIGN="top" ALIGN="left">
		<TD WIDTH=90 HEIGHT=40><A HREF="../html/meta_files.html"><IMG HEIGHT=40 WIDTH=90 SRC="../assets/auto_generated_images/img_4a955d9fb.gif"  BORDER=0  ALT=" Meta Files " ></A></TD>
	 </TR>
	 <TR VALIGN="top" ALIGN="left">
		<TD WIDTH=90 HEIGHT=40><A HREF="../html/review__hardcore_visual_basic.html"><IMG HEIGHT=40 WIDTH=90 SRC="../assets/auto_generated_images/img_4c083bc1.gif"  BORDER=0  ALT=" Hardcore VB " ></A></TD>
	 </TR>
	 <TR VALIGN="top" ALIGN="left">
		<TD WIDTH=90 HEIGHT=40><A HREF="../html/what_s_wrong_with_vb_.html"><IMG HEIGHT=40 WIDTH=90 SRC="../assets/auto_generated_images/img_4c098c15.gif"  BORDER=0  ALT=" What's Wrong? " ></A></TD>
	 </TR>
	 <TR VALIGN="top" ALIGN="left">
		<TD WIDTH=90 HEIGHT=40><A HREF="../html/jpg_and_gif_sizes.html"><IMG HEIGHT=40 WIDTH=90 SRC="../assets/auto_generated_images/img_5138a491.gif"  BORDER=0  ALT=" Image Sizes " ></A></TD>
	 </TR>
	  </TABLE></TD>
   </TR>
   <TR VALIGN="top" ALIGN="left">
	<TD COLSPAN=2 HEIGHT =2888></TD>
   </TR>
  </TABLE>
</TD>
<TD>

  <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=1217>
   <TR VALIGN="top" ALIGN="left">
	<TD WIDTH=12 HEIGHT =60><IMG SRC="../assets/auto_generated_images/img_3dfbb805.gif" WIDTH =12 HEIGHT =1 BORDER=0></TD>
	<TD WIDTH=468><A HREF="http://www.jadebox.com/arrow/"><IMG HEIGHT=60 WIDTH=468 SRC="../assets/images/aniarrow.gif"  BORDER=0  ALT="Arrow" ></A></TD>
	<TD WIDTH=737><IMG SRC="../assets/auto_generated_images/img_3dfbb805.gif" WIDTH =737 HEIGHT =1 BORDER=0></TD>
   </TR>
  </TABLE>

  <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=1217>
   <TR VALIGN="top" ALIGN="left">
	<TD WIDTH=12 HEIGHT =11><IMG SRC="../assets/auto_generated_images/img_3dfbb805.gif" WIDTH =12 HEIGHT =1 BORDER=0></TD>
	<TD WIDTH=310><IMG SRC="../assets/auto_generated_images/img_3dfbb805.gif" WIDTH =310 HEIGHT =1 BORDER=0></TD>
	<TD WIDTH=895><IMG SRC="../assets/auto_generated_images/img_3dfbb805.gif" WIDTH =895 HEIGHT =1 BORDER=0></TD>
   </TR>
   <TR VALIGN="top" ALIGN="left">
	<TD HEIGHT =40></TD>
	<TD WIDTH=310><IMG HEIGHT=40 WIDTH=310 SRC="../assets/auto_generated_images/img_4c098df6.gif"  BORDER=0  ALT=" What's Wrong With VB? " ></TD>
	<TD></TD>
   </TR>
  </TABLE>

  <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=1217>
   <TR VALIGN="top" ALIGN="left">
	<TD WIDTH=12 HEIGHT =10><IMG SRC="../assets/auto_generated_images/img_3dfbb805.gif" WIDTH =12 HEIGHT =1 BORDER=0></TD>
	<TD WIDTH=468><IMG SRC="../assets/auto_generated_images/img_3dfbb805.gif" WIDTH =468 HEIGHT =1 BORDER=0></TD>
	<TD WIDTH=737><IMG SRC="../assets/auto_generated_images/img_3dfbb805.gif" WIDTH =737 HEIGHT =1 BORDER=0></TD>
   </TR>
   <TR VALIGN="top" ALIGN="left">
	<TD></TD>
	<TD WIDTH=468><P>Now don’t get me wrong.&nbsp; I love VB.&nbsp; For the kinds of applications I develop it is the best tool for Windows programming.&nbsp; But there are some things about the language and its environment that I do not like.</P><P>The biggest problem is that the language tries to do too much for you. One of the most common “gotcha’s” for VB programmers is VB’s weak type checking. Since version 4, VB has developed a split personality. Some features were added to make the language more strongly typed.&nbsp; At the same time, “features” were added which weakened type checking.</P><P>For example, if I try to use the “+” operator on a string I should get a type mismatch error.&nbsp; Also, if I try to use the “&amp;” operator on a number I would expect to get a type mismatch error (it doesn’t produce an error because the “&amp;” operator works on variants instead of strings):</P><P><FONT COLOR="#000000" FACE="Courier New,Courier"><TT>Dim A as Integer<BR>Dim B as Integer<BR>Dim C as Integer<BR>Dim X as String<BR>Dim Y as String<BR>Dim Z as String<BR>X = Y + Z ‘should be a type mismatch<BR>A = B &amp; C ‘should be a type mismatch</TT></FONT></P><P>But in both cases VB makes some sort of guess of what I meant.&nbsp; I make it a habit to use the cStr, cInt, cLng, and other conversion functions in any expression which mixes string and number types.</P><P>Another way VB is too helpful is with default properties.&nbsp; Default properties are an evil, evil thing.</P><P>What does the following do?</P><P><FONT COLOR="#000000" FACE="Courier New,Courier"><TT>Dim A as Font<BR>Dim B as Font<BR>&nbsp;...<BR>A = B</TT></FONT></P><P>It should either clone B into A (which is not really possible), set A to reference B, or generate an error.&nbsp; What it actually does is assign the value of B.Name to A.Name. It’s much too easy to type “A = B” when you mean “Set A = B”.&nbsp; For this reason you should never create default properties in Classes you define.&nbsp; And VB should offer an option to turn off default properties.</P><P>An example where VB doesn’t use the default property is:</P><P>Dim rs As Recordset<BR>Dim col As Collection</P><P><FONT COLOR="#000000" FACE="Courier New,Courier"><TT>Set rs = db.OpenRecordSet(....)<BR>Set col = New Collection<BR><BR>rs.MoveFirst<BR>While Not rs.EOF<BR>&nbsp; col.Add rs.Fields(“ID”)<BR>&nbsp; rs.MoveNext<BR>Wend<BR><BR></TT></FONT>What happens when you refer to col.Item(1) later?&nbsp; You will get a “No Current Record” error.&nbsp; “No Current Record” when all you’re doing is reading an ID from a collection?&nbsp; Yep.&nbsp; The Add method of the Collection object adds a reference to the Field object rather than adding value of the Field object’s default Value property.&nbsp; This is correct, but it’s easy to get used to VB using the default property.</P><P>VB’s IDE is too helpful.&nbsp; It continually changes your source code. This would not be a real problem if it worked correctly, but it doesn’t.&nbsp; The IDE’s parser has no concept of scope. For example enter the following in a module:</P><P><FONT COLOR="#000000" FACE="Courier New,Courier"><TT>Private Type NewType<BR>&nbsp; HelloWorld as Integer<BR>End Type</TT></FONT></P><P><FONT COLOR="#000000" FACE="Courier New,Courier"><TT>Private Sub WhatsUp(HelloWorld as Integer)<BR>End Sub</TT></FONT></P><P>Now change the case of “HelloWorld” in the Sub to “HelloWORLD”. VB changes the field name in the Type declaration!</P><P>Even worse is the way it handles enumerated constants.&nbsp; Enter the following in a module:</P><P><FONT COLOR="#000000" FACE="Courier New,Courier"><TT>Private Enum Whoops<BR>&nbsp; Value1<BR>&nbsp; Value2<BR>End Enum</TT></FONT></P><P><FONT COLOR="#000000" FACE="Courier New,Courier"><TT>Private Sub HereWeGo()<BR>&nbsp; Dim X as Integer<BR>&nbsp; X = Value1<BR>End Sub</TT></FONT></P><P>Now change “X = Value1” to “X = VALUE1” - VB changes the case of the declaration.&nbsp; Yuck. VB’s IDE should offer the ability to turn off this “feature” so that you have control over the appearance of your source code.</P><P>Other problems in VB stem from new language features that don’t seem to be fully implemented.&nbsp; The most obvious is the lack of real inheritance for classes. Less obvious, but often more annoying, is the inability to pass arguments when creating a new object.&nbsp; Of course, VB’s always had the problem that you can’t initialize a variable when declaring it.&nbsp; Not being able to specify properties when instantiating an object just makes that weakness more noticeable.</P><P>Version 6 of Visual Basic fixed a few of the language’s weaknesses (such as not being able to pass User Defined Types to procedures), but it seems like most of the effort went into developing new gee-whiz stuff for web developers. Fixing the language was apparently not a high priority. They did add some nice things.&nbsp; As I mentioned, you can pass UDTs to subs and functions now. Microsoft added some intrinsic string functions that can make programs which parse text run many times faster. Also, the new Dictionary object works the way the Collection object in VB5 should have worked. Unless you really need the new web features, you won’t see VB6 as a major upgrade.&nbsp; But it is a nice minor upgrade.</P><P>&nbsp;</TD>

	<TD></TD>
   </TR>
  </TABLE>

  <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0>
   <TR VALIGN="top" ALIGN="left">
	<TD WIDTH=19 HEIGHT =6><IMG SRC="../assets/auto_generated_images/img_3dfbb805.gif" WIDTH =19 HEIGHT =1 BORDER=0></TD>
	<TD WIDTH=431><IMG SRC="../assets/auto_generated_images/img_3dfbb805.gif" WIDTH =431 HEIGHT =1 BORDER=0></TD>
	<TD WIDTH=767><IMG SRC="../assets/auto_generated_images/img_3dfbb805.gif" WIDTH =767 HEIGHT =1 BORDER=0></TD>
   </TR>
   <TR VALIGN="top" ALIGN="left">
	<TD></TD>
	<TD NOWRAP> [<A HREF="../index.html">Home</A>]  [<A HREF="../html/meta_files.html">Meta&nbsp;Files</A>]  [<A HREF="../html/review__hardcore_visual_basic.html">Hardcore&nbsp;VB</A>]  [<A HREF="../html/what_s_wrong_with_vb_.html">What's&nbsp;Wrong?</A>]  [<A HREF="../html/jpg_and_gif_sizes.html">Image&nbsp;Sizes</A>] </TD>
	<TD></TD>
   </TR>
   <TR VALIGN="top" ALIGN="left">
	<TD COLSPAN=3 HEIGHT =975></TD>
   </TR>
  </TABLE>
</TD>
</TR>
</TABLE>
</BODY>
</HTML>

