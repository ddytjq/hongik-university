ID=E0461
URL=http://www.cprogramming.com/codej/issue3.html
SIZE=26081
DATE=12/07/02
TIME=19:21:05
DATASET=C
HTML=<html>

<HEAD>

<meta http-equiv="name" content="C and C++ game programming">

<meta name="keywords"

content="C++ programming, programmers, C++ tutorial, C, source code, tutorials, C++ compiler, binary tree">

<meta name="description"

content="Cprogramming.com is a combination of C++ tutorials, compiler information, programming links, a VERY ACTIVE programming message board, and C and C++ source code .">

<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">

<TITLE>Cprogramming.com: Code Journal Issue 2</TITLE>
</head>



<body bgcolor=white link="#ff0008" vlink="#ff0008">

  


<table cellspacing=0 cellpadding=0 border=0><tr><td valign=top width=1 bgcolor=black>
<img src="line.gif" width=1 height=62>




</td><td valign=top width=92>


<img src="one.gif" width=92 height=63><br><br>

<table><tr><td width=3></td><td>
<font size=2 face="arial" color="#b4b4b4">
<li><a href="/index.html">Home</a></li>
</font>

</td></tr></table>


<img src="learn.gif" width=92 height=30 alt="Learn"><br>


<table><tr><td width=3></td><td>
<font size=2 face="arial" color="#b4b4b4">
<li><a href="/tutorial.html">Tutorials</a></li>

<li><a href="/source.html">Source</a></li>
<li><a href="/books.html">Books</a></li>
<li><a href="http://www.cprogramming.com/cgi-bin/cdir/Cdirectory.cgi">Directory</a></li>
<li><A href="http://www.cprogramming.com/cgi-bin/quiz.cgi">Quiz</A></li>

</font>
</td></tr></table>


<img src="comp.gif" width=92 height=30 alt="Learn"><br>

<table><tr><td width=3></td><td>

<font size=2 face="arial" color="#b4b4b4">
<li><a href="/borland.html">Borland</a></li>

<li><a href="/djgpp.html">DJGPP</a></li>
<li><a href="/other.html">Other</a></li>
</font>
</td></tr></table>

<img src="q.gif" width=92 height=30 alt="Learn"><br>

<table><tr><td width=3></td><td>

<font size=2 face="arial" color="#b4b4b4">
<li><a href="http://www.cprogramming.com/board.html">C board</a></li>
<li><A href="/function.html">Functions</a></li>
<li><a href="/email.html">Email</a></li>
</font>
</td></tr></table>

 
 
</td><td valign=top width=1 bgcolor="#dfdfdf"><img src="dot.gif" width=1 height=1></td><td valign=top>



<A href="http://www.cprogramming.com/"><img src="cprog.gif" width=497 height=111 alt="Cprogramming.com - your resource for C/C++" border=0></A><center><A href="http://www.cprogramming.com/"></a>
<table border=0 cellspacing=0 cellpadding=0 width=470 height=84><tr><td align=center> 
 <iframe src="http://a.tribalfusion.com/f.ad?site=Cprogrammingcom&adSpace=ROS&requestID=622570084" width=470 height=84 marginwidth=0 marginheight=0 hspace=0 vspace=0 frameborder=0 scrolling=no>
         <script language=javascript>
           randNum = ((new Date()).getTime() % 2147483648) + Math.random();
           document.write(
             "<a href='http://a.tribalfusion.com/i.click?site=Cprogrammingcom&adSpace=ROS&requestID=" + randNum + "' target=_blank >" +
             "<img src='http://a.tribalfusion.com/i.ad?site=Cprogrammingcom&adSpace=ROS&requestID=" + randNum + "'" +
               "width=468 height=60 border=0 alt='Click Here'><br><b>Click Here!</b></a>");
         </script>
         <noscript>
             <a href="http://a.tribalfusion.com/i.click?site=Cprogrammingcom&adSpace=ROS&requestID=622570084" target=_blank >
             <img src="http://a.tribalfusion.com/i.ad?site=Cprogrammingcom&adSpace=ROS&requestID=622570084" 
                  width=468 height=60 border=0 alt="Click Here"><br><b>Click Here!</b></a>
         </noscript>
 </iframe></td></tr></table>
</center>
      <table>
        <tr> 
          <td width=20></td>
          <td> 
            <h3><font size="2" face="Courier New, Courier, mono">Code Journal</font></h3>
            <P><font size="2" face="Courier New, Courier, mono"><B>Code Journal</B> 
              is a free, biweekly newsletter on programming and computer science 
              provided jointly by <A HREF="http://www.cprogramming.com/">Cprogramming.com</A> 
              and <a href="http://www.aihorizon.com">AI Horizon</a>. There is 
              also an <A HREF="http://www.cprogramming.com/codej.html">archive</A> 
              of all past issues on both websites. </font></P>
            <P><font face="Courier New, Courier, mono" size="2">C<b>ODE JOURNAL: 
              Your Guide to Programming</b></font> </p>
            <p><font face="Courier New, Courier, mono" size="2">February 5, 2002</font></p>
            <p><font size="2" face="Courier New, Courier, mono">In This Edition:<br>
              - <a href="#welcome">Welcome to the Code Journal</a><br>
              - <a href="#a1">What's the Point of C#</a><br>
              - <a href="#a2">Search and ... Employ?</a><br>
              - <a href="#cc">Programming Challenge</a><br>
              - <a href="#er">Errata</a><br>
              <br>
              <a name="welcome"></a>Welcome to Code Journal, a joint venture between 
              Cprogramming.com <br>
              (<a href="http://www.cprogramming.com">http://www.cprogramming.com</a>) 
              and AI Horizon (<a href="http://www.aihorizon.com">http://www.aihorizon.com</a>)<br>
              that aims to provide insightful articles on both C++ and algorithmic 
              <br>
              programming. Code Journal is helpware: in return for reading it, 
              you <br>
              are asked to help someone else out with their own programming problems. 
              <br>
              Good luck, and quick compiling.</font></p>
            <p><font size="2" face="Courier New, Courier, mono"><br>
              ---------------------------------------------------------<br>
              <b><a name="a1"></a>C/C++ Programming by Alex Allain</b><br>
              ---------------------------------------------------------<br>
              <b>What's the point of C#?</b></font></p>
            <p><font size="2" face="Courier New, Courier, mono">There has been 
              BCPL, C, and C++; Microsoft recently introduced yet <br>
              another language in the same naming tradition: <font color="#009900">C#</font> 
              (pronounced &quot;C sharp&quot;).<br>
              C# is a language designed to be fully compatible with Microsoft's 
              <br>
              <font color="#009900">.NET</font> initiative while taking advantage 
              of what has been learned <br>
              from C and C++ (as well as Java).</font></p>
            <p><font size="2" face="Courier New, Courier, mono">C# is designed 
              to be a platform-independent language in the tradition<br>
              of Java. It's syntax is similar to C and C++ syntax, and C# is <br>
              designed to be an object-oriented language. There are, for the most 
              <br>
              part, minor variations in syntax between C++ and C#. Main has no 
              <br>
              return type, there are no semicolons after class names, there are 
              <br>
              some (to C++ programmers) strange decisions regarding capitalisation 
              <br>
              - such as the capitalisation of Main. Other a few differences, <br>
              the syntax is often the same. This decision is reasonable, in light 
              of <br>
              the fact that C syntax has been used with several other languages 
              -<br>
              notably Java.</font></p>
            <p><font size="2" face="Courier New, Courier, mono">Similar to Java, 
              C# does not support multiple inheritence; instead it <br>
              provides Java's solution:<font color="#009900"> interfaces</font>. 
              Interfaces implemented by a<br>
              class specify certain functions that the class is guaranteed to 
              implement. <br>
              Interfaces avoid the messy dangers of multiple inheritence while 
              maintaining<br>
              the ability to let several classes implement the same set of methods.</font></p>
            <p><font size="2" face="Courier New, Courier, mono">Another helpful 
              feature of C# is <font color="#009900">garbage collection</font>. 
              Therefore, it is <br>
              unnecessary to include a destructor for each class unless a class 
              <br>
              hanldes unmanaged resources; if so, it's necessary to release control 
              those<br>
              resources from within the class (The Finalize function is used to 
              clear<br>
              up these unmanged resources; it can even be abbreviated with the 
              same<br>
              syntax as a C++ destructor). Of course, C# also provides direct 
              access <br>
              to memory through C++ style pointers, but these pointers are not 
              garbage <br>
              collected until specficially released by the programmer.</font></p>
            <p><font size="2" face="Courier New, Courier, mono">C#, as part of 
              the .NET framework, is compiled to <font color="#009900">Microsoft 
              Intermediate<br>
              Language</font> (<font color="#009900">MSIL</font>), which is a 
              language similar to Java's bytecode. MSIL allows<br>
              C# to be platform independent and runs using just in time compiling. 
              Therefore <br>
              programs running under .NET gain speed with repeated use. Furthermore, 
              because <br>
              the other languages that make up the .NET platform (including VB 
              and Cobol) <br>
              compile to MSIL, it is possible for classes to be inherited across 
              languages.<br>
              The MSIL, like bytecode, is what allows C# to be platform independent.</font></p>
            <p><font size="2" face="Courier New, Courier, mono">The potential 
              for C# is great if the .NET platform succeeds. C# is designed to 
              <br>
              take advantage of the design of .NET, and Microsoft has poured a 
              great deal of <br>
              money into .NET. Do you need to learn C#? If you knoow C++, you'll 
              probably<br>
              be able to pick it up quickly, and yes, you can still use C++ with 
              .NET. It's<br>
              important to keep an eye on C# to see how it will affect you.</font><br>
            </p>
            <p><font size="2" face="Courier New, Courier, mono"> </font><font size="2" face="Courier New, Courier, mono"><br>
              ********************<br>
              Alexander Allain is the webmaster of <a href="http://www.cprogramming.com">http://www.cprogramming.com</a>.<br>
              Contact him at <a href="mailto:webmaster@cprogramming.com">webmaster@cprogramming.com</a></font></p>
            <p><font size="2" face="Courier New, Courier, mono">---------------------------------------------------------<br>
              <b><a name="a2"></a>Algorithms and Programming by Eric Suh</b><br>
              ---------------------------------------------------------</font></p>
            <p><font size="2" face="Courier New, Courier, mono"><b>Search and 
              ... Employ ?</b></font></p>
            <p><font size="2" face="Courier New, Courier, mono">All right, so 
              you've read about sorting algorithms at AI Horizon, and now <br>
              you've got a sorted array. Just having a sorted array, however, 
              doesn't do<br>
              anything for you unless you are going to search for things in the 
              array<br>
              itself.</font></p>
            <p><font size="2" face="Courier New, Courier, mono">Assume you have 
              a sorted array. Now, when you search for that item, what you <br>
              really want to do is see if the item is actually stored in the array. 
              If it <br>
              isn't, then you want the algorithm to say so. If the item actually 
              is present,<br>
              however, then you want the algorithm to not only say that it is 
              present, but<br>
              you also want to have the algorithm return the entire element so 
              that you can<br>
              access it.</font></p>
            <p><font size="2" face="Courier New, Courier, mono">Now, let's say 
              that the elements of your sorted array are records of employees,<br>
              sorted by the employee's 3-digit company ID number (this is a small 
              company,<br>
              so the number is - we can hope - unique to each employee). Now, 
              we want to<br>
              see if an employee with a certain ID number - 243, for instance 
              - exists.<br>
              Let's call that number the target number.</font></p>
            <p><font size="2" face="Courier New, Courier, mono">There are a variety 
              of algorithms to search a sorted array, but we shall<br>
              examine only two of them. One is extremely simple, and the other 
              one is still<br>
              easy, but it is greatly more efficient.</font></p>
            <p><font size="2" face="Courier New, Courier, mono">The simplest way 
              is to just start at the beginning of the array and compare,<br>
              from smallest to greatest, each employee's ID number with the target 
              number. <br>
              When the target number becomes smaller than an employee's ID number, 
              then we <br>
              know that the target number isn't in the array.</font></p>
            <p><font size="2" face="Courier New, Courier, mono">Of course, if 
              the target number were really big, then we'd have to compare it 
              <br>
              to almost every single element in the array before deciding whether 
              or not it<br>
              is in the array.</font></p>
            <p><font size="2" face="Courier New, Courier, mono">This method works 
              well for situations where you can only access the elements <br>
              of the array in order; this kind of array is called a <font color="#009900">stream</font>, 
              and you often <br>
              use this method with ordered <font color="#009900">linked lists</font>, 
              where you have to start at the <br>
              beginning and just compare down the entire linked list.</font></p>
            <p><font size="2" face="Courier New, Courier, mono">For normal arrays, 
              however, there is a more efficient method. This algorithm <br>
              relies upon the fact that you can access any element of the array 
              without <br>
              having to go through all of the elements before it; this ability 
              is called <br>
              random access. (On a side note, the temporary memory in your computer 
              is <br>
              basically a big array that you can access like this, and so it is 
              called <br>
              <font color="#009900">Random Access Memory</font>, or RAM.)</font></p>
            <p><font size="2" face="Courier New, Courier, mono">Let's say our 
              ordered array has 100 employees recorded in it. Since we can <br>
              access any array element we want, wouldn't it be more efficient 
              to start <br>
              searching in the middle of the array instead of at the end? If the 
              target <br>
              number is less than the middle employee's ID number, then we know 
              that all <br>
              of the numbers coming after this employee's ID are going to be bigger 
              than <br>
              the target number anyway. If the target's bigger, than the situation 
              is just <br>
              the opposite. So, we can eliminate half the array from the search!</font></p>
            <p><font size="2" face="Courier New, Courier, mono">Now, we're down 
              to one section of the array. We could just start searching <br>
              from one end of that section and keep working our way to the end.or 
              we could <br>
              just treat it as another array and use the previous step again. 
              Now, we can <br>
              do this over and over until we either find an element that matches 
              the target <br>
              number, or we're down to a section with only one element in it that 
              doesn't <br>
              match the target number. So, we've got the results we wanted, and 
              the <br>
              algorithm is much faster than just searching from one end.</font></p>
            <p><font size="2" face="Courier New, Courier, mono">For the people 
              knowledgeable about <font color="#009900">Big-O</font> notation 
              and mathematics, this <br>
              algorithm is essentially O(log2(n)). That is, this algorithm has 
              the <br>
              order-of-magnitude similar to the logarithm of n to the base 2, 
              where n is the<br>
              number of elements in the sorted array.</font></p>
            <p><font size="2" face="Courier New, Courier, mono">What does this 
              mean in non-mathematical terms? Well, if you have a sorted <br>
              array of one thousand elements, using the first searching method, 
              you might <br>
              search all of the elements, making up to 1000 comparisons in the 
              worst case. <br>
              With the second method, however, you will make at most about 10 
              comparisons. <br>
              The time saved gets even better when you get to talking about extremely 
              large <br>
              numbers: for a huge array of 1 trillion elements (American trillion, 
              that is, <br>
              which is numerically 1,000,000,000,000), using the second method, 
              you only have <br>
              to make up to 40 comparisons. That's it!</font></p>
            <p><font size="2" face="Courier New, Courier, mono">The way you implement 
              this algorithm is really quite simple. You need two<br>
              variables: a low variable and a high variable, which keep track 
              of the ends <br>
              of the section of the array that you are looking at. Initially, 
              the low <br>
              variable will store the index value of the first element of the 
              array <br>
              (in C++, that is normally 0) and the high variable will store the 
              index <br>
              value of the last element of the array (in C++, that would be n-1, 
              where n is <br>
              the number of elements).</font></p>
            <p><font size="2" face="Courier New, Courier, mono">You need to find 
              the middle of the section. The index for the middle element <br>
              is basically (hi - lo)/2 + lo rounded off to the nearest integer 
              in some <br>
              manner. If t, the target number, is less than the middle element, 
              then reset <br>
              hi to equal that middle element's index. If t is greater than the 
              middle <br>
              element, then reset lo to equal the middle element's index instead. 
              In this <br>
              way, you will eventually narrow down on where the target number 
              should be in <br>
              the array.</font></p>
            <p><font size="2" face="Courier New, Courier, mono">This handy little 
              algorithm has been used everywhere, and it has even been <br>
              modified to be used in a Chess playing algorithm called MTD(f). 
              The algorithm <br>
              that you have just learned is called the &quot;b<font color="#009900">inary 
              search algorithm</font>&quot;, so titled <br>
              because you keep on dividing the array into two halves. So, have 
              fun with <br>
              this new, time-saving search algorithm.</font><br>
            </p>
            <p><font size="2" face="Courier New, Courier, mono">************************************<br>
              Eric Suh is the webmaster of AI Horizon (<a href="http://www.aihorizon.com/">http://www.aihorizon.com/</a>), 
              a site<br>
              devoted to Artificial Intelligence and Computer Science programming.<br>
              Contact him at <a href="mailto:webmaster@aihorizon.com">webmaster@aihorizon.com</a><br>
              <br>
              <br>
              <br>
              ---------------------------------------------------------<br>
              <b><a name="cc"></a>Code Challenge</b><br>
              ---------------------------------------------------------</font></p>
            <p><font size="2" face="Courier New, Courier, mono">At the end of 
              every issue we will issue a programming challenge and ask<br>
              people to submit their solutions within two weeks. The best solutions<br>
              will be published the next issue, along with a new challenge.</font></p>
            <p>Congratulations to top three finishers in the Towers of Hanoi challenge: 
              <br>
              James Galloway, Praveena.M, and Thota Raja Sekhar.</p>
            <p><font size="2" face="Courier New, Courier, mono">Source code available 
              at<br>
              <a href="http://www.cprogramming.com/source/jghanoi.c">http://www.cprogramming.com/source/jghanoi.c</a><br>
              <a href="http://www.cprogramming.com/source/pmhanoi.cpp">http://www.cprogramming.com/source/pmhanoi.cpp</a><br>
              <a href="http://www.cprogramming.com/source/trshanoi.cpp">http://www.cprogramming.com/source/trshanoi.cpp</a></font></p>
            <p><font size="2" face="Courier New, Courier, mono">This week's challenge:</font></p>
            <p><font face="Courier New, Courier, mono" size="2">One famous chess 
              problem is the Knight's Tour, in which a knight, placed on<br>
              a starting square, is then moved to every other square on the chessboard.<br>
              The Knight's Tour is a fairly typical chess problem. Your challenge 
              is not<br>
              only to write a program to calculate the Knight's Tour from any 
              square on the<br>
              board, but also to allow the user to add up to five pieces to the 
              board that<br>
              the moving knight must avoid capturing and must also avoid being 
              moved onto<br>
              a square where it could be captured. As an interesting note, in 
              _The <br>
              Psychology of Chess_ the authors talk about a test for chess talent 
              that<br>
              works under similar conditions and is based on the speed of response.<br>
              The test accurately predicated a future grandmaster.</font><br>
              <font size="2" face="Courier New, Courier, mono"><br>
              <br>
              Send your solution's source code to <a href="mailto:codejournal@cprogramming.com">codejournal@cprogramming.com</a>, 
              and you may <br>
              find it published (Note: due to length of code, solutions will be 
              downloadable<br>
              from the web rather than printed). Please include either your name 
              or an <br>
              identifying username so that we may attribute the solution to you 
              in the next <br>
              newsletter. If you wish, you may ask us to withhold your name.<br>
              <br>
              ---------------------------------------------------------<br>
              <b><a name="er"></a>Errata to previous issue</b><br>
              ---------------------------------------------------------</font></p>
            <p><font size="2" face="Courier New, Courier, mono">In the previous 
              issue we made two major mistakes:<br>
              Eric wrote that the fiftieth element of an array is accessed by 
              typing</font></p>
            <p><font size="2" face="Courier New, Courier, mono"> employees[50];</font></p>
            <p><font size="2" face="Courier New, Courier, mono">He should have 
              written</font></p>
            <p><font size="2" face="Courier New, Courier, mono"> employees[49];</font></p>
            <p><font size="2" face="Courier New, Courier, mono">As well, Alexander 
              wrote that C++ has no Exclusive-Or operator. It does, <br>
              however. ^ is the symbol for bitwise exclusive-or. Eg, </font></p>
            <p><font size="2" face="Courier New, Courier, mono"> A^B;</font></p>
            <p><font size="2" face="Courier New, Courier, mono">We apologize for 
              these mistakes, and if we have made any errors in this <br>
              issue, please inform us.<br>
              ---------------------------------------------------------<BR>
              Suggestions and comments on this newsletter should be sent to <A HREF="mailto:codejournal@cprogramming.com">codejournal@cprogramming.com</A> 
              or <A HREF="mailto:codejournal@aihorizon.com">codejournal@aihorizon.com</A>.<BR>
              <BR>
              <B>Editors:</B><BR>
              Eric Suh, <A HREF="mailto:webmaster@aihorizon.com">webmaster@aihorizon.com<BR>
              </A> Alexander Allain, <A HREF="mailto:webmaster@cprogramming.com">webmaster@cprogramming.com</A><BR>
              <BR>
              To unsubscribe from this journal, send a blank email to <A HREF="mailto:codejournal-unsubscribe@mlm.cprogramming.com">codejournal-unsubscribe@mlm.cprogramming.com</A>. 
              </font></p>
          </td>
        </tr>
        <tr>
          <td width=20></td>
          <td>&nbsp;</td>
        </tr>
      </table>
</td></tr></table>









 
<IMG SRC="/cgi-bin/axs/ax.pl?trans.gif" HEIGHT="1" WIDTH="1">
	
</body>



<SCRIPT LANGUAGE="JavaScript">
	<!--
		document.write("<IMG SRC=\"/cgi-bin/axs/ax.pl?trans.gif&ref=");
		document.write(document.referrer);
		document.write("\" HEIGHT=1 WIDTH=1>");
	// -->
	</SCRIPT><NOSCRIPT>
		</NOSCRIPT></html>
