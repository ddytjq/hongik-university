ID=F0380
URL=http://vbtechniques.com/content.asp?a=co&cID=633
SIZE=11186
DATE=09/07/2002
TIME=13:19:49
DATASET=Visual Basic
HTML=<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<title>VB Techniques: Interview with Steve Schmidt</title>
<style type="text/css" title="Techniques Style Sheet">
<!-- This is the toolbar at the top of the page -->
.headingbar {
	background-color : Black;
	color: White;
}
.headinglink {
	color : White;
	text-decoration : none;
	font-family : Tahoma, Arial, sans-serif;
	font-size : 8pt;
}

<!-- All standard text in the page gets this style -->
.text {
	color: Black;
	font-family: Tahoma, Arial, sans-serif;
	font-size: 10pt;
}

.text_grayed {
	color: Silver;
	font-family: Tahoma, Arial, sans-serif;
	font-size: 10pt;
}

.text_error {
	color: Red;
	font-family: Tahoma, Arial, sans-serif;
	font-size: 10pt;
}

<!-- The title on the page uses this style -->
.pageheading {
	color: #000080;
	font-family: Verdana, Arial, sans-serif;
	font-size: 16pt;
	font-weight: bold;
	
}
.subheading {
	color: #000080;
	font-family: Verdana, Arial, sans-serif;
	font-size: 12pt;
	font-weight: bold;
}
.copyright
{
    COLOR: #000000;
    TEXT-ALIGN: left;
    FONT-FAMILY: Tahoma, Arial, sans-serif;
    FONT-SIZE: 8pt
}

<!-- Prompts and boxes in forms use this style -->
.form {
	font-family: Arial, sans-serif;
	font-size: 8pt;
}
.tableheading {
	font-family: Arial, sans-serif;
	font-size: 8pt;
	color: white;
	background-color: #000080;
	text-align : center;
}
.table {
	font-family: Arial, sans-serif;
	font-size: 8pt;
	background-color: White;
}
.tableshaded {
	font-family: Arial, sans-serif;
	font-size: 8pt;
	background-color: Silver;
}
.tabletoday {
	font-family: Arial, sans-serif;
	font-size: 8pt;
	background-color: Silver;
}
PRE {
   padding-top: 10px;
   padding-bottom: 10px;
   padding-left: 10px;
   background-color: #EEEEEE;
}

</style>
<script language="JavaScript">
function onLink(L)
{
	if (L.style.color = 'White')
	{
	   L.style.color = 'Yellow';
		L.style.textDecoration = "underline";
	}
}
function offLink(L)
{
	if (L.style.color = 'Yellow')
	{
		L.style.color = 'White';
		L.style.textDecoration = "none";
	}
		
}
</script>
</head>
<body leftmargin="0" topmargin="0" marginheight="0" marginwidth="0" bgcolor="#FFFFFF">
<table width=100% cellspacing=0 cellpadding=4 border=0>
<tr><td width="250" background="/images/stripe_vb.gif"><img src="/images/logo_vb.gif" valign="middle" width=250 height=80 border=0></td><td width="100%" background="/images/stripe_vb.gif"><a href="http://click.linksynergy.com/fs-bin/stat?id=0DYcYQoW7OM&subid=0"><IMG alt=icon border=0 hspace=50 vspace=10  width=468 height=60 src="http://ad.linksynergy.com/fs-bin/show?id=0DYcYQoW7OM&bids=+22117.10000191+22117.10000192+22117.10000196+27778+29496+29744+31083&gridnum=1&subid=0"></a></td></tr>
<tr><td colspan=2 class=headingbar bgcolor="#000000##"><span class=headinglink>
<a href="default.asp"><span class="headinglink" onmouseover="onLink(this);" onmouseout="offLink(this);">Home</span></a>
&nbsp;&#8226;&nbsp;
<a href="search.asp"><span class="headinglink" onmouseover="onLink(this);" onmouseout="offLink(this);">Search</span></a>
&nbsp;&#8226;&nbsp;
<a href="forum.asp"><span class="headinglink" onmouseover="onLink(this);" onmouseout="offLink(this);">Forums</span></a>
&nbsp;&#8226;&nbsp;
<a href="content.asp?a=se&sID=5"><span class="headinglink" onmouseover="onLink(this);" onmouseout="offLink(this);">Articles</span></a>
&nbsp;&#8226;&nbsp;
<a href="content.asp?a=se&sID=8"><span class="headinglink" onmouseover="onLink(this);" onmouseout="offLink(this);">Interviews</span></a>
&nbsp;&#8226;&nbsp;
<a href="content.asp?a=se&sID=9"><span class="headinglink" onmouseover="onLink(this);" onmouseout="offLink(this);">Links</span></a>
&nbsp;&#8226;&nbsp;
<a href="content.asp?a=se&sID=6"><span class="headinglink" onmouseover="onLink(this);" onmouseout="offLink(this);">Reviews</span></a>
&nbsp;&#8226;&nbsp;
<a href="content.asp?a=se&sID=28"><span class="headinglink" onmouseover="onLink(this);" onmouseout="offLink(this);">Tip Archive</span></a>
&nbsp;&#8226;&nbsp;
<a href="content.asp?a=se&sID=34"><span class="headinglink" onmouseover="onLink(this);" onmouseout="offLink(this);">VB 6.0 Toolkit</span></a>
&nbsp;&#8226;&nbsp;
<a href="content.asp?a=se&sID=7"><span class="headinglink" onmouseover="onLink(this);" onmouseout="offLink(this);">Visual Basic 6.0 Bible</span></a>
&nbsp;&#8226;&nbsp;
<a href="about.asp"><span class="headinglink" onmouseover="onLink(this);" onmouseout="offLink(this);">About</span></a>
</td></tr>
<tr><td colspan=2 valign=top width="600">
<span class=subheading>Interview with Steve Schmidt</span>
<span class=text><p>
<p>We're happy to have Steve Schmidt with us today from InstallShield Corporation. Steve is product manager for the InstallShield for Windows Installer product, which has been available via an Early Experience Program since October 1998 and was officially released in July 1999.  Steve has been working on ISWI for the life of the project, through its production.  Steve's background includes 6 years of technology and project management in the Advanced Technology Group and Data Networking teams at Procter & Gamble, and a Masters in Management from the Kellogg Graduate School of Management at Northwestern University.</p>
<p><b>VBT: What are the most helpful features, in your opinion, of this product release?</b></p>
<p>InstallShield for Windows Installer is a visual, wizard-driven setup-authoring solution designed to fully support the Microsoft Windows Installer service.  In the InstallShield installation development environment (IDE), you will find complete support for all of the Windows Installer tables and a tool for validating the installation database, or .msi file, that developers will build.  In addition, InstallShield offers the following helpful features for creating a Windows 2000 logo-compliant setup:
</p>
<ul>

<li>Dialog Editor - Users can modify over 25 existing dialogs or create new dialogs from scratch, using a graphical editing interface.  Dialogs created in one project can be exported and imported into other projects.
<li>Visual Basic® Support - Select "Import Visual Basic Project" from the Tools menu to have the Visual Basic Wizard scan your VB project for files and dependencies and create a setup project (or feature if you already have a project open) from it. 
<li>Dynamic File Linking and Path Variables - Instead of having to hard-code the paths to your source files, you can specify a variable that is resolved at build time.  This path can selectively include folders and subfolders based on wildcard specifications.  Using these features, engineers can build a release on different machines throughout the enterprise.
<li>Setup.exe - Check this Release wizard option to build a setup launcher capable of installing a more recent version of Windows Installer onto Windows 9x, NT, or 2000, displaying a dialog that allows the end user to select the language of the setup, and then launching your installation.  When you elect to compress your source files, all of the files in your setup package-Windows Installer database, application files, and setup resource files-can be distributed in a single compressed Setup.exe file.
<li>Setup Best Practices Compliance - You can think of Best Practices as a superset of the installation-related logo requirements in the Windows 2000 Application Specification.  Not only do they help you with logo-compliance, but Best Practices also ensure that you author a clean setup that fully leverages the benefits of Windows Installer.  Set InstallShield's automatic monitoring of Best Practices under Tools | Options, or organize your application into components using the Component wizard's Best Practices option.
</ul>
<p>
<b>VBT: What support does your tool have for any installation procedure differences in Windows 2000? </b></p>	
<p>	InstallShield for Windows Installer is a new product designed specifically to support the new Windows Installer service included in Windows 2000.  This support is required for the Windows 2000 logo.  Creating setups in the Windows Installer format also enables developers to take advantage of some powerful Windows Installer features, such as:
</p>	
<ul>
<li>Automatically repair key files that have been corrupted.
<li>Advertise applications without initially loading software on the system.
<li>Install / uninstall applications on a feature-by-feature basis.
<li>Rollback to a computer's original state, following a failed installation.
</ul>	
<p>	Setups built with InstallShield for Windows Installer are backward compatible with Microsoft Windows NT 4, Windows 98 and Windows 95.  Versions of the Microsoft Windows Installer are available for these platforms and can automatically be added to your setup.
</p>	
<p><b>VBT: What does your product do that makes it better than competing products from Wise Solutions, for instance? What makes it unique and more useful?</b>
</p>	
<p>There are a number of unique features in InstallShield for Windows Installer that make it the most comprehensive and useful setup authoring product for the Windows Installer service.  Some of the most significant are:
</p>	
<ul>
<li>Media Options  As part of the Release Wizard, users have the ability to define the target media (CD, DVD, network, or custom) and to span multiple disks with a build.  Features can automatically written to various disks, or they can assigned as part of a custom layout.
<li>Globalization Support  Using InstallShield's globalization features and translated resources (available in the upcoming International Editions), you can create a single setup capable of running in over 20 languages. Either InstallShield will display the setup in the target system's locale, or the end user can select the language. (Expect fully localized versions of InstallShield in German and Japanese shortly.)
<li>SKU Management  To help you maintain a single project for various flavors of an application or application suite, the Release wizard provides features for filtering features (and therefore, application data) based on language or other criteria you specify in the IDE.
</ul>

<p>In addition, InstallShield for Windows Installer users know that they have access to the support, consulting and training resources of the industry leader.
</p>

<p><b>VBT: How easily does your product support the addition of non-Microsoft components to an application?  Does your program detect these controls and add them to the installation package, or is it a manual process for the developer to add them?
</b></p>
<p>The automatic addition of files is supported in a number of ways.  One it to choose the "Import Visual Basic Project" option from the Tools menu, so that the project can be scanned and dependencies can be added automatically.  Another option is to add Merge Modules, pre-packaged redistributables supplied by the owner of the code.  Merge Modules have an .msm extension, are a subset of .msi (Windows Installer format) files, and contain data elements and logic.
</p>

<p><b>VBT: How extensible is your product? Does the user have a wide range of options for the installation, or is he/she locked into a certain process? 
</b></p>
<p>InstallShield for Windows Installer is highly extensible.  Users have the option to insert Custom Actions at any point in the installation sequence.  These Custom Actions can be implemented as an EXE, a function in a DLL, VBscript, or Jscript.
</p>

<p><b>VBT: What support options do developers have who buy this product? 
</b></p>
<p>All registered users of InstallShield for Windows Installer will receive 30 days of free technical support, starting with their first incident.  Annual support programs are available at two levels, Priority and Premium.  Priority support includes e-mail support and access to web resources.  Premium support includes these elements as well as phone access to senior developer support engineers.
</p>

<p><b>VBT: Anything else you'd like to add?
</b></p>
<p>InstallShield has been working closely with Microsoft for over 2 years to develop and enhance InstallShield for Windows Installer.  This product leverages the extensive experience and strength of InstallShield and demonstrates InstallShield's commitment to leadership in the setup authoring market.  
Additional information about InstallShield for Windows Installer and an evaluation copy are available at <a href="http://www.installshield.com/iswi">http://www.installshield.com/iswi</a>.
</p></p>
<p class="text"><i>Written by Eric Smith on 3/1/2000</i></p>
<p class="text"><b>Categories</b></p>
<span class="text"><a href="http://vbtechniques.com/content.asp?a=ct&cID=86">VB Techniques Interviews, All Interviews Category</a><br>
</span>
</span>
</td></tr></table>
<table width="100%" cellpadding=4><tr><td>
<br><br><br><hr noshade>
<span class=copyright>
Copyright &copy; 2002 by Northstar Computer Systems.<br>
Contact the <a href="mailto:editor@vbtechniques.com">webmaster</a> with any comments, questions or problems with the site.</span>
</td></tr></table>
</body></html>

