ID=F0949
URL=http://www.visualbasicbooks.com/advVB6samplepg13.html
SIZE=7576
DATE=09/07/2002
TIME=13:28:03
DATASET=Visual Basic
HTML=<html>

<head>



<meta name="description"
content="Visual Basic books for all levels of visual basic programmers are featured and reviewed regularly. Only those Visual Basic books of highest quality appear on this site.">
<meta name="keywords" content="visual basic books,visual basic,vb books,visual basic sites,programming,win32 api,database,beginner,amazon,bookstore">

<title>Visual Basic Books</title>
</head>

<body bgcolor="#6373B5" text="#616161" link="#0000ff" vlink="#666666" alink="#CC9900">
<center>
<!-- BEGIN RICH-MEDIA BURST! CODE --> 
       <script language="JavaScript"> 
       <!-- /* © 1997-1999 BURST! Media, LLC. All Rights Reserved.*/ 
       var TheAdcode = 'ad5645a'; 
       var bN = navigator.appName; 
       var bV = parseInt(navigator.appVersion); 
       var base='http://www.burstnet.com/'; 
       var Tv=''; 
       var agt=navigator.userAgent.toLowerCase(); 
       if (bV>=4) 
         {ts=window.location.pathname+window.location.search; 
          i=0; Tv=0; while (i< ts.length) 
             { Tv=Tv+ts.charCodeAt(i); i=i+1; } Tv="/"+Tv;} 
         else   {Tv=escape(window.location.pathname); 
          if( Tv.charAt(0)!='/' ) Tv="/"+Tv; 
                 else if (Tv.charAt(1)=="/")
       Tv=""; 
         if( Tv.charAt(Tv.length-1) == "/") 
           Tv = Tv + "_";} 
       if (bN=='Netscape'){ 
            if ((bV>=4)&&(agt.indexOf("mac")==-1))
       {  document.write('<s'+'cript src="'+ 
             base+'cgi-bin/ads/'+TheAdcode+'.cgi/RETURN-CODE/JS' 
             +Tv+'">'); 
            document.write('</'+'script>');    
       } 
            else if (bV>=3) {document.write('<'+'a href="'+base+'ads/'+ 
               TheAdcode+'-map.cgi'+Tv+'"target=_top>'); 
               document.write('<img src="' + base + 'cgi-bin/ads/' + 
               TheAdcode + '.cgi' + Tv + '" ismap width=468 height=60' + 
               ' border=0 alt="Click Here"></a>');} 
        } 
       if (bN=='Microsoft Internet Explorer') 
        document.write('<ifr'+'ame id=BURST src="'+base+'cgi-bin/ads/'
       + 
         TheAdcode + '.cgi' + Tv + '/RETURN-CODE" width=468 height=60' + 
         'marginwidth=0 marginheight=0 hspace=0 vspace=0 ' + 
         'frameborder=0 scrolling=no></ifr'+'ame>'); 
       // --> 
       </script> 
       <noscript><a href="http://www.burstnet.com/ads/ad5645a-map.cgi" target=_top> 
       <img src="http://www.burstnet.com/cgi-bin/ads/ad5645a.cgi" 
        width=468 height=60 border=0 alt="Click Here"></a> 
       </noscript> 
       <!-- END BURST CODE --> 
</center>


<table border="0" bgcolor="" cellpadding="0" cellspacing="0">
<tr><td><p align="center"><img src="images/vblogo.jpg" border="0" alt="vb logo"></td></tr>
<tr> 
<td rowspan="3" valign="top" height="1"> <p>&nbsp;</p>

<p align="left"><font face= "verdana" color="#000000"><b>Visual Basic Books</b></font><br>
<a href="index.html"><font color="#ffffff">Home</font></a><br>
<a href="beginner.html"><font color="#ffffff">Visual Basic Beginner Books</font></a><br>
<a href="database.html"><font color="#ffffff">Visual Basic Database Books</font></a><br>
<a href="activex.html"><font color="#ffffff">Visual Basic ActiveX Books</font></a><br>
<a href="advanced.html"><font color="#ffffff">Visual Basic Advanced Books</font></a><br>
<a href="vbinternet.html"><font color="#ffffff">VB Internet Programming Books</font></a><br>


</p>
<p><font color="#000000" face="verdana"><b>Resources</b></font><br>
<a href="links.html"><font color="#FFFFFF">Visual Basic Links</font></a><br>
<a href="addlink.html"><font color="#FFFFFF">Add a Link</font></a><br>
<a href="esubscribe.html"><font color="#FFFFFF">Subscribe to Mailing List</font></a>

</p>

<p>


</font>


<td bgcolor="#ffffff" valign="middle"><h1 align="center"><img src="../images/anibook.gif" alt="" width="32" height="32"><font face="trebuchet ms, arial, helvetica" color="#000000"> Visual Basic Books </font><img src="../images/anibook.gif" alt="" width="32" height="32"></h1>

</td>






</tr><tr>
<td bgcolor="#ffffff" colspan="1" valign="top">



<table border="0" cellpadding="5"><tr><td>


<font  color="#000000" FACE="Verdana, Arial, Helvetica" SIZE="-1">

<center><H1> Advanced Microsoft Visual Basic 6 Chapter 1</h1></center>


<FONT FACE="Arial">
</B></FONT><P>The test we do internally at TMS to determine whether we’re running in the IDE involves a routine called <I>InDesign</I>.<I> </I>Here’s the code (the explanation follows):</P><DIR>

<FONT FACE="Courier New" SIZE=2><P>Public Function InDesign() As Boolean<BR>
<BR>
    ' ****************************************<BR>
    ' The only thing Debug.Assert is good for!<BR>
    ' ****************************************<BR>
<BR>
    Static nCallCount   As Integer<BR>
    Static bRet         As Boolean  ' By default this is set to False.<BR>
<BR>
    nCallCount = nCallCount + 1<BR>
<BR>
    Select Case nCallCount<BR>
<BR>
        Case 1: ' First time in<BR>
            Debug.Assert InDesign()<BR>
<BR>
        Case 2: ' Second time in so we must have executed Debug.Assert...<BR>
            bRet = True<BR>
<BR>
    End Select<BR>
<BR>
    ' If Debug.Assert called, we need to return True to prevent the trap.<BR>
    InDesign = bRet<BR>
<BR>
    ' Reset for future calls.<BR>
    nCallCount = 0<BR>
<BR>
End Function</P></DIR>

</FONT><P>In the earlier versions of Visual Basic (previous to Visual Basic 6), <I>InDesign</I> used API calls to determine whether the Visual Basic IDE was kicking around. The version of <I>InDesign</I> (not shown here) in the first edition of our book evolved from some Visual Basic 4 code and therefore needed to cater to both the 16-bit and 32-bit worlds. We modified this code for the pure 32-bit world and replaced it with what amounts to a call to <I>GetModuleHandle</I>:</P><DIR>

<FONT FACE="Courier New" SIZE=2><P>Private Function InDesign() As Boolean<BR>
<BR>
    InDesign = 0 &lt; GetModuleHandle("VBA5.DLL")<BR>
<BR>
End Function</P></DIR>

</FONT><P>The only problem with this code was that you needed to know the name of the DLL that implements the IDE, which in this case was VBA5.DLL. Who knew that this would be VBA6.DLL for version 6 and who knows what it will be for version 7 and so on? By the way, this code works because if the application is running under the IDE in Win32, the IDE (and its DLLs and so on) must be loaded into the same process space as the application. The DLLs of other processes cannot be seen (easily, anyway); ergo, if you can see it you must have it loaded, and if you have it loaded you must be running in the IDE.</P>
<P>Anyway, back to the <I>InDesign</I> code shown earlier. This &quot;new&quot; cut of the code should work for all future versions of Visual Basic (as well as for version 6). This code essentially uses the fact that <I>Debug.Assert </I>is coded in such a way as to make it suboptimal (an explanation of this statement follows shortly). Because the <I>Debug </I>object effectively goes away when you make an EXE, it follows that methods applied to it, like <I>Print</I>, also have no effect—in fact, they don’t even run. Because the <I>Assert </I>method is such a method, we can make use of this disappearing act to determine whether the code is running in design mode.</P>
<P>The first time we call the function, which requires only a simple <I>If InDesign Then</I> statement, <I>nCallCount </I>is zero and <I>bRet </I>is False (initialized by default). Notice that both variables are declared as static, meaning they are accessed locally but stored globally. In other words, they are shared, persistent objects that can be accessed only within the scope of the subroutine in which they’re declared. We increment <I>nCallCount</I> and then execute the <I>Select Case </I>statement. Obviously <I>nCallCount </I>is now 1, so the <I>Case 1</I> code executes. At this point, if we’re running in design mode, the <I>Debug.Assert </I>line causes us to reenter the routine. This time, <I>nCallCount = nCallCount + 1 </I>increments the static <I>nCallCount </I>to 2, and the <I>Case 2</I> code sets <I>bRet </I>to True. Note that True is returned to the call made to <I>Debug.Assert </I>from the first entry into <I>InDesign</I>. Because we’ve asserted something that’s True, we don’t execute a <I>Stop</I> here. Instead, we return to the line of code to be executed after the call to <I>Debug.Assert</I>, which is the <I>InDesign = bRet </I>code (again). Once more we return True (because <I>bRet</I> is still set to True from the previous call to <I>InDesign</I>). This final value of True is now returned to the original caller to indicate, &quot;Yes, we are running in design mode.&quot; </P>

<center><a href="advVB6samplepg14.html">next page....</a></center>

</td></tr></table></table><tr><td bgcolor="#991100"><center>
<font FACE="Verdana, Arial, Helvetica" SIZE="-1"><font color="#FFFFFF">Email us your comments:<a href="mailto:contact@vbbooks.freeservers.com"><img src="../images/emailed.gif"alt="mail" border=0></a><br>Fax: 1(916)404-7719<br>&copy;1999 Valassis Enterprises. All rights reserved.</font>

<P>
<!--Start of WSTR Block-->
<script language=JavaScript>id=1530</script>
<script language=JavaScript src="http://www.meixler-tech.com/wstr/js.cgi"></script>
<!--End of WSTR Block-->
</center>


</body>
</html>

