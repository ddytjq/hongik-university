ID=E0063
URL=http://www.devx.com/cplus/free/articles/toptips/toptips6.asp
SIZE=30138
DATE=12/07/02
TIME=19:16:59
DATASET=C
HTML=

<html>
<head>
<script language="JavaScript">
<!-- hide from JavaScript-challenged browsers
function openWindow1() {  popupWin = window.open('figure1.asp', 'figure1', 'scrollbars,resizable,width=640,height=480')
}

// done hiding -->

</script>


<link REL="STYLESHEET" HREF="/includes/devxstyles.css" TYPE="text/css">
<link REL="STYLESHEET" HREF="/includes/vcdjstyles.css" TYPE="text/css">

<style>
<!--
a{text-decoration:none;}
body{background-color:white;}
a:hover{text-decoration:underline;}

-->
</style>
<SCRIPT LANGUAGE="JavaScript">
AppServerZoneURL = 'www.devx.com/appserver';
ASPZoneURL = 'www.devx.com/asp';
CPlusZoneURL = 'www.devx.com/cplus';
CareerLinkURL = 'careerlink.devx.com';
DevXURL = 'www.devx.com';
DHTMLZoneURL = 'www.devx.com/dhtml';
DiscussionURL = 'news.devx.com';
EntZoneURL = 'www.devx.com/enterprise';
inquiryURL = 'www.inquiry.com';
JavaHowToURL = 'www.devx.com/javahowto';
JavaProURL = 'www.devx.com/javapro';
JavaZoneURL = 'www.devx.com/java';
MarketPlaceURL = '';
NetMeetingURL = 'www.devx.com/netmeeting';
SecurityZoneURL = 'www.devx.com/security';
SQLZoneURL = 'www.devx.com/dbzone';
UMLZoneURL = 'www.devx.com/uml';
VB2TheMaxURL = 'www.vb2themax.com';
VBHowToURL = 'www.devx.com/vbhowto';
VBPJURL = 'www.devx.com/vsm';
VBZoneURL = 'www.devx.com/vb';
VCDJURL = 'www.devx.com/cplus';
WebZoneURL = 'www.devx.com/webdev';
XMLMagURL = 'www.devx.com/xml';
XMLZoneURL = 'www.devx.com/xml';
EOURL = 'exchange.devx.com';
ProjectCoolURL = 'www.devx.com/projectcool'
DevXNetURL = 'www.devx.net'
</SCRIPT>



<title>DevX: C++ Zone: The Top 20 C++ Tips of All Time</title>
<meta name="DESCRIPTION" content="TITLE, DEK, AUTHOR, MAGAZINE, ISSUE">

</head>

<body background="/images/redesign/background2.gif" bgcolor="#FAFAE6" link="#320096" topmargin="0" leftmargin="0" marginheight="0" marginwidth="0" ONLOAD="init();">
<!-- Start the page layout -->
<table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
    <td height="20" colspan="2" valign="top" bgcolor="#FF6600">

<table width="800" border="0" cellspacing="0" cellpadding="0" bgcolor="#FF6600">
    <tr>
        <td width="155" height="20" align="center"><FONT FACE="Arial" SIZE="2"><a class="menu" style="text-decoration:none;font-family:Arial, Helvetica;color:#FFFFFF" href="http://www.devx.com/" target="_top">DevX Home</a></FONT>&nbsp;&nbsp;&nbsp;</td>
        <td height="20" nowrap><FONT FACE="Arial, Helvetica" SIZE="2"><b>

        <a class="menu" style="text-decoration:none;font-family:Arial, Helvetica;color:#FFFFFF" href="http://www.devx.com/free/premierclub/premierclub.asp" target="_top">Premier Club</a>&nbsp;&nbsp;&nbsp;
       <a class="menu" style="text-decoration:none;font-family:Arial, Helvetica;color:#FFFFFF" href="http://www.devx.com/free/search/search.asp" target="_top">Search</a>&nbsp;&nbsp;&nbsp;
        <a class="menu" style="text-decoration:none;font-family:Arial, Helvetica;color:#FFFFFF" href="http://devx.newmediary.com" target="_top">RFP Exchange</a>&nbsp;&nbsp;&nbsp;
        <a class="menu" style="text-decoration:none;font-family:Arial, Helvetica;color:#FFFFFF" href="http://www.devx.com/elearning/" target="_top">eLearning</a>&nbsp;&nbsp;&nbsp;

        <a class="menu" style="text-decoration:none;font-family:Arial, Helvetica;color:#FFFFFF" href="http://www.devx.com/free/codelib/" target="_top">Code Library</a>&nbsp;&nbsp;&nbsp;

        <a class="menu" style="text-decoration:none;font-family:Arial, Helvetica;color:#FFFFFF" href="http://www.devx.com/free/help/help.asp" target="_top">Help</a>&nbsp;&nbsp;&nbsp;
        <a class="menu" style="text-decoration:none;font-family:Arial, Helvetica;color:#FFFFFF" href="http://www.devx.com/free/locatorplus/search.asp" target="_top">Locator+</a>&nbsp;&nbsp;&nbsp;
<a class="menu" style="text-decoration:none;font-family:Arial, Helvetica;color:#FFFFFF" href="http://marketplace.devx.com" target="_top">Shop DevX <IMG SRC="/images/redesign/cart.gif" WIDTH=26 HEIGHT=18 BORDER=0 ALT=""></a>&nbsp;&nbsp;&nbsp;
</b></FONT>
        </td>
    </tr>
</table>


</td>
    </tr>
</table>


<table border="0" cellspacing="0" cellpadding="0" height="100%" WIDTH="800">
    <tr>
    <td width="150" valign="top">


<table border="0" cellspacing="0" cellpadding="0" width="150">
    
    <tr> 
        <td width="150" VALIGN="BOTTOM">
<table cellpadding="0" cellspacing="0" border="0" width="150">
<tr>
<td valign="top">
<A HREF="http://www.devx.com"><IMG SRC="/images/redesign/devx.gif" WIDTH=156 HEIGHT=163 BORDER=0 ALT=""></A>
<br>
<SCRIPT LANGUAGE="JavaScript1.2" SRC="/includes/list.js"></SCRIPT><SCRIPT LANGUAGE="JavaScript1.2" SRC="/includes/resize.js"></SCRIPT><script language="Javascript" src="/includes/newNavNS.js"></script>
 </td>
    </tr>
</table>        

        
        </td>
    </tr>
</table>

  </td>
<td valign=top>
    <table bgcolor="#FFFFFF" cellpadding="0" cellspacing="0" border="0">
<tr>
<TD WIDTH="10">&nbsp;</TD>

<td height=60 WIDTH=470>
<table>
	<tr>
		<TD>
		<SCRIPT language="JavaScript1.1" SRC="http://ad.doubleclick.net/adj/devx.cplus.dart/cplus;abr=!webtv;door=;dcopt=ist;sz=120x60;tile=1;ord=1328336876629?">
		</SCRIPT> 
		<SCRIPT> 
		if ((!document.images && navigator.userAgent.indexOf('Mozilla/2.') >= 0)  || navigator.userAgent.indexOf("WebTV")>= 0) {
		document.write('<A HREF="http://ad.doubleclick.net/jump/devx.cplus.dart/cplus;door=;sz=120x60;tile=1;ord=1328336876629?">');
		document.write('<IMG SRC="http://ad.doubleclick.net/ad/devx.cplus.dart/cplus;door=;sz=120x60;tile=1;ord=1328336876629?" border="0" height="120" width="60"></A>') 
		} 
		</SCRIPT> 
		<NOSCRIPT> 
		<A HREF="http://ad.doubleclick.net/jump/devx.cplus.dart/cplus;door=;sz=120x60;tile=1;ord=1328336876629?" >
		<IMG SRC="http://ad.doubleclick.net/ad/devx.cplus.dart/cplus;door=;sz=120x60;tile=1;ord=1328336876629?" border="0" height="120" width="60"></A>
		</NOSCRIPT>
		</TD>
		<td>
		<SCRIPT language="JavaScript1.1" SRC="http://ad.doubleclick.net/adj/devx.cplus.dart/cplus;abr=!webtv;door=;dcopt=ist;sz=468x60;tile=2;ord=1328336876629?">
		</SCRIPT> 
		<SCRIPT> 
		if ((!document.images && navigator.userAgent.indexOf('Mozilla/2.') >= 0)  || navigator.userAgent.indexOf("WebTV")>= 0) {
		document.write('<A HREF="http://ad.doubleclick.net/jump/devx.cplus.dart/cplus;door=;sz=468x60;tile=2;ord=1328336876629?">');
		document.write('<IMG SRC="http://ad.doubleclick.net/ad/devx.cplus.dart/cplus;door=;sz=468x60;tile=2;ord=1328336876629?" border="0" height="60" width="468"></A>') 
		} 
		</SCRIPT> 
		<NOSCRIPT> 
		<A HREF="http://ad.doubleclick.net/jump/devx.cplus.dart/cplus;door=;sz=468x60;tile=2;ord=1328336876629?" >
		<IMG SRC="http://ad.doubleclick.net/ad/devx.cplus.dart/cplus;door=;sz=468x60;tile=2;ord=1328336876629?" border="0" height="60" width="468"></A>
		</NOSCRIPT>
		</td>
		<td width="5">&nbsp;</td>
	</tr>
</table>
</td>
</tr>
</table>

<table width="490" border=0 cellspacing=0 cellpadding=0>
<tr>
<td valign=top>
<!--BEGIN MAIN COLUMN-->  
<BR>

<table width="100%" border=0 cellspacing=0 cellpadding=0>
	<tr>
		<td valign=top><IMG SRC="/images/zones/c/cpluszonesm.gif" WIDTH=178 HEIGHT=36 BORDER=0 ALT=""></td>
<TD ALIGN="RIGHT">&nbsp;&nbsp;</TD>
	</tr>
	</table>
	
<!--BEGIN FEATURES-->
<table width=490 border="0" CELLSPACING="0" CELLPADDING="0">
	<tr><TD WIDTH="10" ROWSPAN="3">&nbsp;</TD>
		<td VALIGN="TOP">
<!-- ARTICLE TITLE -->
<br>
     <table border=0>
	 <tr>
<!--DELETE IF THERE'S NO GRAPHIC-->
	 <td width=90 valign=top><img src="c_100.gif" width="100" height="100" alt="" border="0"></td>
<!--DELETE IF THERE'S NO GRAPHIC-->

<td valign=top><FONT FACE="Arial,Helvetica,sans-serif" SIZE="4">	<b>The Top 20  C++ Tips of All Time</B></font>
<br><BR>
<!-- ARTICLE DEK --><FONT FACE="Arial,Helvetica,sans-serif" SIZE="2">
<span class="dek">STL and Generic Programming</span>
<br>
<!-- AUTHOR NAME -->
<span class="author">by Danny Kalev</font></span>
	</font><br><br>

	</td>	</tr>
	</table>
	
	</td>
	</tr>
	<tr>

		<td VALIGN="TOP" width=490><br>
		<FONT FACE="Arial, Helvetica" SIZE="2">	<A HREF="#tip14">Tip 14: Useful STL Terminology
 </A><br>
	<A HREF="#tip15">Tip 15: The Location of Template Definitions
</A><br>
	<A HREF="#tip16">Tip 16: Standard Base Classes for Function Object
 </A><br>
	<A HREF="#tip17">Tip 17: Storing Dynamically Allocated Objects in STL Containers
</A><br>
<A HREF="#tip18">Tip 18:Treating a Vector as an Array
 </A><br>
	<A HREF="#tip19">Tip 19: Dynamic Multidimensional Arrays and Vectors
</A><br>
	<A HREF="#tip20">Tip 20: Why You Shouldn't Store auto_ptr Objects in STL Containers
</A></FONT>
<BR>
<P><!-- DROPCAP - FIRST PARAGRAPH -->
<img src="/images/mags/vbpj/introdott.gif" width="23" height="24" align=left>
he Standard Template Library (STL) has revolutionized the way C++ programmers write code. It brings code reuse to new levels of productivity and it saves huge amounts of time that would have otherwise been spent on reinventing wheels. Yet, it's a full-blown framework, with a peculiar jargon and intricate rules that you have to master in order to learn how to use it effectively. To shed some light on certain aspects of STL, I decided to include no less than six tips under this category. 
<p>
Naturally, the first tip describes the basic constituents of STL and some of its key terms.
<p>
The next tip deals with template definitions. As you probably know, templates are the building bricks of STL containers and algorithms. The following three tips describe techniques of using the std::vector container&#151;the most widely-used STL container. We will learn how to properly store pointers to objects in a vector and how to avoid common pitfalls; we will see how to treat a vector object as if it were a built-in array. The fifth tip in this category will show you how to use vectors to imitate a multidimensional array. Finally, the closing tip in this category teaches a very important lesson about the interaction of std::auto_ptr and STL. 
<p><A NAME="tip14"></A>
<b>Tip 14: Useful STL Terminology</b><br>
Here are some key terms that you may find useful when reading Standard Template Library (STL) literature and documentation.
<p>
<i>Container</i><br>
A container is an object that stores objects as its elements. Normally, it's implemented as a class template that has member functions for traversing, storing and removing elements. Examples of container classes are std::list and std::vector.
<p>
<i>Genericity</i><br>
The quality of being generic, or type-independent. The above definition of the term container is too loose because it may apply to strings, arrays and structs, which also store objects. However, a real container isn't limited to a specific data type or a set of types. Rather, it can store any built-in and user-defined type. Such a container is said to be generic. Note that a string can only contain characters. Genericity is perhaps the most important characteristic of STL. The third tip presents the standard base classes for function objects. Since function objects are one of the constituents of generic programming, adhering to standard conventions in their design and implementation will save you a lot of difficulties.
<p>
<i>Algorithm</i><br>
A set of operations applied to a sequence of objects. Examples of algorithms are std::sort(), std::copy(), and std::remove(). STL algorithms are implemented as function templates taking iterators.
<p>
<i>Adaptor</i><br>
An adaptor is a special object that can be plugged to an exiting class or function to change its behavior. For example, by plugging a special adaptor to the std::sort() algorithm, you can control whether the sorting order is descending or ascending. STL defines several kinds of sequence adaptors, which transform a container to a different container with a more restricted interface. A stack, for instance, is often formed from queue&lt;> and an adaptor that provides the necessary push() and pop() operations.
<p>
<i>Big Oh Notation</i><br>
A special notation used in performance measurements of algorithms. The STL specification imposes minimum performance limits on the operations of its algorithms and container operations. An implementation may offer better performance but not worse. The Big Oh notation enables you to evaluate the efficiency of algorithms and containers for a given operation and data structure. An algorithm such as std::find(), which traverses every element is a sequence (in the worst case scenario) has the following notation:
<p><font size=3><pre>
T(n) = O(n). /* linear complexity */
</pre></font><p>
<i>Iterator</i><br>
An iterator is an object that functions as a generic pointer. Iterators are used for traversing, adding and removing container elements. STL defines five major categories of iterators:
<p>
input iterators and output iterators <br>
forward iterators<br>
bidirectional iterators<br>
random access iterators<br>
<p>
Note that this list doesn't represent inheritance relationships; it merely describes the iterator categories and their interfaces. Each lower category is a superset of the category above it. For instance, a bidirectional iterator provides all the functionality of a forward iterators plus additional functionality. Here is a brief summary of the functionality and interfaces for these categories:
<p>
<i>Input iterators</i> allow an algorithm to advance the iterator and offer read-only access to an element.
<p>
<i>Output iterators</i> allow an algorithm to advance the iterator and offer write-only access to an element.
<p>
<i>Forward iterators</i> support both read and write access, but traversal is permitted only in one direction.
<p>
<i>Bidirectional iterators</i> allow the user to traverse the sequence in both directions.
<p>
<i>Random access iterators</i> support random jumps and "pointer arithmetic" operations, for example:
<p><font size=3><pre>
string::iterator it = s.begin();
char c = *(it+5); /* assign fifth char to c*/
</pre></font><p><A NAME="tip15"></A>
<b>Tip 15: The Location of Template Definitions</b><br>
Normally, you declare functions and classes in a .h file and place their definition in a separate .cpp file. With templates, this practice isn't really useful because the compiler must see the actual definition (i.e., the body) of a template, not just its declaration, when it instantiates a template. Therefore, it's best to place both the template's declaration and definition in the same .h file. This is why all STL header files contain template definitions.
<p>
In the future, when compilers support the "export" keyword, it will be possible to use only the template's declaration and leave the definition in a separate source file.
<p><A NAME="tip16"></A>
<b>Tip 16: Standard Base Classes for Function Object</b><br>
To simplify the process of writing function objects, the Standard Library provides two class templates that serve as base classes of user-defined function objects: std::unary_function and std::binary_function. Both are declared in the header &lt;functional>. As the names suggest, unary_function serves as a base class of function objects taking one argument and binary_function serves as a base class of function objects taking two arguments. The definitions of these base classes are as follows:
<p><font size=3><pre>
template &lt; class Arg, class Res > struct 
unary_function 
{
 typedef Arg argument_type;
 typedef Res result_type;
};
template &lt; class Arg, class Arg2, class Res > 
struct binary_function 
{
 typedef Arg first_argument_type;
 typedef Arg2 second_argument_type;
 typedef Res result_type;
};
</pre></font><p>
These templates don't provide any useful functionality. They merely ensure that arguments and return values of their derived function objects have uniform names. In the following example, the predicate is_vowel, which takes one argument, inherits from unary_function:
<p><font size=3><pre>
template &lt; class T > 
class is_vowel: public unary_function&lt; T, bool >
{
public:
 bool operator ()(T t) const
 {
  if ((t=='a')||(t=='e')||(t=='i')||(t=='o')||(t=='u'))
   return true;
  return false;
 }
};
</pre></font><p><A NAME="tip17"></A>
<b>Tip 17: Storing Dynamically Allocated Objects in STL Containers</b><br>
Suppose you need to store objects of different types in the same container. Usually, you do this by storing pointers to dynamically allocated objects. However, instead of using named pointers, insert the elements to the container as follows:
<p><font size=3><pre>
class Base {};
class Derived : public Base{};

std::vector &lt;Base *> v;
v.push_back(new Derived);
v.push_back(new Base);
</pre></font><p>
This way you ensure that the stored objects can only be accessed through their container. Remember to delete the allocated objects as follows:
<p><font size=3><pre>
delete v[0];
delete v[1];
</pre></font><p>
<A NAME="tip18"></A>
<b>Tip 18: Treating a Vector as an Array</b><br>
Suppose you have a vector of int and function that takes int *. To obtain the address of the internal array of the vector v and pass it to the function, use the expressions &v[0] or &*v.front(). For example:
<p><font size=3><pre>
void func(const int arr[], size_t length );
int main()
{
 vector &lt;int> vi;
 //.. fill vi
 func(&vi[0], vi.size());
}
</pre></font><p>
It's safe to use &vi[0] and &*v.front() as the internal array's address as long as you adhere to the following rules: First, func() shouldn't access out-of-range array elements. Second, the elements inside the vector must be contiguous. Although the C++ Standard doesn't guarantee that yet, I'm not aware of any implementation that doesn't use contiguous memory for vectors. Furthermore, this loophole in the C++ Standard will be fixed soon.
<p><A NAME="tip19"></A>
<b>Tip 19: Dynamic Multidimensional Arrays and Vectors</b><br>
You can allocate multidimensional arrays manually, as in:
 <p><font size=3><pre>
int (*ppi) [5]=new int[4][5]; /*parentheses required*/
/*fill array..*/
ppi[0][0] = 65;
ppi[0][1] = 66;
ppi[0][2] = 67;
//..
delete [] ppi;
</pre></font><p>
However, this style is tedious and error prone. You must parenthesize ppi to ensure that the compiler parses the declaration correctly, and you must delete the allocated memory. Worse yet, you can easily bump into buffer overflows. Using a vector of vectors to simulate a multidimensional array is a significantly superior alternative:
<p><font size=3><pre>
#include &lt;vector>
#include &lt;iostream>
using namespace std;
int main()
{
 vector &lt;vector &lt;int> > v; /*two dimensions*/
 v.push_back(vector &lt;int>()); /*create v[0]*/
 v.push_back(vector &lt;int>()); /*create v[1]*/
 v[0].push_back(15); /*assign v[0][0]*/
 v[1].push_back(16); /*assign v[1][0]*/
}
</pre></font><p>
Because vector overloads operator [], you can use the [][] notation as if you were using a built-in two-dimensional array:
<p><font size=3><pre>
cout &lt;&lt; v[0][0]; 
cout &lt;&lt; v[1][0];  
</pre></font><p>
The main advantages of using a vector of vectors are two: vector automatically allocates memory as needed. Secondly, it takes care of deallocating memory so you don't have to worry about potential memory leaks.
 <p><A NAME="tip20"></A>
<b>Tip 20: Why You Shouldn't Store auto_ptr Objects in STL Containers</b><br>
The C++ Standard says that an STL element must be "copy-constructible" and "assignable." These fancy terms basically mean that for a given class, assigning and copying one object to another are well-behaved operations. In particular, the state of the original object isn't changed when you copy it to the target object. 
<p>
This is not the case with auto_ptr, though: copying or assigning one auto_ptr to another makes changes to the original in addition to the expected changes in the copy. To be more specific, the original object transfers ownership of the pointer to the target, thus making the pointer in the original null. Imagine what would happen if you did something like this: 
 <p><font size=3><pre>
std::vector &lt;auto_ptr &lt;Foo> > vf;/*a vector of auto_ptr's*/
// ..fill vf
int g()
{
  std::auto_ptr &lt;Foo> temp=vf[0]; /*vf[0] becomes null*/
}
</pre></font><p>
When temp is initialized, the pointer of vf[0] becomes null. Any attempt to use that element will cause a runtime crash. This situation is likely to occur whenever you copy an element from the container. Remember that even if your code doesn't perform any explicit copy or assignment operations, many algorithms (std::swap(), std::random_shuffle() etc.) create a temporary copy of one or more container elements. Furthermore, certain member functions of the container create a temporary copy of one or more elements, thereby nullifying them. Any subsequent attempt to the container elements is therefore undefined.
<p>
Visual C++ users often say that they have never encountered any problems with using auto_ptr in STL containers. This is because the auto_ptr implementation of Visual C++ (all versions thereof) is outdated and relies on an obsolete specification. When the vendor decides to catch up with the current ANSI/ISO C++ Standard and change its Standard Library accordingly, code that uses auto_ptr in STL containers will manifest serious malfunctions.
<p>
To conclude, you shouldn't use auto_ptr in STL containers. Use either bare pointers or other smart pointer classes instead of auto_ptr (such classes are available at <a href="http://www.Boost.org">www.Boost.org</a>).
</font>	
	
<TABLE BORDER="0" WIDTH="600">
<TR> 
<TD WIDTH="50%" VALIGN=TOP><br><A HREF="toptips5.asp"><IMG SRC="/images/mags/vbpj/arrowleft_26x26.gif" WIDTH=26 HEIGHT=26 BORDER=0 align="absmiddle" ALT=""><FONT FACE="Verdana, Helvetica, Arial, sans-serif" SIZE="1"> <B>Object Oriented Design </B></A> </TD>

</TD>
</TR>
</TABLE>
<BR>
         <table width="600" border="0" cellspacing="0" cellpadding="2" bgcolor="#d9d9d9">
            <tr>
              <td valign="top"><a href="toptips.asp"><IMG SRC="/images/mags/vbpj/indexdot1_21x20.gif" WIDTH=21 HEIGHT=20 BORDER=0 align="absmiddle" ALT=""><font face="Verdana, Helvetica, Arial, sans-serif" size="1" BGCOLOR="GREY">
                	Introduction  </font></a></td>
<td valign="top" ><a href="toptips4.asp"><IMG SRC="/images/mags/vbpj/indexdot4_21x20.gif" WIDTH=21 HEIGHT=20 BORDER=0 align="absmiddle" ALT=""><font face="Verdana, Helvetica, Arial, sans-serif" size="1">
                	Performance Enhancements </font></a></td>

            </tr>
			
            <tr>
              <td valign="top" ><a href="toptips2.asp"><IMG SRC="/images/mags/vbpj/indexdot2_21x20.gif" WIDTH=21 HEIGHT=20 BORDER=0 align="absmiddle" ALT=""><font face="Verdana, Helvetica, Arial, sans-serif" size="1">
                	Guidelines for Better Coding Style </font></a></td>
 <td valign="top" ><a href="toptips5.asp"><IMG SRC="/images/mags/vbpj/indexdot5_21x20.gif" WIDTH=21 HEIGHT=20 BORDER=0 align="absmiddle" ALT=""><font face="Verdana, Helvetica, Arial, sans-serif" size="1" >
                	Object Oriented Design </font></a></td>

            </tr>
            <tr>
              <td valign="top" ><a href="toptips3.asp"><IMG SRC="/images/mags/vbpj/indexdot3_21x20.gif" WIDTH=21 HEIGHT=20 BORDER=0 align="absmiddle" ALT=""><font face="Verdana, Helvetica, Arial, sans-serif" size="1">
                	Memory Management </font></a></td>
 <td valign="top" ><a href="toptips6.asp"><IMG SRC="/images/mags/vbpj/indexdot6grey_21x20.gif" WIDTH=21 HEIGHT=20 BORDER=0 align="absmiddle" ALT=""></a><font face="Verdana, Helvetica, Arial, sans-serif" size="1" >
                	STL and Generic Programming </font></td>

            </tr>						
          </table></td>
	</tr>
</table>


<BR><BR>

<!--END MAIN COLUMN-->
</td>
<!--BEGIN RIGHT COLUMN-->
		<td valign=top width=196>


<!--BEGIN HOUSE AD 125x125-->
<TABLE WIDTH="196" BORDER="0" CELLSPACING="0" CELLPADDING="0" BGCOLOR="#D9D9D9">
	<TR>
		<TD valign=top>
		<table width=196 border=0 CELLSPACING="0" CELLPADDING="0" >
		<td width=160 align=right valign="top">
		<BR>
		<SCRIPT language="JavaScript1.1" SRC="http://ad.doubleclick.net/adj/devx.cplus.dart/cplus;abr=!webtv;door=;sz=125x125;tile=3;ord=1328336876629?">
</SCRIPT> 
<SCRIPT> 
if ((!document.images && navigator.userAgent.indexOf('Mozilla/2.') >= 0)  || navigator.userAgent.indexOf("WebTV")>= 0) {
document.write('<A HREF="http://ad.doubleclick.net/jump/devx.cplus.dart/cplus;door=;sz=125x125;tile=3;ord=1328336876629?">');
document.write('<IMG SRC="http://ad.doubleclick.net/ad/devx.cplus.dart/cplus;door=;sz=125x125;tile=3;ord=1328336876629?" border="0" height="125" width="125"></A>') 
} 
</SCRIPT> 
<NOSCRIPT> 
<A HREF="http://ad.doubleclick.net/jump/devx.cplus.dart/cplus;door=;sz=125x125;tile=3;ord=1328336876629?" >
<IMG SRC="http://ad.doubleclick.net/ad/devx.cplus.dart/cplus;door=;sz=125x125;tile=3;ord=1328336876629?" border="0" height="125" width="125"></A>
</NOSCRIPT>

		 <br>
		</td>
		<td width=36 valign="top" align=right><img src="/images/mags/vbpj/greycurve_30x35.gif" width=30 height=35></td>
		</table>
		<br></TD>
	</TR>
</TABLE>
<!--END HOUSE AD 125x125-->

<!--BEGIN SHOP MARKETPLACE-->

<TABLE WIDTH="196" BORDER="0" CELLSPACING="0" CELLPADDING="0" BGCOLOR="#ffcc99">
	<TR>
		<TD>	<img src="/images/mags/vbpj/shopdevx_196x23.gif" width=196 height=23>
			<table border=0 CELLPADDING="5"><tr><td>
		<font class="smallfont" size=1 face="Arial, Helvetica, Sans-Serif"><i><b>FEATURE SOFTWARE:</b></i><br>
		<font class="smallfont" face="Arial, Helvetica, Sans-Serif" size="1"><b>RadVC</b><br>
Get the power of C++ with the Rapid App Development features of VB.<br><a href="http://marketplace.devx.com/upload/componentsource/RadVC.asp"><font color="#320096">Buy Now!</a></font><br><br>
	
		
		<font class="smallfont" face="Arial, Helvetica, Sans-Serif" size="1"><b>Crystal Reports</b><br>
Integrate robust reporting into your applications. <br><a href="http://marketplace.devx.com/upload/componentsource/CrystalReports.asp"><font color="#320096">Buy Now!</a></font><br><br>
	
		
		<i><b>FEATURE BOOK:</b></i><br>
		<font class="smallfont" face="Arial, Helvetica, Sans-Serif" size="1"><b>COM Explorer</b><br>
Explore, manage, and repair ActiveX components.<br><a href="http://marketplace.devx.com/upload/componentsource/COMExplorer.asp"><font color="#320096">Buy Now!</a></font><br>
		</font></td></tr></table>
		</TD>
	</TR>		
</TABLE>
<!--END SHOP MARKETPLACE-->


<!--BEGIN IN VB-->

<TABLE WIDTH="196" BORDER="0" CELLSPACING="0" CELLPADDING="0" BGCOLOR="#ffcc66">

		<TD><IMG SRC="/images/mags/vcdj/intheczone_196x23.gif" WIDTH=196 HEIGHT=23 BORDER=0 ALT="">
		<table border=0 CELLPADDING="5"><tr><td>
		<img src="/images/mags/vbpj/bluedot_9x9.gif" width=9 height=9 align="absmiddle"> <font class="smallfont" size=1 face="Arial, Helvetica, Sans-Serif"><b>Product Review of the Week</b><br><a href="http://www.devx.com/cplus/free/pgProduct.asp"><font class="smallfont" face="Arial, Helvetica, Sans-Serif" size=1 color="#320096">C++Test</a></font><br><br>
<img src="/images/mags/vbpj/bluedot_9x9.gif" width=9 height=9 align="absmiddle"> <b>Site of the Week</b> <br><br>
<img src="/images/mags/vbpj/bluedot_9x9.gif" width=9 height=9 align="absmiddle"> <b>Book Review of the Week</b> <br><a href="http://www.devx.com/cplus/free/book.asp"><font class="smallfont" face="Arial, Helvetica, Sans-Serif" size=1 color="#320096">Standard C++ Bible</a></font><br><br>
<img src="/images/mags/vbpj/bluedot_9x9.gif" width=9 height=9 align="absmiddle"> <b>Tip of the Day</b> <br><a href="http://www.devx.com/cplus/free/tip.asp"><font class="smallfont" face="Arial, Helvetica, Sans-Serif" size=1 color="#320096">Setting Breakpoints Programmatically</a></font><br><br>
<img src="/images/mags/vbpj/bluedot_9x9.gif" width=9 height=9 align="absmiddle"> <b>Download of the Week</b> <br><a href="http://www.devx.com/cplus/free/pgdownload.asp"><font class="smallfont" face="Arial, Helvetica, Sans-Serif" size=1 color="#320096">Xceed Winsock Library 1.2</a></font><br><br>
</font>
</td></tr></table>
</TD>
	</TR>

</TABLE>
<!--END IN VB-->

		</td>
</tr></table><br>
<br>
</td>
<td valign=top width=200><br><br>&nbsp;</td>

	</tr>
</table>
		</td>
	</tr>
</table>
<table border="0" align="center">
<tr>


<td><TABLE WIDTH="400" BORDER="0" CELLSPACING="0" CELLPADDING="3" BGCOLOR="#FFFFFF" align=center>
<TR><TD BGCOLOR="FFFFFF"><FONT FACE="Arial" SIZE="2" COLOR="#000099"><B>Sponsored Links </B></FONT></TD></TR>
<TR>
<TD><FONT FACE="Arial" SIZE="2">
<TABLE BORDER="0" CELLSPACING="0" CELLPADDING="4"><TR BGCOLOR="D9D9D9"><TD><FONT FACE="Arial" SIZE="2"><!-- AdSpace sponsorship=sponsoredlinks LinkAd1:=Ads.ID --><a href="/event.ng/Type=click&ProfileID=439&RunID=5292&AdID=3208&GroupID=25&FamilyID=1&TagValues=1141&Redirect=http:%2F%2Fad.doubleclick.net%2Fclk;4395794;7295955;i%3Fhttp:%2F%2Fwww.oracle.com%2Fgo%2F%3F%26Src%3D917390%26Act%3D53" target="_top">
Click here for a free FREE iSeminar and Oracle9i Application Server software!
</a>
<!-- /AdSpace --></TD></TR>

<TR><TD><FONT FACE="Arial" SIZE="2"><!-- AdSpace sponsorship=sponsoredlinks Ads.ID!=$LinkAd1$ LinkAd2:=Ads.ID --><a href="/event.ng/Type=click&ProfileID=439&RunID=5281&AdID=3192&GroupID=25&FamilyID=1562&TagValues=1141&Redirect=http:%2F%2Fportals.devx.com%2FBrew%2FArticle%2F6611" target="_top">
Why this profitable wireless development company likes the BREW solution...
</a>
<!-- /AdSpace --></TD></TR>

<TR BGCOLOR="D9D9D9"><TD><FONT FACE="Arial" SIZE="2"><!-- AdSpace sponsorship=sponsoredlinks Ads.ID!=$LinkAd1$ Ads.ID!=$LinkAd2$ LinkAd3:=Ads.ID --><a href="/event.ng/Type=click&ProfileID=439&RunID=5218&AdID=3131&GroupID=25&FamilyID=1544&TagValues=1141&Redirect=http:%2F%2Fwww.devx.com%2FjavaSR%2F" target="_top">
SPECIAL REPORT: Winning with Web Services
</a>
<!-- /AdSpace --></TD></TR>

<TR><TD><FONT FACE="Arial" SIZE="2"><!-- AdSpace sponsorship=sponsoredlinks Ads.ID!=$LinkAd1$ Ads.ID!=$LinkAd2$ Ads.ID!=$LinkAd3$ LinkAd4:=Ads.ID --><a href="/event.ng/Type=click&ProfileID=439&RunID=5272&AdID=3166&GroupID=25&FamilyID=1558&TagValues=1141&Redirect=http:%2F%2Fportals.devx.com%2FIntel%2FArticle%2F6443" target="_top">
Reduce line-by-line headaches with this "code review in a box."
</a>
<!-- /AdSpace --></TD></TR>

<TR BGCOLOR="D9D9D9"><TD><FONT FACE="Arial" SIZE="2"><!-- AdSpace sponsorship=sponsoredlinks Ads.ID!=$LinkAd1$ Ads.ID!=$LinkAd2$ Ads.ID!=$LinkAd3$ Ads.ID!=$LinkAd4$ --><a href="/event.ng/Type=click&ProfileID=439&RunID=5280&AdID=3193&GroupID=25&FamilyID=1563&TagValues=1141&Redirect=http:%2F%2Fportals.devx.com%2Fdatadirect%2FArticle%2F6559" target="_top">
How do Drivers Access UNICODE? Get the Scoop Here...
</a>
<!-- /AdSpace --></TD></TR></TABLE>
</TD></TR></TABLE>
<BR>
<table align="center">
	<tr>
		<td>
		<SCRIPT language="JavaScript1.1" SRC="http://ad.doubleclick.net/adj/devx.cplus.dart/cplus;abr=!webtv;door=;dcopt=ist;sz=468x60;tile=2;ord=1328336876629?">
		</SCRIPT> 
		<SCRIPT> 
		if ((!document.images && navigator.userAgent.indexOf('Mozilla/2.') >= 0)  || navigator.userAgent.indexOf("WebTV")>= 0) {
		document.write('<A HREF="http://ad.doubleclick.net/jump/devx.cplus.dart/cplus;door=;sz=468x60;tile=2;ord=1328336876629?">');
		document.write('<IMG SRC="http://ad.doubleclick.net/ad/devx.cplus.dart/cplus;door=;sz=468x60;tile=2;ord=1328336876629?" border="0" height="60" width="468"></A>') 
		} 
		</SCRIPT> 
		<NOSCRIPT> 
		<A HREF="http://ad.doubleclick.net/jump/devx.cplus.dart/cplus;door=;sz=468x60;tile=2;ord=1328336876629?" >
		<IMG SRC="http://ad.doubleclick.net/ad/devx.cplus.dart/cplus;door=;sz=468x60;tile=2;ord=1328336876629?" border="0" height="60" width="468"></A>
		</NOSCRIPT>
		</td>
		<td width="5">&nbsp;</td>
	</tr>
</table>
</td>
</tr>
</table>

<table align=center><tr><td><center>
<table border="0" cellspacing="0" cellpadding="10">
	<tr>
		<td><center><font face="Verdana, Helvetica, Arial, sans-serif" size="1">
		<a href="http://www.devx.com">DevX Home</a> | 
		<a href="http://www.devx.com/dotnet/">.NET Zone</a> | 
		<a href="http://www.devx.com/java">Java Zone</a> | 
		<a href="http://www.devx.com/gethelp/">Get Help</a> |
		<a href="http://www.devx.com/CoDeMag/">CoDe Magazine</a>
		<br>
		<a href="http://www.devx.com/vb">VB Zone</a> |
		<a href="http://www.devx.com/cplus">C++ Zone</a> |
		<a href="http://www.devx.com/xml">XML Zone</a> |
		<a href="http://www.devx.com/enterprise">Enterprise Zone</a> |
		<a href="http://www.devx.com/dbzone/">Database Dev Zone</a> 
		<BR>
		<a href="http://www.devx.com/wireless/">Wireless Zone</a>| 
		<a href="http://www.devx.com/security">Security Zone</a> | 
		<a href="http://www.devx.com/asp">ASP Zone</a> | 
		<a href="http://www.devx.com/dhtml">DHTML Zone</a> |
		<a href="http://www.devx.com/uml">UML Zone</a> 
		<BR>
		<a href="http://marketplace.devx.com">MarketPlace</a> | 
		<a href="http://devx.newmediary.com/">RFP Exchange</a> |
		<a href="http://news.devx.com/">Discussions</a> |
		<a href="http://www.devx.com/free/newsletters/displayNewsletters.asp">Newsletters</a> |
		<a href="http://www.devx.com/free/tips/tipsearch.asp">Tech Tips</a> | 
		<a href="http://www.devx.com/sourcebank/">Sourcebank</a>
		<BR>
		<a href="http://www.devx.net/advertiser/default.asp">Advertise</a>  |
		<a href="http://www.devx.com/free/help/help.asp">Help</a>  |
		<a href="http://www.devx.com/copyright.asp">Copyright</a> |
		<a href="http://www.devx.com/free/help/privacy.asp">Privacy Statement</a>
		</font></center></td>
	</tr>
</table>
</center>
</td></tr></table>

<CENTER><FONT FACE="Arial, Helvetica, sans-serif" SIZE="1"><A HREF="http://www.devx.com/copyright.asp">Copyright Information</A>/<A HREF="http://www.devx.com/free/help/privacy.asp">Privacy Statement</A> </FONT></CENTER>
		</td>
	</tr>
</table>

</body>
</html>


