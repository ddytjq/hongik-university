ID=D0887
URL=http://www.javagrande.org/leapforward/jgjavaonejune99/sld019.htm
SIZE=2089
DATE=16/07/02
TIME=15:01:05
DATASET=Java
HTML=
<!--  Presentation generated by Internet Assistant for Microsoft PowerPoint 97 -->

<HTML>
<HEAD>

<meta name="GENERATOR" content="Microsoft Internet Assistant for Microsoft PowerPoint 97">
 <TITLE>Numerical Computing in Java</TITLE> 
</HEAD>

<BODY     >

<CENTER>
<TABLE WIDTH=100%> 
     <TR> <TD WIDTH=100% ALIGN=CENTER>
         <A HREF="sld001.htm"><IMG SRC="first.gif" BORDER=0 ALT="First"></A>
         <A HREF="sld018.htm"><IMG SRC="prev.gif" BORDER=0 ALT="Previous"></A>
         <A HREF="sld020.htm"><IMG SRC="next.gif" BORDER=0 ALT="Next"></A>
         <A HREF="sld028.htm"><IMG SRC="last.gif" BORDER=0 ALT="Last"></A>
         <IMG SRC="space.gif" BORDER=0>
         <A HREF="index.htm"><IMG SRC="info.gif" BORDER=0 ALT="Index"></A>
         <A HREF="http://www.npac.syr.edu"><IMG SRC="home.gif" BORDER=0 ALT="Home"></A>
         <A HREF="tsld019.htm"><IMG SRC="text.gif" BORDER=0 ALT="Text"></A>
     </TD> </TR>
     <TR> <TD WIDTH=100% ALIGN=CENTER>
         <IMG SRC="img019.JPG" usemap="#Objmap" WIDTH=800 HEIGHT=600 BORDER=0>
     </TD> </TR>
</TABLE>
<P>Slide 19 of 28</P>
</CENTER>
<!-- <UL>
<H2>Numerical Computing in Java</H2>
<BR></UL></P>
<P><UL>
<LI><H2>So Java not only will run anywhere but can be expected to get same answers everywhere
</H2>
<UL>
<LI>As long as use of Native (C, Fortran) libraries and indeterminate concurrency controlled
</UL></UL><UL>
<LI><H2>Natural tension between performance (both in terms of speed and precision) and reproducibility
</H2>
<UL>
<LI>Need to encourage more research into "reproducible algorithms" but support both goals
</UL></UL><UL>
<LI><H2>Java has particularly bad floating point performance due to
</H2>
<UL>
<LI>As in all applications, immature compiler (JIT) technology
<LI>does not exploit proprietary hardware features (extended precision, fused multiply add)
<LI>does not allow well known compiler optimizations (associativity)
</UL></UL><UL>
<LI><H2>Solution requires "Change in Java Rules" and better compilers</H2>
</UL></P>
<P>  -->
</Body>
</HTML>

