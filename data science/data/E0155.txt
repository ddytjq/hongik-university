ID=E0155
URL=http://www.rit.edu/~jpw9607/gne/html/classGNE_1_1Connection.html
SIZE=37724
DATE=12/07/02
TIME=19:18:05
DATASET=C
HTML=<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>GNE::Connection class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body bgcolor="#ffffff">
<!-- Generated by Doxygen 1.2.13.1 -->
<center>
<a class="qindex" href="main.html">Main Page</a> &nbsp; <a class="qindex" href="namespaces.html">Namespace List</a> &nbsp; <a class="qindex" href="hierarchy.html">Class Hierarchy</a> &nbsp; <a class="qindex" href="annotated.html">Compound List</a> &nbsp; <a class="qindex" href="files.html">File List</a> &nbsp; <a class="qindex" href="namespacemembers.html">Namespace Members</a> &nbsp; <a class="qindex" href="functions.html">Compound Members</a> &nbsp; <a class="qindex" href="pages.html">Related Pages</a> &nbsp; </center>
<hr><h1>GNE::Connection  Class Reference</h1>A class resembling any type of connection to a remote computer. 
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="Connection_8h-source.html">Connection.h</a>&gt;</code>
<p>
<p>Inheritance diagram for GNE::Connection::
<p><center><img src="classGNE_1_1Connection.gif" usemap="#GNE::Connection_map" border="0"></center>
<map name="GNE::Connection_map">
<area href="classGNE_1_1ClientConnection.html" alt="GNE::ClientConnection" shape="rect" coords="0,56,166,80">
<area href="classGNE_1_1ServerConnection.html" alt="GNE::ServerConnection" shape="rect" coords="176,56,342,80">
<area href="classGNE_1_1ListServerConnection.html" alt="GNE::ListServerConnection" shape="rect" coords="0,112,166,136">
</map>
<a href="classGNE_1_1Connection-members.html">List of all members.</a><table border=0 cellpadding=0 cellspacing=0>
<tr><td colspan=2><br><h2>Public Methods</h2></td></tr>
<tr><td nowrap align=right valign=top>&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1Connection.html#a0">Connection</a> (<a class="el" href="classGNE_1_1ConnectionListener.html">ConnectionListener</a> *listener=NULL)</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Intializes this class, given the flow control parameters.</em> <a href="#a0">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>virtual&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1Connection.html#a1">~Connection</a> ()</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>A <a class="el" href="classGNE_1_1Connection.html">Connection</a> will automatically disconnect if it is connected when it is destructed.</em> <a href="#a1">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top><a class="el" href="classGNE_1_1ConnectionListener.html">ConnectionListener</a> *&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1Connection.html#a2">getListener</a> () const</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Returns the currently registered event Listener.</em> <a href="#a2">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>void&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1Connection.html#a3">setListener</a> (<a class="el" href="classGNE_1_1ConnectionListener.html">ConnectionListener</a> *listener)</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Sets a new event listener.</em> <a href="#a3">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top><a class="el" href="classGNE_1_1PacketStream.html">PacketStream</a> &amp;&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1Connection.html#a4">stream</a> ()</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Returns the <a class="el" href="classGNE_1_1PacketStream.html">PacketStream</a> associated with this class.</em> <a href="#a4">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top><a class="el" href="structGNE_1_1ConnectionStats.html">ConnectionStats</a>&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1Connection.html#a5">getStats</a> (int reliable) const</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>If stats is enabled, returns <a class="el" href="classGNE_1_1Connection.html">Connection</a> stats.</em> <a href="#a5">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top><a class="el" href="classGNE_1_1Address.html">Address</a>&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1Connection.html#a6">getLocalAddress</a> (bool reliable) const</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Returns the local address of this connection.</em> <a href="#a6">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top><a class="el" href="classGNE_1_1Address.html">Address</a>&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1Connection.html#a7">getRemoteAddress</a> (bool reliable) const</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Returns the remote address of this connection.</em> <a href="#a7">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top><a name="a8" doxytag="GNE::Connection::isConnected"></a>
bool&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1Connection.html#a8">isConnected</a> () const</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Returns true if this <a class="el" href="classGNE_1_1Connection.html">Connection</a> is active and ready to send/recieve.</em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>void&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1Connection.html#a9">disconnect</a> ()</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Immediately disconnects this socket.</em> <a href="#a9">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>void&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1Connection.html#a10">disconnectSendAll</a> (int waitTime=10000)</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>A blocking call that disconnects nicely.</em> <a href="#a10">More...</a><em></em></font><br><br></td></tr>
<tr><td colspan=2><br><h2>Protected Methods</h2></td></tr>
<tr><td nowrap align=right valign=top><a name="b0" doxytag="GNE::Connection::addHeader"></a>
void&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1Connection.html#b0">addHeader</a> (<a class="el" href="classGNE_1_1RawPacket.html">RawPacket</a> &amp;raw)</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>A utility function for <a class="el" href="classGNE_1_1ServerConnection.html">ServerConnection</a> and <a class="el" href="classGNE_1_1ClientConnection.html">ClientConnection</a> to add the standard header onto the connection packets.</em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top><a name="b1" doxytag="GNE::Connection::addVersions"></a>
void&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1Connection.html#b1">addVersions</a> (<a class="el" href="classGNE_1_1RawPacket.html">RawPacket</a> &amp;raw)</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>A utility function for <a class="el" href="classGNE_1_1ServerConnection.html">ServerConnection</a> and <a class="el" href="classGNE_1_1ClientConnection.html">ClientConnection</a> to add the version information to a packet.</em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>void&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1Connection.html#b2">checkHeader</a> (<a class="el" href="classGNE_1_1RawPacket.html">RawPacket</a> &amp;raw, ProtocolViolation::ViolationType t=ProtocolViolation::OtherViolation)</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>A utility function for <a class="el" href="classGNE_1_1ServerConnection.html">ServerConnection</a> and <a class="el" href="classGNE_1_1ClientConnection.html">ClientConnection</a> to check to verify the GNE header of the connecting packets.</em> <a href="#b2">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>void&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1Connection.html#b3">checkVersions</a> (<a class="el" href="classGNE_1_1RawPacket.html">RawPacket</a> &amp;raw)</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>A utility function for <a class="el" href="classGNE_1_1ServerConnection.html">ServerConnection</a> and <a class="el" href="classGNE_1_1ClientConnection.html">ClientConnection</a> to check the <a class="el" href="namespaceGNE.html">GNE</a> version, game name, and user versions in the <a class="el" href="classGNE_1_1RawPacket.html">RawPacket</a>.</em> <a href="#b3">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top><a name="b4" doxytag="GNE::Connection::onReceive"></a>
void&nbsp;</td><td valign=bottom><b>onReceive</b> ()</td></tr>
<tr><td nowrap align=right valign=top><a name="b5" doxytag="GNE::Connection::onDoneWriting"></a>
void&nbsp;</td><td valign=bottom><b>onDoneWriting</b> ()</td></tr>
<tr><td nowrap align=right valign=top>void&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1Connection.html#b6">finishedConnecting</a> ()</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>The connecting has just finished and the flags need to be changed.</em> <a href="#b6">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>void&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1Connection.html#b7">reg</a> (bool reliable, bool unreliable)</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Register this <a class="el" href="classGNE_1_1Connection.html">Connection</a> object's sockets with the <a class="el" href="classGNE_1_1ConnectionEventGenerator.html">ConnectionEventGenerator</a>.</em> <a href="#b7">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>void&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1Connection.html#b8">unreg</a> (bool reliable, bool unreliable)</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Unregistered the sockets which are specified by passing true to the appropriate parameter.</em> <a href="#b8">More...</a><em></em></font><br><br></td></tr>
<tr><td colspan=2><br><h2>Protected Attributes</h2></td></tr>
<tr><td nowrap align=right valign=top><a name="n0" doxytag="GNE::Connection::eventListener"></a>
<a class="el" href="classGNE_1_1EventThread.html">EventThread</a> *&nbsp;</td><td valign=bottom><b>eventListener</b></td></tr>
<tr><td nowrap align=right valign=top><a name="n1" doxytag="GNE::Connection::sockets"></a>
<a class="el" href="classGNE_1_1SocketPair.html">SocketPair</a>&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1Connection.html#n1">sockets</a></td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>The pair of sockets.</em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top><a class="el" href="classGNE_1_1PacketStream.html">PacketStream</a> *&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1Connection.html#n2">ps</a></td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>The <a class="el" href="classGNE_1_1PacketStream.html">PacketStream</a> associated with this <a class="el" href="classGNE_1_1Connection.html">Connection</a>.</em> <a href="#n2">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>bool&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1Connection.html#n3">connecting</a></td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Is this connecting? We need to know this so we don't report as ready for communications, but still want to disconnect.</em> <a href="#n3">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top><a name="n4" doxytag="GNE::Connection::connected"></a>
bool&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1Connection.html#n4">connected</a></td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Is this <a class="el" href="classGNE_1_1Connection.html">Connection</a> active and ready for communications?</em></font><br><br></td></tr>
<tr><td colspan=2><br><h2>Friends</h2></td></tr>
<tr><td nowrap align=right valign=top><a name="l0" doxytag="GNE::Connection::Listener"></a>
class&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1Connection.html#l0">Listener</a></td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Make Listener a friend so it can call our onRecieve(bool) event, which will properly parse the packets.</em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top><a name="l1" doxytag="GNE::Connection::PacketStream"></a>
class&nbsp;</td><td valign=bottom><b>PacketStream</b></td></tr>
<tr><td nowrap align=right valign=top><a name="l2" doxytag="GNE::Connection::SyncConnection"></a>
class&nbsp;</td><td valign=bottom><b>SyncConnection</b></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
A class resembling any type of connection to a remote computer.
<p>
A connection also manages flow control through its <a class="el" href="classGNE_1_1PacketStream.html">PacketStream</a>.
<p>
When you create a new <a class="el" href="classGNE_1_1Connection.html">Connection</a>, you will want to register a <a class="el" href="classGNE_1_1ConnectionListener.html">ConnectionListener</a> for it so you can receive its events. 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a name="a0" doxytag="GNE::Connection::Connection"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> GNE::Connection::Connection </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classGNE_1_1ConnectionListener.html">ConnectionListener</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp; <em>listener</em> = NULL          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Intializes this class, given the flow control parameters.
<p>
<dl compact><dt><b>
Parameters: </b><dd>
<table border=0 cellspacing=2 cellpadding=0>
<tr><td valign=top><em>listener</em>&nbsp;</td><td>
the <a class="el" href="classGNE_1_1ConnectionListener.html">ConnectionListener</a> instance that will be setup as the initial listener for the events. It can be NULL to start with but must be set before performing any other operations on this <a class="el" href="classGNE_1_1Connection.html">Connection</a> instance. </td></tr>
</table>
</dl>    </td>
  </tr>
</table>
<a name="a1" doxytag="GNE::Connection::~Connection"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> GNE::Connection::~Connection </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp;          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
A <a class="el" href="classGNE_1_1Connection.html">Connection</a> will automatically disconnect if it is connected when it is destructed.
<p>
Connections won't allocate or deallocate their listeners, so you may want to delete your listener that was registered     </td>
  </tr>
</table>
<hr><h2>Member Function Documentation</h2>
<a name="b2" doxytag="GNE::Connection::checkHeader"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void GNE::Connection::checkHeader </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classGNE_1_1RawPacket.html">RawPacket</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap>&nbsp; <em>raw</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>ProtocolViolation::ViolationType&nbsp;</td>
          <td class="mdname" nowrap>&nbsp; <em>t</em> = ProtocolViolation::OtherViolation</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [protected]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
A utility function for <a class="el" href="classGNE_1_1ServerConnection.html">ServerConnection</a> and <a class="el" href="classGNE_1_1ClientConnection.html">ClientConnection</a> to check to verify the GNE header of the connecting packets.
<p>
The <a class="el" href="classGNE_1_1RawPacket.html">RawPacket</a> is read from so this function will move the reading position to the next element after the header. If it throws an exception, the read position is undefined.<dl compact><dt><b>
Parameters: </b><dd>
<table border=0 cellspacing=2 cellpadding=0>
<tr><td valign=top><em>t</em>&nbsp;</td><td>
the type of <a class="el" href="classGNE_1_1ProtocolViolation.html">ProtocolViolation</a> to throw if it throws one. </td></tr>
</table>
</dl><dl compact><dt><b>
Exceptions: </b><dd>
<table border=0 cellspacing=2 cellpadding=0>
<tr><td valign=top><em><a class="el" href="classGNE_1_1ProtocolViolation.html">ProtocolViolation</a></em>&nbsp;</td><td>
 if the next bytes of the <a class="el" href="classGNE_1_1RawPacket.html">RawPacket</a> is not the proper GNE header. </td></tr>
</table>
</dl>    </td>
  </tr>
</table>
<a name="b3" doxytag="GNE::Connection::checkVersions"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void GNE::Connection::checkVersions </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classGNE_1_1RawPacket.html">RawPacket</a> &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp; <em>raw</em>          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap><code> [protected]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
A utility function for <a class="el" href="classGNE_1_1ServerConnection.html">ServerConnection</a> and <a class="el" href="classGNE_1_1ClientConnection.html">ClientConnection</a> to check the <a class="el" href="namespaceGNE.html">GNE</a> version, game name, and user versions in the <a class="el" href="classGNE_1_1RawPacket.html">RawPacket</a>.
<p>
This function behaves similarly to checkHeader.<dl compact><dt><b>
Exceptions: </b><dd>
<table border=0 cellspacing=2 cellpadding=0>
<tr><td valign=top><em><a class="el" href="classGNE_1_1Error.html">Error</a></em>&nbsp;</td><td>
 with a code of Error::GNETheirVersionHigh or Error::GNETheirVersionLow if the <a class="el" href="namespaceGNE.html">GNE</a> protocol versions do not match. </td></tr>
<tr><td valign=top><em><a class="el" href="classGNE_1_1WrongGame.html">WrongGame</a></em>&nbsp;</td><td>
 if the game names don't match. </td></tr>
<tr><td valign=top><em><a class="el" href="classGNE_1_1UserVersionMismatch.html">UserVersionMismatch</a></em>&nbsp;</td><td>
 if the user version numbers don't match. </td></tr>
</table>
</dl>    </td>
  </tr>
</table>
<a name="a9" doxytag="GNE::Connection::disconnect"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void GNE::Connection::disconnect </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp;          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Immediately disconnects this socket.
<p>
No more data will be recieved or sent on this socket. If you want to disconnect more nicely, use disconnectSendAll. It is okay to call this function even when this <a class="el" href="classGNE_1_1Connection.html">Connection</a> is already disconnected.<br>
 NOTE: You may not reconnect this connection object after calling disconnect. <dl compact><dt><b>
See also: </b><dd>
<a class="el" href="classGNE_1_1Connection.html#a10">disconnectSendAll</a>() </dl>    </td>
  </tr>
</table>
<a name="a10" doxytag="GNE::Connection::disconnectSendAll"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void GNE::Connection::disconnectSendAll </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp; <em>waitTime</em> = 10000          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
A blocking call that disconnects nicely.
<p>
This has the same effect as disconnect, except that all data waiting to be sent will be sent if possible. If the connection is already disconnected, this function does nothing. <dl compact><dt><b>
Parameters: </b><dd>
<table border=0 cellspacing=2 cellpadding=0>
<tr><td valign=top><em>waitTime</em>&nbsp;</td><td>
the max amount of time in ms to wait for the outgoing packet queue to clear. </td></tr>
</table>
</dl><dl compact><dt><b>
See also: </b><dd>
<a class="el" href="classGNE_1_1Connection.html#a9">disconnect</a>() </dl>    </td>
  </tr>
</table>
<a name="b6" doxytag="GNE::Connection::finishedConnecting"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void GNE::Connection::finishedConnecting </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp;          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap><code> [protected]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
The connecting has just finished and the flags need to be changed.
<p>
Since this needs a mutex, we make a function to handle this.     </td>
  </tr>
</table>
<a name="a2" doxytag="GNE::Connection::getListener"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classGNE_1_1ConnectionListener.html">ConnectionListener</a> * GNE::Connection::getListener </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp;          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns the currently registered event Listener.
<p>
This can be useful to delete your registered user right after disconnection, so you won't have to keep track of the pointer after you allocate it.     </td>
  </tr>
</table>
<a name="a6" doxytag="GNE::Connection::getLocalAddress"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classGNE_1_1Address.html">Address</a> GNE::Connection::getLocalAddress </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">bool&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp; <em>reliable</em>          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns the local address of this connection.
<p>
If the requested socket has not been opened, the returned <a class="el" href="classGNE_1_1Address.html">Address</a> will be invalid (!isValid()). <dl compact><dt><b>
Parameters: </b><dd>
<table border=0 cellspacing=2 cellpadding=0>
<tr><td valign=top><em>reliable</em>&nbsp;</td><td>
sometimes two sockets are used for reliable and unreliable data. Specify which low-level socket you want the address of. </td></tr>
</table>
</dl><dl compact><dt><b>
See also: </b><dd>
<a class="el" href="classGNE_1_1Address.html">GNE::Address</a> </dl>    </td>
  </tr>
</table>
<a name="a7" doxytag="GNE::Connection::getRemoteAddress"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classGNE_1_1Address.html">Address</a> GNE::Connection::getRemoteAddress </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">bool&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp; <em>reliable</em>          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns the remote address of this connection.
<p>
If the requested socket is not connected, the returned <a class="el" href="classGNE_1_1Address.html">Address</a> will be invalid (!isValid()). <dl compact><dt><b>
Parameters: </b><dd>
<table border=0 cellspacing=2 cellpadding=0>
<tr><td valign=top><em>reliable</em>&nbsp;</td><td>
sometimes two sockets are used for reliable and unreliable data. Specify which low-level socket you want the address of. </td></tr>
</table>
</dl><dl compact><dt><b>
See also: </b><dd>
<a class="el" href="classGNE_1_1Address.html">GNE::Address</a> </dl>    </td>
  </tr>
</table>
<a name="a5" doxytag="GNE::Connection::getStats"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="structGNE_1_1ConnectionStats.html">ConnectionStats</a> GNE::Connection::getStats </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp; <em>reliable</em>          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
If stats is enabled, returns <a class="el" href="classGNE_1_1Connection.html">Connection</a> stats.
<p>
<dl compact><dt><b>
Parameters: </b><dd>
<table border=0 cellspacing=2 cellpadding=0>
<tr><td valign=top><em>reliable</em>&nbsp;</td><td>
<ul>
<li>If greater than 0, returns reliable stats only. <li>If 0, returns unreliable transfer stats only. <li>If less than 0, returns cumulative stats for both.</ul>
</td></tr>
</table>
</dl><dl compact><dt><b>
Returns: </b><dd>
various connection stats. </dl><dl compact><dt><b>
See also: </b><dd>
<a class="el" href="structGNE_1_1ConnectionStats.html">ConnectionStats</a> , <a class="el" href="namespaceGNE.html#a36">GNE::enableStats</a> </dl>    </td>
  </tr>
</table>
<a name="b7" doxytag="GNE::Connection::reg"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void GNE::Connection::reg </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">bool&nbsp;</td>
          <td class="mdname" nowrap>&nbsp; <em>reliable</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap>&nbsp; <em>unreliable</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [protected]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Register this <a class="el" href="classGNE_1_1Connection.html">Connection</a> object's sockets with the <a class="el" href="classGNE_1_1ConnectionEventGenerator.html">ConnectionEventGenerator</a>.
<p>
Pass true to register each socket type. Usually both will be registered, but in the future there may exist a new connection type that only uses one of the sockets.<br>
 The internal class <a class="el" href="classGNE_1_1ConnectionListener.html">ConnectionListener</a> will be used to trigger the proper onReceive(bool) event.<br>
 The sockets will be unregistered automatically when the object is destroyed, but they may be unregistered explicitly at an earlier time through <a class="el" href="classGNE_1_1Connection.html#b8">unreg</a>(bool, bool).<br>
 Registering a socket already registered will have no effect. <dl compact><dt><b>
See also: </b><dd>
onReceive(bool) , <a class="el" href="classGNE_1_1Connection.html#b8">unreg</a>(bool, bool) </dl>    </td>
  </tr>
</table>
<a name="a3" doxytag="GNE::Connection::setListener"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void GNE::Connection::setListener </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classGNE_1_1ConnectionListener.html">ConnectionListener</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp; <em>listener</em>          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets a new event listener.
<p>
All new events will be sent to the new listener. The function will block until the current event being processed (by the old listener) completes. If this is called from the event thread itself the function returns immediately and the next event will be sent to the new listener.
<p>
If the passed listener is NULL, this will hold the event thread. This does NOT stop event generation -- generated events still will enter the queue but the actual event function will not be called until a proper listener is set.
<p>
You MUST have an event listener set because the event thread must call its required events before this object can be destroyed.
<p>
If you care not to receive events because you are using <a class="el" href="classGNE_1_1SyncConnection.html">SyncConnection</a>, you will probably want to set <a class="el" href="classGNE_1_1ConnectionListener.html#d0">ConnectionListener::getNullListener</a> as the listener to discard all events before you wrap this <a class="el" href="classGNE_1_1Connection.html">Connection</a> with a <a class="el" href="classGNE_1_1SyncConnection.html">SyncConnection</a>.     </td>
  </tr>
</table>
<a name="a4" doxytag="GNE::Connection::stream"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classGNE_1_1PacketStream.html">PacketStream</a> &amp; GNE::Connection::stream </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp;          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns the <a class="el" href="classGNE_1_1PacketStream.html">PacketStream</a> associated with this class.
<p>
Writing and reading through this <a class="el" href="classGNE_1_1Connection.html">Connection</a> is done through this <a class="el" href="classGNE_1_1PacketStream.html">PacketStream</a>.     </td>
  </tr>
</table>
<a name="b8" doxytag="GNE::Connection::unreg"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void GNE::Connection::unreg </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">bool&nbsp;</td>
          <td class="mdname" nowrap>&nbsp; <em>reliable</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap>&nbsp; <em>unreliable</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [protected]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Unregistered the sockets which are specified by passing true to the appropriate parameter.
<p>
This function call is optional -- when the object is destroyed, unregistering is automatic if socket was registered. Trying to unregister sockets that are already unregistered will result in no effect.     </td>
  </tr>
</table>
<hr><h2>Member Data Documentation</h2>
<a name="n3" doxytag="GNE::Connection::connecting"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool GNE::Connection::connecting<code> [protected]</code>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Is this connecting? We need to know this so we don't report as ready for communications, but still want to disconnect.
<p>
This will be set after the sockets are registered and the <a class="el" href="classGNE_1_1PacketStream.html">PacketStream</a> is active.     </td>
  </tr>
</table>
<a name="n2" doxytag="GNE::Connection::ps"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classGNE_1_1PacketStream.html">PacketStream</a>* GNE::Connection::ps<code> [protected]</code>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
The <a class="el" href="classGNE_1_1PacketStream.html">PacketStream</a> associated with this <a class="el" href="classGNE_1_1Connection.html">Connection</a>.
<p>
This object also contains information about the in and out connection rates.     </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="Connection_8h-source.html">Connection.h</a><li>Connection.cpp</ul>
<hr><address><small>Generated on Fri Mar 8 03:03:22 2002 for GNE by
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.gif" alt="doxygen" align="middle" border=0 
width=110 height=53></a>1.2.13.1 written by <a href="mailto:dimitri@stack.nl">Dimitri van Heesch</a>,
 &copy;&nbsp;1997-2001</small></address>
</body>
</html>

