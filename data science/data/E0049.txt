ID=E0049
URL=http://www.hh.se/stud/d98rolb/ansi/alphalist.html
SIZE=14303
DATE=12/07/02
TIME=19:16:51
DATASET=C
HTML=<html>
<head>
  <title>AlphaList</title>
  <meta name="Generator" content="GuideML V1.6">
  <meta http-equiv="Content-Type" content="text/html">
</head>
<body>
<a href="main.html"><img src="toc.gif" alt="CONTENTS" border=0></a><a href="alphalist.html"><img src="index.gif" alt="INDEX" border=0></a><a href="main.html"><img src="prev.gif" alt="PREV" border=0></a><a href="charfuncs.html"><img src="next.gif" alt="NEXT" border=0></a><a href="http://www.hh.se/stud/d98rolb/programming.html"><img src="home.gif" alt="HOME" border=0></a>
<hr>
<pre>
Function                    Description
<a href="abort().html"> abort          </a>             abort the current process
<a href="abs().html"> abs            </a>             absolute value
<a href="acos().html"> acos           </a>             arccosine function
<a href="asctime().html"> asctime        </a>             generate an ASCII time string
<a href="asin().html"> asin           </a>             arcsine function
<a href="assert().html"> assert         </a>             assert program validity
<a href="atan2().html"> atan2          </a>             arctangent of x/y
<a href="atan().html"> atan           </a>             arctangent function
<a href="atexit().html"> atexit         </a>             set an exit trap
<a href="atof().html"> atof           </a>             convert an ASCII string to a floating-point number
<a href="atoi().html"> atoi           </a>             convert an ASCII string to an integer
<a href="atol().html"> atol           </a>             convert an ASCII string to a long integer
<a href="bsearch().html"> bsearch        </a>             perform a binary search
<a href="calloc().html"> calloc         </a>             allocate and clear memory
<a href="ceil().html"> ceil           </a>             get floating-point limits
<a href="clearerr().html"> clearerr       </a>             clear a level 2 I/O error flag
<a href="clock().html"> clock          </a>             measure program processor time
<a href="cosh().html"> cosh           </a>             hyperbolic cosine function
<a href="cos().html"> cos            </a>             cosine function
<a href="ctime().html"> ctime          </a>             convert a time_t value to an ASCII string
<a href="difftime().html"> difftime       </a>             compute the difference between two time_t values
<a href="div().html"> div            </a>             compute the quotient and the remainder
<a href="errno.html"> errno          </a>             error information
<a href="exit().html"> exit           </a>             terminate program execution
<a href="exp().html"> exp            </a>             exponential function
<a href="fabs().html"> fabs           </a>             floating-point or double-precision floating-point absolute value
<a href="fclose().html"> fclose         </a>             close a level 2 file
<a href="feof().html"> feof           </a>             check for a level 2 end-of-file
<a href="ferror().html"> ferror         </a>             check for a level 2 error
<a href="fflush().html"> fflush         </a>             flush a level 2 output buffer
<a href="fgetc().html"> fgetc          </a>             get a character from a file
<a href="fgetpos().html"> fgetpos        </a>             get the current fileposition
<a href="fgets().html"> fgets          </a>             get a string from a level 2 file
<a href="floor().html"> floor          </a>             get the floor of a real number
<a href="fmod().html"> fmod           </a>             floating-point modulus operations
<a href="fopen().html"> fopen          </a>             open a level 2 file
<a href="fprintf().html"> fprintf        </a>             formatted print
<a href="fputc().html"> fputc          </a>             put a character to a level 2 file
<a href="fputs().html"> fputs          </a>             put a string to a level 2 file
<a href="fread().html"> fread          </a>             read and write blocks
<a href="free().html"> free           </a>             free memory
<a href="freopen().html"> freopen        </a>             reopen a level 2 file
<a href="frexp().html"> frexp          </a>             split floating-point value
<a href="fscanf().html"> fscanf         </a>             formatted input conversions
<a href="fseek().html"> fseek          </a>             set a level 2 file position
<a href="fsetpos().html"> fsetpos        </a>             reposition a file
<a href="ftell().html"> ftell          </a>             get a level 2 file position
<a href="fwrite().html"> fwrite         </a>             write blocks to a level 2 file
<a href="getchar().html"> getchar        </a>             get a character from stdin
<a href="getc().html"> getc           </a>             get a character from a file
<a href="getenv().html"> getenv         </a>             get environment variable
<a href="gets().html"> gets           </a>             get a string from stdin
<a href="gmtime().html"> gmtime         </a>             unpack Greenwich Mean Time (GMT)
<a href="isalnum().html"> isalnum        </a>             check if a character is alphanumeric
<a href="isalpha().html"> isalpha        </a>             check if a character is alphabetic
<a href="iscntrl().html"> iscntrl        </a>             check if a character is a control character
<a href="isdigit().html"> isdigit        </a>             check if a character is a decimal digit (0-9)
<a href="isgraph().html"> isgraph        </a>             check if a character is a graphic character
<a href="islower().html"> islower        </a>             check if a character is lowercase
<a href="isprint().html"> isprint        </a>             check if a character is printable
<a href="ispunct().html"> ispunct        </a>             check if a character is a punctuation character
<a href="isspace().html"> isspace        </a>             check if a character is a space
<a href="isupper().html"> isupper        </a>             check if a character is uppercase
<a href="isxdigit().html"> isxdigit       </a>             check if a character is a hex character (0-9, A-F, a-f) 
<a href="labs().html"> labs           </a>             long integer absolute value
<a href="ldexp().html"> ldexp          </a>             combine floating-point value
<a href="ldiv().html"> ldiv           </a>             return the long integer quotient and the remainder
<a href="localeconv().html"> localeconv     </a>             return information on locale formatting conventions
<a href="localtime().html"> localtime      </a>             unpack local time
<a href="log10().html"> log10          </a>             base 10 logarithm function
<a href="log().html"> log            </a>             natural logarithm function
<a href="longjmp().html"> longjmp        </a>             perform a long jump
<a href="malloc().html"> malloc         </a>             allocate memory
<a href="mblen().html"> mblen          </a>             determine the length of a multibyte character
<a href="mbstowcs().html"> mbstowcs       </a>             convert a multibyte string to a wide-character string
<a href="mbtowc().html"> mbtowc         </a>             map a multibyte character to a wide character
<a href="memchr().html"> memchr         </a>             find a character in a memory block
<a href="memcmp().html"> memcmp         </a>             compare two memory blocks
<a href="memcpy().html"> memcpy         </a>             copy a memory block
<a href="memmove().html"> memmove        </a>             copy bytes in memory
<a href="memset().html"> memset         </a>             set a memory block to a value
<a href="mktime().html"> mktime         </a>             convert a broken down time to a time_t value
<a href="modf().html"> modf           </a>             split a floating-point value
<a href="offsetof().html"> offsetof       </a>             get the byte offset of a structure member
<a href="perror().html"> perror         </a>             print an error message
<a href="pow().html"> pow            </a>             raise a number to a power
<a href="printf().html"> printf         </a>             formatted print to stdout
<a href="putchar().html"> putchar        </a>             put a character to stdout
<a href="putc().html"> putc           </a>             put a character to a level 2 file
<a href="puts().html"> puts           </a>             put a string to stdout
<a href="qsort().html"> qsort          </a>             sort a data array
<a href="raise().html"> raise          </a>             generate a signal
<a href="rand().html"> rand           </a>               generate a random number
<a href="realloc().html"> realloc        </a>             reallocate memory
<a href="remove().html"> remove         </a>             remove a file
<a href="rename().html"> rename         </a>             rename a file
<a href="rewind().html"> rewind         </a>             reset a level 2 file position to its first byte
<a href="scanf().html"> scanf          </a>             formatted input conversions
<a href="setbuf().html"> setbuf         </a>             set the buffer mode for a level 2 file
<a href="setjmp().html"> setjmp         </a>             set long jump parameters
<a href="setlocale().html"> setlocale      </a>             set locale information for a program
<a href="setvbuf().html"> setvbuf        </a>             set the buffer mode for a level 2 file
<a href="setvbuf().html"> setvbuf        </a>             set the variable buffer for a level 2 file
<a href="signal().html"> signal         </a>             establish event traps
<a href="sinh().html"> sinh           </a>             hyperbolic sine function
<a href="sin().html"> sin            </a>             sine function
<a href="sprintf().html"> sprintf        </a>             formatted print to a string
<a href="sqrt().html"> sqrt           </a>             square root function
<a href="srand().html"> srand          </a>               set a seed for the rand function
<a href="sscanf().html"> sscanf         </a>             formatted input conversions
<a href="strcat().html"> strcat         </a>             concatenate strings
<a href="strchr().html"> strchr         </a>             find a character in a string
<a href="strcmp().html"> strcmp         </a>             compare strings
<a href="strcmp().html"> strcmp         </a>             compare strings, case sensitive
<a href="strcoll().html"> strcoll        </a>             compare strings based on locale
<a href="strcpy().html"> strcpy         </a>             copy one string to another
<a href="strcspn().html"> strcspn        </a>             count the number of string characters not in the set
<a href="strerror().html"> strerror       </a>             print the text for a given error number
<a href="strftime().html"> strftime       </a>             format a time string
<a href="strlen().html"> strlen         </a>             measure the length of a string
<a href="strncat().html"> strncat        </a>             concatenate strings, length limited
<a href="strncmp().html"> strncmp        </a>             compare strings, length limited
<a href="strncpy().html"> strncpy        </a>             copy a string, length limited
<a href="strpbrk().html"> strpbrk        </a>             find a break character in a string
<a href="strrchr().html"> strrchr        </a>             find a character not in a string
<a href="strspn().html"> strspn         </a>             count longest span of characters in the set
<a href="strstr().html"> strstr         </a>             find a substring inside of a string
<a href="strtod().html"> strtod         </a>             convert a string to a double-precision floating-point number
<a href="strtok().html"> strtok         </a>             get a token
<a href="strtol().html"> strtol         </a>             convert a string to a long integer
<a href="strtoul().html"> strtoul        </a>             convert a string to an unsigned long integer
<a href="strxfrm().html"> strxfrm        </a>             transform a string
<a href="system().html"> system         </a>             call the system command processor
<a href="tanh().html"> tanh           </a>             hyperbolic tangent function
<a href="tan().html"> tan            </a>             tangent function
<a href="time().html"> time           </a>             get the system time in seconds
<a href="tmpfile().html"> tmpfile        </a>             open a temporary file stream
<a href="tmpnam().html"> tmpnam         </a>             create a temporary filename
<a href="tolower().html"> tolower        </a>             convert a character to lowercase
<a href="toupper().html"> toupper        </a>             convert a character to uppercase
<a href="ungetc().html"> ungetc         </a>             push an input character back
<a href="va_arg().html"> va_arg         </a>             get an argument from a varying-length argument list
<a href="va_end().html"> va_end         </a>             end varying-length argument list processing
<a href="va_start().html"> va_start       </a>             begin varying-length argument list processing
<a href="vfprintf().html"> vfprintf       </a>             formatted write of a varying-length argument list to a file
<a href="vprintf().html"> vprintf        </a>             formatted write of a varying-length argument list to stdout
<a href="vsprintf().html"> vsprintf       </a>             formatted write of a varying-length argument list to a string
<a href="wcstombs().html"> wcstombs       </a>             convert a wide-character string to a multibyte string
<a href="wctomb().html"> wctomb         </a>             map a wide character to a multibyte character
</pre>
<hr>
<a href="main.html"><img src="toc.gif" alt="CONTENTS" border=0></a><a href="alphalist.html"><img src="index.gif" alt="INDEX" border=0></a><a href="main.html"><img src="prev.gif" alt="PREV" border=0></a><a href="charfuncs.html"><img src="next.gif" alt="NEXT" border=0></a><a href="http://www.hh.se/stud/d98rolb/programming.html"><img src="home.gif" alt="HOME" border=0></a>
</body>
</html>

