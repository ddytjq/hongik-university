ID=E0505
URL=http://www.troubleshooters.com/codecorn/littperl/perlsnip.htm
SIZE=5507
DATE=12/07/02
TIME=19:21:35
DATASET=C
HTML=<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
   <TITLE>A Few Other Handy Snippets</TITLE>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="description" CONTENT="Debugging and Troubleshooting Source Code including MS Access, C++, Delphi, FoxPro, MFC, SQL, Visual Basic">
   <META NAME="keywords" CONTENT="debugging, troubleshooting, Source Code, Access, C++, Delphi, FoxPro, MFC, Microsoft Foundation Classes, SQL, Visual Basic">
   <META NAME="FORMATTER" CONTENT="Microsoft FrontPage 1.1">
   <META NAME="Author" CONTENT="Steve Litt">
   <META NAME="Description" CONTENT="PERL Snippets">
   <META NAME="KeyWords" CONTENT="PERL,perl,CGI">
   <META NAME="GENERATOR" CONTENT="Mozilla/3.01Gold (Win95; U) [Netscape]">
</HEAD>
<BODY TEXT="#000000" BGCOLOR="#FFFFF0" LINK="#0000EE" VLINK="#551A8B" ALINK="#FF0000" BACKGROUND="../../tcbk.gif">

<H2 ALIGN=CENTER><A NAME="top"></A><A HREF="../../troubleshooters.htm">Troubleshooters.Com</A>
and <A HREF="../index.htm">Code Corner</A> Present</H2>

<H1 ALIGN=CENTER><A HREF="index.htm">Steve Litt's PERLs of Wisdom</A>:<BR>
A Few Other Handy Snippets</H1>

<CENTER><P><A HREF="../../cpyright.htm">Copyright (C) 1998 by Steve Litt</A></P></CENTER>

<P>
<HR></P>

<H1><A NAME="Contents"></A>Contents</H1>

<UL>
<LI><A HREF="#toupper">Converting a string to upper case</A></LI>

<LI><A HREF="#TimeString">Reporting the Time as a String</A></LI>

<LI><A HREF="#Appending">Appending to a Log File</A></LI>

<LI><A HREF="#CommandLineArgs">Using Command Line Arguments</A></LI>

<LI><A HREF="#File2List">Converting a File to a List</A></LI>

<LI><A HREF="#LoopingThroughFile">Looping Through a File</A></LI>
</UL>

<H1><A NAME="toupper"></A>Converting a string to upper case</H1>

<PRE> $string =~ tr/[a-z]/[A-Z]/;</PRE>

<H1><A NAME="TimeString"></A>Reporting the Time as a String</H1>

<P>This subroutine reports the time as YYYY-MM-DD @ HH:MM:SS format.</P>

<PRE>sub timestamp
  {
  my($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst);
  ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) =
                                                  localtime(time);
  my($string);
  $string = sprintf(&quot;%04d-%02d-%02d @ %02d:%02d:%02d&quot;,
               1900 + $year, $mon+1, $mday, $hour, $min, $sec);
  return($string);
  }</PRE>

<H1><A NAME="Appending"></A>Appending to a Log File</H1>

<PRE>open(LOGFILE, &quot;&gt;&gt;batch.log&quot;);</PRE>

<PRE>#**Note a dot between strings concatenates them. \t is tab, \n is newline
print LOGFILE &amp;timestamp() . &quot;\tSecond process started\n&quot;;
close(LOGFILE);</PRE>

<H1><A NAME="CommandLineArgs"></A>Using Command Line Arguments</H1>

<PRE>#******* MAIN ROUTINE *********
print &quot;First  arg (not program name as in C): $ARGV[0]\n;
print &quot;Second arg: $ARGV[1]\n;
print &quot;Third  arg: $ARGV[2]\n;
print &quot;\n&quot;;</PRE>

<H1><A NAME="File2List"></A>Converting a File to a List</H1>

<P>Note that because of memory limitations, this should be done only on
small to medium sized files. For large files or files whose length is unknown
at design time, loop through the file instead.</P>

<PRE>open(PROFILE, &quot;.profile&quot;);
@profile = &lt;PROFILE&gt;;
close(PROFILE);</PRE>

<H1><A NAME="LoopingThroughFile"></A>Looping Through a File</H1>

<P>This opens autoexec.bat for input, autoexec.rem for output, and copies
only the lines that aren't remmed out.</P>

<PRE>open(INPUT,  &quot;autoexec.bat&quot;);
open(OUTPUT, &quot;&gt;autoexec.rem&quot;);   # The &gt; means open for write, 
                                 #  over original if existed.
while (&lt;INPUT&gt;)
  {
  my($line) = $_;  #preserve $1, the line just read, nomatter what
  chomp $line;     #blow off trailing newline

  <A HREF="#unless">unless</A>($line <A HREF="#=~">=~</A> <A HREF="#forwardslashes">/</A><A HREF="#^">^</A><A HREF="#/s">\s</A><A HREF="#*">*</A><A HREF="#rem">rem</A><A HREF="#forwardslashes">/</A><A HREF="#i">i</A>)    #click word or symbol for explanation
    {
    print OUTPUT &quot;$line\n&quot;;      #write the non-remmed autoexec command
    }
  }
close(INPUT);
close(OUTPUT);


<A NAME="unless"></A># often easier to use <B>unless()</B> than <B>if(!())
<A NAME="=~"></A></B># =~ means &quot;compare to regular expression on right&quot;
<A NAME="forwardslashes"></A># the forward slashes delimit the regular expression
<A NAME="pipe"></A># a pipe (|) pair can be used instead, but then must be preceeded with
# m before the first pipe. You can also put the m before the first slash
# on a slash pair.

<A NAME="^"></A># ^ means &quot;start of line
<A NAME="\s"></A># \s means &quot;whitespace&quot;
<A NAME="*"></A># * means 0 or more of the preceeding (in this case 0 or more whitespace)
<A NAME="rem"></A># rem or REM is what you're actually looking for
<A NAME="i"></A># The i after the last slash means case independent compare.




<HR></PRE>

<P>&nbsp;[ <A HREF="../../troubleshooters.htm">Troubleshooters.com</A>
| <A HREF="../index.htm">Code Corner</A> | <A HREF="mailto:slitt@troubleshooters.com">Email
Steve Litt</A> ] </P>

<P><A HREF="../../cpyright.htm#top"><IMG SRC="../../images/biglcpyr.gif" BORDER=0 HEIGHT=30 WIDTH=30></A>
<A HREF="../../cpyright.htm#top">Copyright (C)1998 by Steve Litt</A> --
<A HREF="../../cpyright.htm#top">Legal</A></P>

<P>&nbsp;</P>

</BODY>
</HTML>

