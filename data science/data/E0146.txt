ID=E0146
URL=http://www.codeguru.com/cpp_mfc/IndentedTrace.html
SIZE=37804
DATE=12/07/02
TIME=19:17:59
DATASET=C
HTML=<HTML>
<HEAD>   
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">   
    <META NAME="Author" CONTENT="Tom Archer">
    <TITLE>C++ & MFC - Table of Contents</TITLE>   
    <META Name="description" Content="Source codes with MFC">
    <META Name="keywords" Content="SOURCE CODE MFC">

    <SCRIPT LANGUAGE="JavaScript">
<!--
var axel = Math.random() + "";
var ord = axel * 1000000000000000000 + "?";

//This part of script alleviates a Netscape document.write bug
<!-- 
NS4 = document.layers;
if (NS4) {
origWidth = innerWidth;
origHeight = innerHeight;
}
function reDo() {
if (innerWidth != origWidth || innerHeight != origHeight) 
location.reload();
}
if (NS4) onresize = reDo;
//-->
</SCRIPT>

</HEAD>



<body>

<!-- begin logo and top banner ad table -->

<TABLE width=100% cellpadding="0" cellspacing="0">

  <TR align="left">
    <TD COLSPAN="3" VALIGN="TOP" align="left">
      <A HREF="http://www.earthweb.com" TARGET="_top">
        <IMG SRC="/images/eweb_banner.gif" BORDER="0" ALT="EarthWeb">
      </a>
    </TD>
  </TR>

  <TR>
<!--BljAds
    <TD VALIGN="TOP" align=left>
      <A HREF="/">
        <IMG SRC="/images/logo_cobrand.gif" BORDER="0" ALT="Developer.com">
      </a>
    </TD>

    <TD>
      <img src="/images/dotclear.gif" WIDTH="40" HEIGHT="1">
    </TD>
-->
    <TD align="TOP">
    <center>
      <IFRAME SRC="http://ad.doubleclick.net/adi/N339.Internet.com/B974922;sz=468x60;ord=2002.07.12.18.17.28?" WIDTH=470 HEIGHT=62 MARGINWIDTH=0 MARGINHEIGHT=0 HSPACE=0 VSPACE=0 FRAMEBORDER=0 SCROLLING=no BORDERCOLOR='#000000'>
<SCRIPT language='JavaScript1.1' SRC="http://ad.doubleclick.net/adj/N339.Internet.com/B974922;abr=!ie;sz=468x60;ord=2002.07.12.18.17.28?">
</SCRIPT>
<NOSCRIPT>
<A HREF="http://ad.doubleclick.net/jump/N339.Internet.com/B974922;abr=!ie4;abr=!ie5;sz=468x60;ord=2002.07.12.18.17.28?">
<IMG SRC="http://ad.doubleclick.net/ad/N339.Internet.com/B974922;abr=!ie4;abr=!ie5;sz=468x60;ord=2002.07.12.18.17.28?" BORDER=0 WIDTH=468 HEIGHT=60 ALT="Alt Text">Alt Text</A>
</NOSCRIPT>
</IFRAME><IMG SRC="http://www.codeguru.com/RealMedia/ads/adstream_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/26549/468x60-1/Oracle_RUP_ORA09M_1a/InternetRONBanner468x60.html/38366531313035623364326631643330?_RM_EMPTY_" WIDTH=1 HEIGHT=1>

<!-- Counter Position Eliminated -->

    </center>
    </TD>
  </TR>

</TABLE>
<hr>
<!-- end logo and top banner ad table -->

<!-- begin lower outer table -->

<TABLE cellpadding="0" cellspacing="0" border="0">
<TR>
<TD bgcolor=#efefef VALIGN="TOP" WIDTH="90">




<table border=1 cellspacing=0 cellpadding=0>
<tr><td>

<table border=0 cellpadding=5 cellspacing=0 width=150>
   <tr>
     <td align="center">
      <A HREF="/">
        <IMG SRC="/images/logo_cobrand.gif" BORDER="0" ALT="Developer.com">
      </a>
      </td>
   </tr>
   <tr>
     <td align="center">
     <A HREF="http://www.codeguru.com/RealMedia/ads/click_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/7141/125x125-1/House_Career_Channel_11g/webopediajobs-125.gif/38366531313035623364326631643330" target="_top"><IMG SRC="http://www.codeguru.com/RealMedia/ads/Creatives/House_Career_Channel_11g/webopediajobs-125.gif"  WIDTH=125 HEIGHT=125 ALT=""  BORDER="0"></A><img src="http://www.codeguru.com/RealMedia/ads/adstream_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/7141/125x125-1/House_Career_Channel_11g/webopediajobs-125.gif/38366531313035623364326631643330?_RM_EMPTY_" Width="1" Height="1" Border="0">
     </td>
   </tr>
</table>

</td></tr>
<tr><td align="center">
  <table width="100%" border=0 cellpadding=5 cellspacing=0><tr><td align="center"><font size=-1>
  <a href="http://www.bizrate.com/mkt.xpml?mkt_id=503249" target="new">Shop for Software</a></font>
  </td></tr></table>
</td></tr>
<tr><td>
  <table width=130 border=0 cellpadding=5 cellspacing=0>
    <tr>
      <td>
        <!-- SEARCH FORM-->
        <form method="post" action="http://search.internet.com/codeguru.earthweb.com">
          <input type="hidden" name="IC_StartNumber" value="0">
          <input type="hidden" name="IC_BatchSize" value="10">
          <input type="hidden" name="IC_RelevanceThreshold" value="30">
          <input type="hidden" name="IC_QueryDatabase"  value="codeguru.earthweb.com">
          <input type="text"   name="IC_QueryText" value="" size="10">
          <input type="submit" value="Search">
        </form>
        <!-- END OF SEARCH FORM -->
      </td>
    </tr>
  </table>

  <table border=0 cellpadding=5 cellspacing=0 width=150>
    <tr><td><span class="navBarH1">CodeGuru Sites</span></td></tr>
    <tr><td nowrap>
        <small>
          <a href="/index.shtml">Visual C++ / MFC / C++</a><br>
          <a HREF="/csharp/index.shtml">.NET (C# and more)</a><br>
          <a href="/vb/index.shtml">Visual Basic</a><br>
          <a href="http://www.gamelan.com">Gamelan (Java)</a><br>
          <a href="http://www.jars.com">JARs (Java Applets)</a><br>
          <hr>
        </small>
        
        
    <a href="/SubmissionsGuidelines.html">
    <font face="verdana, helvetica" color="#000000" size=1>
       submission guidelines
    </font></a>
<br>

<hr>

    </td></tr>


    <tr><td><span class="navBarH1">Interact</span></td></tr>
    <tr><td nowrap>
        <small>
          <a href="/cgi-bin/bbs/wt/wwwthreads.pl">Discussion Boards</a><br>
          <a href="http://e-newsletters.internet.com">Newsletters (subscribe)</a><br>
          <a href="/Guestbook/guestbook.shtml">Guestbook</a><br>
          <a href="/cgi-bin/recommend.cgi">Recommend Us!</a><br>
          <hr>
        </small>
    </td></tr>


    <tr><td><span class="navBarH1">Of Interest</span></td></tr>
    <tr><td nowrap>
        <small>
       <a href="/announcements/dotnetbooks.html">Books on .NET</a><!--<img src="/images/new.gif">--><br>
       <a HREF="/bookReviews/index.shtml">Book Reviews</a><br>
       <a href="/newsletters/index.shtml">Newsletters (archived)</a><br> 
          <a href="/about.shtml">About Us</a><br>
          <hr>
        </small>
    </td></tr>

    <tr><td><span class="navBarH1">Article Sections</span></td></tr>

    <tr><td>
      <span class="navBarH2">C++</span>
      <br>
      <small>
        <a href="/algorithms/index.shtml">algorithms & formulas</a></br>
        <a href="/cpp_mfc/index.shtml">c++ & mfc</a><br>
        <a href="/date_time/index.shtml">date & time</a><br>
        <a href="/string/index.shtml">string</a><br>
      </small>
    </td></tr>

    <tr><td>
      <span class="navBarH2">COM-based Technologies</span>
      <br>
      <small>
        <a href="/atl/index.shtml">atl & wtl</a><br>
        <a href="/activex/index.shtml">com & activex</a><br>
        <a href="/complus/index.shtml">com+</a><br>
        <a href="/shell/index.shtml">shell programming</a><br>
      </small>
    </td></tr>

    <tr><td>
      <span class="navBarH2">Controls</span>
      <br>
      <small>
        <a href="/buttonctrl/index.shtml">button control  </a><br>
        <a href="/combobox//index.shtml">combobox  </a><br>
        <a href="/editctrl/index.shtml">edit control  </a><br>
        <a href="/imagelist/index.shtml">imagelist control </a><br>
        <a href="/listbox/index.shtml">listbox control  </a><br>
        <a href="/listview/index.shtml">listview control  </a><br>
        <a href="/menu/index.shtml">menu  </a><br>
        <a href="/controls/index.shtml">other controls </a><br>
        <a href="/propertysheet/index.shtml">property sheet  </a><br>
        <a href="/richedit/index.shtml">rich edit control  </a><br>
        <a href="/staticctrl/index.shtml">static control  </a><br>
        <a href="/statusbar/index.shtml">status bar </a><br>
        <a href="/toolbar/index.shtml">toolbar  </a><br>
        <a href="/treeview/index.shtml">treeview control </a><br>
      </small>
    </td></tr>

    <tr><td>
      <span class="navBarH2">Data</span>
      <br>
      <small>
    <!--
        <a href="/ado/index.shtml">ado & oledb</a><br>
        <a href="/odbc/index.shtml">odbc</a><br>
        <a href="/mfc_database/index.shtml">mfc database classes</a><br>
        <a href="/office_db/index.shtml">office products</a><br>
        <a href="/oracle/index.shtml">oracle</a><br>
        <a href="/serialization/index.shtml">serialization</a><br>
        <a href="/sqlserver/index.shtml">sql server</a><br>
    -->
        <a href="/mfc_database/index.shtml">database</a><br>
        <a href="/data-misc/index.shtml">miscellaneous</a><br>
      </small>
    </td></tr>

    <tr><td>
      <span class="navBarH2">Frameworks</span>
      <br>
      <small>
    <!--
        <a href="/component_frameworks/index.shtml">component frameworks</a><br>
        <a href="/printing_frameworks/index.shtml">printing frameworks</a><br>
        <a href="/ui_frameworks/index.shtml">ui frameworks</a><br>
    -->
        <a href="/advancedui/index.shtml">ui & printing frameworks</a><br>
      </small>
    </td></tr>

    <tr><td>
      <span class="navBarH2">Graphics & Multimedia</span>
      <br>
      <small>
        <a href="/bitmap/index.shtml">bitmaps & palettes</a><br>
        <a href="/directx/index.shtml">directx</a><br>
        <a href="/gdi/index.shtml">gdi</a><br>
        <a href="/multimedia/index.shtml">multimedia</a><br>
        <a href="/opengl/index.shtml">opengl</a><br>
      </small>
    </td></tr>

    <tr><td>
      <span class="navBarH2">Internet & Networking</span>
      <br>
      <small>
        <a href="/ieprogram/index.shtml">ie programming</a><br>
        <a href="/internet/index.shtml">internet protocols</a><br>
        <a href="/isapi/index.shtml">isapi</a><br>
        <a href="/network/index.shtml">network protocols</a><br>
      </small>
    </td></tr>
	
    <tr><td>
      <span class="navBarH2">Miscellaneous</span>
      <br>
      <small>
        <a href="/misc/index.shtml">miscellaneous</a><br>
        <a href="/samples/index.shtml">samples</a><br>
      </small>
    </td></tr>

    <!--
    <tr><td><span class="navBarH2">Security</span></td></tr>
    <tr><td><small>
      <a href="/cryptoapi/index.shtml">crypto api</a><br>
      <a href="/encryption/index.shtml">encryption/decryption</a><br>
      <br>
    </small></td></tr>
    -->

    <tr><td>
      <span class="navBarH2">Visual Studio</span>
      <br>
      <small>
    <!--
        <a href="/addins/index.shtml">add-ins</a><br>

        <a href="/tips/index.shtml">editor tips</a><br>
        <a href="/macros/index.shtml">macros</a><br>
    -->
        <a href="/debug/index.shtml">debugging</a><br>
        <a href="/devstudio_macros/index.shtml">add-ins & macros</a><br>
        <a href="/tips/index.shtml">editor tips</a><br>
      </small>
    </td></tr>

    <tr><td>
      <span class="navBarH2">Windows Programming</span>
      <br>
      <small>
        <a href="/ce/index.shtml">ce</a><br>
        <a href="/clipboard/index.shtml">clipboard</a><br>
        <a href="/dll/index.shtml">dll</a><br>
        <a href="/files/index.shtml">file & folder</a><br>
        <a href="/help/index.shtml">help systems</a><br>
        <a href="/printing/index.shtml">printing</a><br>
        <a href="/win32/index.shtml">win32</a><br>
        <a href="/system/index.shtml">system</a><br>
      </small>
    </td></tr>

    <tr><td>
      <span class="navBarH2">Windows &amp; Dialogs</span>
      <br>
      <small>
        <a href="/console/index.shtml">console</a></br>
        <a href="/dialog/index.shtml">dialog</a><br>
        <a href="/docking/index.shtml">docking window</a><br>
        <a href="/doc_view/index.shtml">doc/view</a><br>
        <a href="/splitter/index.shtml">splitter</a><br>
      </small>
      <hr>
    </td></tr>

    </table>

<!-- JOB BUTTON --> 
    <table border=0 cellpadding=5 cellspacing=0 width=150>
    <tr><td align="center">
       <a href="http://jobs.internet.com" target="new">
         <IMG SRC="http://www.codeguru.com/jobs.gif" alt="[Internet Jobs]">
       </a>
    </td></tr>
    </table>

  </td>
</tr>
</table>

<!--/navbar>


<!-- blank column for spacing -->

<td valign="top" width="20">&nbsp;&nbsp;&nbsp;</td>

<!-- end blank column for spacing -->

<!-- begin content column -->

<TD VALIGN="TOP" >

<!--
<table cellpadding="0" cellspacing="0">
<tr>
-->

<!-- begin main content column -->


<!-- closign of column, row, and table are in subfoot file -->





<script type="text/javascript" language="javascript"> 
if (screen.width==640 || screen.width==800)
{
   document.write("<link rel=stylesheet href='/global/global800.css'>"); 
} 
else 
{ 
   document.write("<link rel=stylesheet href='/global/global.css'>"); 
} 
</script>


<CENTER><H3><FONT COLOR="#AOAO99">
Using Better Tracing to Understand the Doc/View Architecture 
</FONT></H3></CENTER><HR>

<!-- Author and contact details -->
This article was contributed by 
<A HREF="mailto:mmesser@rdinstruments.com">Mark Messer</A> 

<!-- Sample image - gif or jpg -->
<p>
<a href="IndentedTrace.jpg" target=newFrame>
<img src="IndentedTrace.jpg" width=500 ALT="Sample image of WndCtrl">
<br><font size=3><em>Click here for larger image</em></font>
</a>
</p>

<!-- For which environment is this code specific??? -->

<H3>Purpose</H3>

<P>One of the hard things about learning the document/view architecture is that it is full of marvelous functions, but nobody tells you which function gets called when. You are supposed to override functions when you want to add functionality, but it is not clear which function is the right one. </P>
<P>One way to find out is to override each function you want to know about and put a TRACE statement in it. Now each time one of your functions is called, a line of text appears in the debug window. Start the program, see what happens. Click the mouse, see what happens. </P>
<P>This is fine as far as it goes. But to understand the document/view architecture, you want to see a lot of functions. The debug window quickly turns into a mess. You don't learn anything. It would help if the debug window was more readable. </P>
<P>The CIndentedTrace class helps with this. You can use it to make the debug window look more like C++ code. By adding a line of code to a function like the CMyClass member function MyFunc(), CIndentedTrace prints</P>

<PRE>
CMyClass::MyFunc() {
</PRE>

<P>when it is called. When the function exits, CIndentedTrace prints</P>

<PRE>}</PRE>

<P>Functions called by MyFunc() can be treated the same way, except that their text will be indented. If MyFunc() calls SubFunc(), the debug window looks like this</P>

<PRE>
CMyClass::MyFunc() {
 CMyClass::SubFunc() {
 }
}</PRE>

<P>CIndentedTrace can also be used to add lines of text that look like C++ comments. E.g.</P>

<PRE>
CMyClass::MyFunc() {
 <span class="codeComment">// This explains something that goes on inside MyFunc().</span>
}
</PRE>

<P>CIndentedTrace contains other utility functions for such things as hex dumps of strings and displaying text strings for GetLastError() messages. </P>
<P>TRACE is a macro whose behavior depends on whether _DEBUG is defined. When compiled with a debug configuration, TRACE does its job. When compiled with a release configuration, it disappears. The CIndentedTrace header file contains macros to do the same thing. If you use these macros instead of calling CIndentedTrace yourself, CIndentedTrace will only be called in debug versions of your program. </P>
<P>&nbsp;</P>
<H3>Running the demos</H3>
<P>You may want to try out the demos before seeing how they work.  </P>
<P>The TraceEasy demo shows an easy example of using the CIndentedTrace class without macros. It is for understanding the class. </P>
<P>The TraceMacro demo is an example of how to use all the features of the CIndentedTrace class with macros. </P>
<P>The TraceSDI and TraceMDI demos use CIndentedTrace to make the inner workings of the single and multiple document interface visible. </P>
<P>All demos work only from the development environment with debugging active. No compiled code has been included. </P>
<P>===</P>
<P>To run the demos, </P>
<P>1) Download and unzip them. Put each one in a separate directory. Each demo should have some source files and 3 or 4 files in a res subdirectory. </P>
<P>2) Make sure tracing must be enabled. This is done with the Tracer utility found in the VC++ tools (Task bar, start button, Programs, Microsoft Visual C++, Microsoft Visual C++ Tools, Tracer). The Enable tracing checkbox should be checked. You will probably not want any of the other checkboxes checked under most circumstances.</P>
<P>3) Use the Visual C++ development environment to open the workspace file (the dsw file). In most cases, this can be done by double clicking on the file in Windows Explorer. </P>
<P>4) Make sure a debug configuration is selected. Check it on the Build menu, Set Active Configuration option. </P>
<P>5) Compile the demo application. On the Build menu, choose the Build option. </P>
<P>6) If you have just finished compiling, the output window is probably open and displaying 0 error(s), 0 warning(s). If not, on the View menu, select the Output option. </P>
<P>There is a row of tabs along the bottom of the Output window that say Build, Debug, etc. When the program runs, TRACE output and other messages go in the Debug window. </P>
<P>7) Run the demo from the development environment. On the Build menu, select the Start Debug option, Go sub-option. </P>
<P>8) At any time while the program is running or after it has stopped, switch back to the development environment and look in the Debug window. </P>
<P>===</P>
<P>The SDI and MDI demos trace MFC code through a Single Document Interface application and a Multiple Document Interface application. In each, a vanilla application was created with the app wizard. The class wizard was used to override many functions. The IT_IT() macro was added to each override. This macro uses CIndentedTrace to produce formatted TRACE output. </P>
<P>Some functions were not overridden because they produce too much output. For example, the mouse move message handler produces several messages every time the mouse is touched. The screen drawing functions and idle message handlers are also left out. It is good to trace these to see what they do, even if you don't leave macros in them more than long enough to find out. </P>
<P>Tip: Stepping through the MFC source code is another good way to learn about MFC. Add a breakpoint to the function you want to inspect, run the program, and step into the MFC source code. This works only in MFC code. Microsoft does not supply source code for the C run time library, SDK functions, or other code. Darn it. </P>
<P>If you do this, be careful about breakpoints in window activation handlers or screen drawing functions. When you are done stepping through such a function, you might continue running the program. The debugger activates the program widows and redraws them. This calls the message handler you just finish stepping through, triggers its breakpoint, and shows you the code you just tried to get out of. To get out of this loop, you must turn off the breakpoint. </P>
<P>&nbsp;</P>
<H3>Using CIndentedTrace in your programs</H3>
<P>1) Before beginning to deal with a program, tracing must be enabled. This is done with the Tracer utility found in the VC++ tools (Task bar, start button, Programs, Microsoft Visual C++, Microsoft Visual C++ Tools, Tracer). The Enable tracing checkbox should be checked. You will probably not want any of the other checkboxes checked under most circumstances. </P>
<P>2) Make sure you are using a debug configuration. Open your project with Visual Studio. On the Build menu, choose the Set Active Configuration option. Choose the debug configuration. Recompile if needed. </P>
<P>3) Before the class or macros can be used, the IndentedTrace.cpp file must be added to the project (Project, Add To Project, Files...). Just having the file present in the project directory is not enough. The compiler will not compile a source file and the linker will not use the object file unless the source file is part of the project. If the linker doesn't find the CIntendedTrace functions referenced in the code, it will complain with LNK2001 errors. </P>
<P>The IndentedTrace.h file can be added to the project or not. If not, CIndentedTrace will not appear in the Visual Studio class view window and IndentedTrace.h will be listed as an external dependency instead of a header file in the File View. </P>
<P>4) Each project cpp file where CIndentedTrace functions or macros are to be used must reference IndentedTrace.h. This can be done by adding </P>

<PRE>
#include "IndentedTrace.h"
</PRE>

<P>near the top of the cpp file or to a header file the cpp file includes. Perhaps the best way is to just add it once to stdafx.h. </P>
<P>5) In each function you want to trace, add an IT_IT() macro. It should be the first line, so that any code called by the function is properly included inside&nbsp;the function's braces. The IT_IT() macro takes a string argument. The string usually contains the function's class and name. The class should be added because the output window may contain output from many different classes. But you may use any text you want may appear in the output window. </P>
<P>Within a function, an IT_IT() macro must appear before any other IT_ macro can be used. Only one IT_IT() macro can be used in any function. </P>
<P>6) To add a comment to the output window, add an IT_COMMENT() macro somewhere after the IT_IT(). </P>
<P>Variables can be displayed with a format like TRACE or printf(). IT_COMMENT1() takes 1 variable. For 2 or 3 variables, use IT_COMMENT2() and IT_COMMENT3(). </P>
<P>===</P>
<P>The code you write might look like this</P>

<PRE>
#include "IndentedTrace.h" <span class="codeComment">// This may go in stdafx.h </span>

CMyClass::MyFunc( int iArg1, double dArg2 ) 
{
 IT_IT( "CMyClass::MyFunc()" );
 SubFunc( iArg1 );
 IT_COMMENT( "This explains something that goes on inside MyFunc()." );
 <span class="codeComment">// ...</span>
}

CMyClass::SubFunc( int iArg1 )
{
 IT_IT( "CMyClass:: SubFunc()" );
 IT_COMMENT1( "The value of iArg1 is %d", iArg1 );
 ...
}
</PRE>

<H3>How CIndentedTrace works</H3>

<P>The TraceEasy demo shows how CIndentedTrace works. Only a few CIndentedTrace features are used. No macros are used to make it easy to follow when stepping into CIndentedTrace code. </P>
<P>Look in CTRaceEasyView to find code that uses CIndentedTrace. In OnLButtonUp(), try putting a break point at the CIndentedTrace variable declared. Step into the CIndentedTrace constructor and destructor. To see the destructor, wait until the cursor reaches the closing brace of OnLButtonUp(), and step into the brace. </P>
<P>When a local variable of type CIndentedTrace is created, the CIndentedTrace constructor is called immediately, and the CIndentedTrace destructor is called at the end of the function body when local variables go out of scope. The most important things the constructor does are print its argument and a "{" at the current indent level, and increment the indent level. The most important things the destructor does are decrement the indent level and print a "}". </P>
<P>Note that if the CIndentedTrace variable is declared on the first line of a function, it will be constructed before any other local variables. Its destructor will be called last. This is important. </P>
<P>CIndentedTrace keeps track of the indent level with the static member variable ms_iTraceDepth. Because ms_iTraceDepth is static, all CIndentedTrace objects must share a single copy of it. This makes it an ideal way for CIndentedTrace objects to share information about the current indent level. Each time a new CIndentedTrace object is created, ms_iTraceDepth is incremented. Each time one is destroyed, ms_iTraceDepth is decremented. </P>
<P>Each CIndentedTrace object keeps track of the indent level it was created at with m_nLocalTraceDepth. Since this member variable is not static, no other CIndentedTrace object can touch it. It remains fixed for the life of the object that created it. </P>
<P>Other CIndentedTrace functions, such as Comment(), can only be called in functions that have defined a CIndentedTrace variable. This is obvious in TraceEasy, but when macros are used, the variable definition is hidden in a macro. </P>
<P>Comment() just prints "// " and its argument at the local indent level. </P>
<P>===</P>
<P>The TraceMacro demo shows how to use most CIndentedTrace features, including some explained in the "For more advance users" section. TraceMacro is a little more complex, but mostly does the same things as TraceEasy. </P>
<P>One difference is that TraceMacro uses macros for all CIndentedTrace variable definitions and function calls. The macros are defined at the end of the IndentedTrace header file. </P>
<P>The IT_IT macro creates a local variable with the unlikely name of _IT_vnirrrdaewu in debug compiles. This name was chosen because, in most programs, it will not already be used by another variable. _IT_vnirrrdaewu stands for "Variable Name I Really Really Really Doubt Anyone Else Will Use." If you do not share my doubts, please feel free to rewrite the macros with a name based on a GUID. </P>
<P>Most of the other macros call a CIndentedTrace function. They require that the variable _IT_vnirrrdaewu be defined. This means they can only be used after IT_IT() or IT_EMBEDDED_IT has been used. IT_IT() is intended for the usual local variable case. IT_EMBEDDED_IT is intended for a special case where CIndentedTrace must be a class member variable. </P>
<P>&nbsp;</P>
<H3>For more advanced users</H3>
<P>A constructor with an initialization list may need to be handled a little differently. The initialization list is executed before entering the constructor body. An IT_IT() macro in the constructor body makes it look like the initialization list is not part of the constructor. The thing to do is put CIndentedTrace in the initialization list too. This means it has to be a member variable of the class. </P>
<P>Recall that the order the constructors in an initialization list is set by the order that member variables are declared in the header, NOT the order in the initialization list. If this is not familiar, see <U>Effective C++</U> by Scott Meyer. In any case, the CIndentedTrace member variable must be declared first in the class. </P>
<P>&nbsp;CIndentedTrace prints a "{" and indents when constructed, and unindents and prints a "}" when destroyed. This means there will be a "{" when the class is constructed and a "}" when it is destroyed. If you want the class constructor and destructor each bracketed with { and }, you will have to call Entry() and Exit() to put them there yourself. A couple Comments() may be useful as well. </P>
<P>Macros can be used for all of this. The IT_EMBEDDED_IT macro creates an uninitialized CIndentedTrace member variable named _IT_vnirrrdaewu. This member variable should be initialized in the constructor initialization list with IT_EMBEDDED_INIT(). You will probably want to add IT_EXIT to the constructor body and IT_ENTRY() to the destructor body. You may want to add IT_COMMENT() as well. </P>
<P>Example header file</P>

<PRE>
class CMyClass 
{
 IT_EMBEDDED_IT;  <span class="codeComment">// Must come before other member variables.</span>
 CEmbeddedClass m_EC;

 CMyClass();
 ~CMyClass();
 <span class="codeComment">// ...</span>
}
</PRE>

<P>Example cpp file</P>

<PRE>
CMyClass::CMyClass()
 : IT_EMBEDDED_INIT("CMyClass::CMyClass - "
                    "beginning of constr init list" ),
                    m_EC( int iSomeArg )
{
 IT_COMMENT( "CMyClass::CMyClass - beginning of c'tor body " );
 <span class="codeComment">// Other initialization</span>
 IT_EXIT();
}

CMyClass::~CMyClass() 
{
 IT_ENTRY("CMyClass::~CMyClass - beginning of destructor body ")
 <span class="codeComment">// Other destruction</span>
 IT_COMMENT( "CMyClass::~CMyClass - End of destructor body");
 <span class="codeComment">// m_EC will be destroyed after the destructor body is done. </span>
}
</PRE>

<P>Note that if the IT_IT() macro is used in a member class, a member variable and a local variable with the same name have been declared. This is OK. The local variable hides the member variable. This means that if you add IT_COMMENT() to the function, it will invoke the local CIndentedTrace and print at the local function's indent level. </P>
<P>If you have any doubts about which instance of CIndentedTrace produces what output, add IT_ENABLE_SERIAL_NUM(bEnable). This calls a static function, and so can be used before any CIndentedTrace variables have been defined. The output will identify itself with serial numbers. </P>
<P>=== </P>
<P>CIndentedTrace is not thread safe. It would not be hard to protect the static variables with a critical section. But a multithreaded program may already have thread synchronization code. If CIndentedTrace had a critical section, the program using it could wait on two resources at the same time. This creates a potential for deadlock. The cause of a deadlock can be hard to find, particularly when some of the code is buried in macros. The developer of a multithreaded program should make the decision to add a critical section to CIndentedTrace if he wants it. </P>
<P>In the meantime, CIndentedTrace works after a fashion in multithreaded programs. Sometimes the indentation is messed up. This is not a big problem, because indentation is messed up anyway when output from two execution paths are interleaved. </P>
<P>If you are willing to overlook this shortcoming, you can add IT_ENABLE_THREAD_ID(bEnable). This calls a static function, and so can be used before any CIndentedTrace variables have been defined. </P>
<P>The output produced outside the main thread will identify itself with a thread ID. This can be used together with serial numbers. </P>
<P>There is another approach to tracing a multithreaded app. IT_EMBEDDED_IT and IT_EMBEDDED_INIT create a CIndentedTrace member variable in a class. The member variable has the right name, so all the macros can be used in any class function. All the output they produce will have the same indent level, but this can be an advantage in a multithreaded application. </P>
<P>&nbsp;</P>
<H3>Downloads</H3>
<P>All demos are to be run from the development environment after a debug compile. Tracing must be enabled. </P>

<A HREF="IndentedTrace_TraceEasy.zip">Source for TraceEasy - 25 Kb</A> <br>
<A HREF="IndentedTrace_TraceMacro.zip">Source for TraceMacro - 28 Kb</A> <br>
<A HREF="IndentedTrace_TraceSDI.zip">Source for SDI Demo - 32 Kb</A> <br>
<A HREF="IndentedTrace_TraceMDI.zip">Source for MDI Demo - 51 Kb</A>

<H3>History</H3>
<P>Date Posted: January 14, 2001<BR>
<!-- Only use the following if the article is updated -->
<!-- Date Last Updated:  [today's date in the format month day, year] -->

<P>
<strong><a href="/cgi-bin/addpage/addpage.cgi?cfg=addcomment&action=Comment">
Add Comment</a></strong>
<P>

</td>

      <!--BLJAds - Added right side tower ad -->
<TD VALIGN="TOP">
<A HREF="http://www.codeguru.com/RealMedia/ads/click_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/31507/125x800/Oracle_RUP_ORA09M_1a/InternetcomRONSky120x600.html/38366531313035623364326631643330?2002.07.12.18.17.29"> <IMG SRC="http://ad.doubleclick.net/ad/N339.Internet.com/B974922.2;sz=120x600;ord=2002.07.12.18.17.29?" BORDER=0 WIDTH=120 HEIGHT=600 ALT=""></A>
<IMG SRC="http://www.codeguru.com/RealMedia/ads/adstream_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/31507/125x800/Oracle_RUP_ORA09M_1a/InternetcomRONSky120x600.html/38366531313035623364326631643330?_RM_EMPTY_" WIDTH=1 HEIGHT=1>

<p>

<!-- Commerce bar -->
<table border="0" cellpadding="3" width="140">

<tr bgcolor="black"><td>
<font face="Arial" color="white" size="1" >
<b><center>internet.commerce</center></b></font>
</td></tr>
<tr bgcolor="lightgrey"><td>
<font face="Arial" size="1" >
<a href="http://www.internet.com/partners/">Be a Commerce Partner</A><BR>
<a href="http://www.codeguru.com/RealMedia/ads/click_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/28013/cp1/IBart.com_13c/ibart.html/38366531313035623364326631643330">Free Barter Account</a>
<IMG SRC="http://www.codeguru.com/RealMedia/ads/adstream_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/28013/cp1/IBart.com_13c/ibart.html/38366531313035623364326631643330?_RM_EMPTY_" WIDTH=1 HEIGHT=1>
<BR>
<a href="http://www.codeguru.com/RealMedia/ads/click_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/17092/cp2/Rawhide_3b/Rawhide_text.html/38366531313035623364326631643330">Search Marketplace</a>
<IMG SRC="http://www.codeguru.com/RealMedia/ads/adstream_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/17092/cp2/Rawhide_3b/Rawhide_text.html/38366531313035623364326631643330?_RM_EMPTY_" WIDTH=1 HEIGHT=1><BR>
<a href="http://www.codeguru.com/RealMedia/ads/click_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/6172/cp3/Digital_River_13b/softwarestore.html/38366531313035623364326631643330">Software Store</a>
<IMG SRC="http://www.codeguru.com/RealMedia/ads/adstream_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/6172/cp3/Digital_River_13b/softwarestore.html/38366531313035623364326631643330?_RM_EMPTY_" WIDTH=1 HEIGHT=1>

<BR>
<a href="http://www.codeguru.com/RealMedia/ads/click_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/28020/cp4/LookSurf_2d/FreelanceProjects.html/38366531313035623364326631643330">Freelance Projects</a>
<IMG SRC="http://www.codeguru.com/RealMedia/ads/adstream_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/28020/cp4/LookSurf_2d/FreelanceProjects.html/38366531313035623364326631643330?_RM_EMPTY_" WIDTH=1 HEIGHT=1>
<BR>
<a href="http://www.codeguru.com/RealMedia/ads/click_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/17099/cp5/rfpMarket_Inc_8c/FindAWebDeveloper.html/38366531313035623364326631643330">Find A Web Developer</a>
<IMG SRC="http://www.codeguru.com/RealMedia/ads/adstream_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/17099/cp5/rfpMarket_Inc_8c/FindAWebDeveloper.html/38366531313035623364326631643330?_RM_EMPTY_" WIDTH=1 HEIGHT=1>
<BR>
<a href="http://www.codeguru.com/RealMedia/ads/click_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/6179/cp6/INB_10a/SendaPressRelease.html/38366531313035623364326631643330">Send a Press Release</a>
<IMG SRC="http://www.codeguru.com/RealMedia/ads/adstream_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/6179/cp6/INB_10a/SendaPressRelease.html/38366531313035623364326631643330?_RM_EMPTY_" WIDTH=1 HEIGHT=1>
<BR>
<a href="http://www.codeguru.com/RealMedia/ads/click_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/28026/cp7/Revquest_3d/Revquest_text.html/38366531313035623364326631643330">Web Design</a>
<IMG SRC="http://www.codeguru.com/RealMedia/ads/adstream_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/28026/cp7/Revquest_3d/Revquest_text.html/38366531313035623364326631643330?_RM_EMPTY_" WIDTH=1 HEIGHT=1>
<BR>
<A href="http://www.codeguru.com/RealMedia/ads/click_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/17106/cp8/Domain_Bank_14d/RegisterDomains.html/38366531313035623364326631643330">Register Domains</a>
<IMG SRC="http://www.codeguru.com/RealMedia/ads/adstream_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/17106/cp8/Domain_Bank_14d/RegisterDomains.html/38366531313035623364326631643330?_RM_EMPTY_" WIDTH=1 HEIGHT=1>
<BR>
<a href="http://www.codeguru.com/RealMedia/ads/click_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/6185/cp9/Mamma.com_9d/SearchtheWeb.html/38366531313035623364326631643330">Search the Web</a>
<IMG SRC="http://www.codeguru.com/RealMedia/ads/adstream_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/6185/cp9/Mamma.com_9d/SearchtheWeb.html/38366531313035623364326631643330?_RM_EMPTY_" WIDTH=1 HEIGHT=1><BR>
<a href="http://www.codeguru.com/RealMedia/ads/click_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/28033/cp10/Business_com_2c/BusinessSearch.html/38366531313035623364326631643330">Business Search</a>
<IMG SRC="http://www.codeguru.com/RealMedia/ads/adstream_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/28033/cp10/Business_com_2c/BusinessSearch.html/38366531313035623364326631643330?_RM_EMPTY_" WIDTH=1 HEIGHT=1><BR>

</font>
</td></tr>
</table>
<br>


</TD>

</tr>
</table>
<!-- begin footer information -->
<br>
<CENTER>
<A HREF="http://www.codeguru.com/RealMedia/ads/click_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/17112/468x60-2/House_Enterprise_Storage_3a/esf-468x60.gif/38366531313035623364326631643330" target="_top"><IMG SRC="http://www.codeguru.com/RealMedia/ads/Creatives/House_Enterprise_Storage_3a/esf-468x60.gif"  ALT="Enterprise Storage Forum.com"  BORDER="0"></A><img src="http://www.codeguru.com/RealMedia/ads/adstream_lx.cgi/ew/ewsoftware/www.codeguru.com/cpp_mfc/IndentedTrace.html/17112/468x60-2/House_Enterprise_Storage_3a/esf-468x60.gif/38366531313035623364326631643330?_RM_EMPTY_" Width="1" Height="1" Border="0">
<br>
<FONT SIZE="-1">EarthWeb is a service of INT Media Group, Incorporated.<br>
Copyright 2002 INT Media Group, Incorporated. All Rights Reserved.<BR>
<A HREF="http://www.internet.com/help/feedback.html">Feedback</A>, &nbsp;
<A HREF="http://www.itmarketer.com">Advertising Info</A>, &nbsp;
<A HREF="http://www.internet.com/corporate/legal.html">Legal Notices</A>,&nbsp;
<A HREF="http://www.internet.com/corporate/reprints.html#Licensing">Licensing</A>, 
<A HREF="http://www.internet.com/corporate/reprints.html#Reprints">Reprints</A>, &amp; 
<A HREF="http://www.internet.com/corporate/reprints.html#Permissions">Permissions</A>, &nbsp;
<A HREF="http://www.internet.com/corporate/privacy/privacypolicy.html">Privacy Policy</A>.
<BR>
<A HREF="http://www.internet.com"><IMG SRC="/images/internetcom.gif"
ALT="http://www.internet.com/" WIDTH="161" HEIGHT="18"
BORDER="0"></A></FONT>
</CENTER>

</BODY>
</HTML>






