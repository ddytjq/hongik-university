ID=D0390
URL=http://www.geocities.com/lkp550/cpp/lesson1.htm
SIZE=7678
DATE=16/07/02
TIME=14:44:59
DATASET=Java
HTML=<html>
<head>
<title>C++ - Lesson 1</title>
</head>

<body background="binderbg.gif">
<table width=90% align=right><tr><td>
<font face="arial">
<center><h2><u>Lesson One</u></h2></center>

<p>You have two choices when you are deciding to learn C++, "Do I get my compiler from online, or do I purchase it?" Purchasing may be a bit expensive, unless you come upon a deal, but you are guaranteed to get the full program. Online, however, may be cheaper, especially if you can find a compiler for free, but you are not guaranteed to get the whole program. Which ever you choose, once you get everything loaded, you are ready to get started.

<p>The first part of your code, no matter what programming language you are using, should be comments. <b>Comments</b> are used to tell people that you are the editor, the name of the program, and what the program does. You do not see these comments when you compile and run the code. Comments are added by typing <b>//</b> before each line. Here are some comments:<br>

<br>
<tt>
// Program created by: John Smith<br>
// Hello Program<br>
// This program prints out the words "Hello World"
</tt>

<p>The next part of our programs will be the <b>preprocessor</b>. The preprocessor is a program that runs before the compiler to handle what source code the compiler sees as input. This is achieved by copying what is in the <i>include</i> directives. This is what our preprocessors will look like:<br>

<br>
<tt>
#include < iostream ><br>
#include < string >
</tt>

<p>The next line, <b>using namespace</b> <i>std</i><b>;</b>, means our program will be using objects that are named in a special region name <i>std</i> that we will find useful in writing our programs.

<p>Here's where our programs go into action. The next part is the <b>main()</b> function, which specifies the type of result the function will be returning. This is the first called function when the program is compiled and executed. It carries its arguments in the parenthesis that follow. This statement is followed by an opening <b>{</b> curly brace.

<p>Within the body of the main() method is the lines of code that will make our program work. Normally, we will be starting our programs out expressions. To show how this program works, we will be using the <b>cout</b> object. The <i>cout</i> operator <b><<</b> inserts everything after it into the named stream. At the end of <i>cout</i> statements is the manipulator <b>endl;</b>, which inserts a new line character. Before we close the main() with a closing <b>}</b>, we want to add a <b>return</b> value of zero to tell the main to close up all programs and run the program, provided there are no errors.

<p>Now that we have all this out of the way, we can start writing our programs. Our programs might look like the one below:<br>

<br>
<tt>
// Program created by: John Smith<br>
// Sales Tax Program<br>
// This program computes the sales tax on a purchase<br>
#include < iostream ><br>
#include < string ><br>
using namespace std;<br>
int main() {<br>
<br>
  // Input price<br>
  cout << "Purchase price? ";<br>
  float Price;<br>
  cin >> Price;<br>
<br>
  // Make computations and print sales tax<br>
  cout << "Sale tax on $" << Price << " is ";<br>
  cout << "$" << Price * 0.04 << endl;<br>
  return 0;<br>
} 
</tt>

<p>Notice that there are two more things that we haven't mentioned. One of them being the <b>float Price;</b> statement. This is the definition of "Price" being a floating-point (real, decimal) number. The other statement, <b>cin >> Price</b>, accepts the number that the user types in. The <b>>></b> is considered an <b>extractrion operator</b> because it extracts the input from the user.

<p>You can assign a value to a variable by using the <b>=</b> equals sign. This does not mean that the variable is equal to the value. It means that when the variable is called, so is the value (we will learn how to make a variable equal to a value later on in the lessons).

<p>The program above is written in good programming style. It is important that you write your programs this same way to make it easier for both you and anyone after you to edit your programs.

<p>C++ uses <b>short</b>, <b>int</b>, and <b>long</b> as object types to hold integer values. A short is stored in 8-bits, int is stored in 16-bits, and long is stored in 32-bits.

<p>Characters are represented by the object type <b>char</b>. In most computers, characters are from ASCII (American Standard Code for Information Interchange) character set. However, IBM uses the EBCDIC (Extended Binary Coded Decimal Interchange Code) character set.

<p>Floating-point numbers are represented by three object types: <b>float</b>, <b>double</b>, and <b>long double</b>. Float numbers are stored in 32-bits and doubles are stored in 64-bits. These numbers are used where a greater degree of precision is required.

<p>A <b>string constant</b> is any amount of characters enclosed in double quotes. String constants end with a special character called an <b>escape mechanism</b>. The table below shows some of the escape codes:<br>

<table border=1 width=50% align=center>
<tr><th>Character Name</th><th>C++ Escape Sequence</th></tr>
<tr><td align=center>newline</td><td align=center>\n</td></tr>
<tr><td align=center>horizontal tab</td><td align=center>\t</td></tr>
<tr><td align=center>vertical tab</td><td align=center>\v</td></tr>
<tr><td align=center>carriage return</td><td align=center>\r</td></tr>
<tr><td align=center>backslash</td><td align=center>\\</td></tr>
<tr><td align=center>single quote</td><td align=center>\'</td></tr>
<tr><td align=center>double quote</td><td align=center>\"</td></tr>
</table><br>

Any string constant that is just <b>" "</b> double quotes is considered a <b>null string</b>.

<p>Here's a tip: in C++, an object is considered to be a region of memory that contains a set of values and operations. The type that the object is is up to the programmer. Always remember to give an object an initial value when you define it unless it is immediately given a value through an <i>>></i> extraction operation.

<p>Here's another tip: when writing an interactive program, it is useful to echo back to the user what they typed so they know what they typed and are given the opportunity to change their minds. Also, make sure you are placing your declarations near the point of use.

<p><b><u>Question:</u></b> Wow!! C++ sounds like a bunch of rules and technical terms. Is there anything about C++ that is simple?

<p><b><u>Answer:</u></b> If C++ were too simple, it wouldn't be one of the most popular programming languages. However, if you open your eyes to the next lesson, it won't seem so overwhelming.
<hr>
<center><a href="http://www.geocities.com/lkp550/CPP.htm">Home</a> | <a href="lesson2.htm">Lesson Two</a><br>
<br>
If you have any questions or comments about this lesson, feel free to <a href="http://expertprofile.yahoo.com/lkp550?.tpid=383000187">click here</a> and leave me your message.</center>

</table>
</font>
</body>
</html>
<!-- text below generated by server. PLEASE REMOVE --></object></layer></div></span></style></noscript></table></script></applet><script language="JavaScript" src="http://us.i1.yimg.com/us.yimg.com/i/mc/mc.js"></script><script language="JavaScript" src="http://us.geocities.com/js_source/geov2.js"></script><script language="javascript">geovisit();</script><noscript><img src="http://visit.geocities.com/visit.gif?1026499776" border=0 width=1 height=1></noscript>
<IMG SRC="http://geo.yahoo.com/serv?s=76001068&t=1026499776" ALT=1 WIDTH=1 HEIGHT=1>

