ID=E0412
URL=http://www.cprogramming.com/codej/issue2.html
SIZE=28343
DATE=12/07/02
TIME=19:20:42
DATASET=C
HTML=<html>

<HEAD>

<meta http-equiv="name" content="C and C++ game programming">

<meta name="keywords"

content="C++ programming, programmers, C++ tutorial, C, source code, tutorials, C++ compiler, binary tree">

<meta name="description"

content="Cprogramming.com is a combination of C++ tutorials, compiler information, programming links, a VERY ACTIVE programming message board, and C and C++ source code .">

<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">

<TITLE>Cprogramming.com: Code Journal Issue 2</TITLE>
</head>



<body bgcolor=white link="#ff0008" vlink="#ff0008">

  


<table cellspacing=0 cellpadding=0 border=0><tr><td valign=top width=1 bgcolor=black>
<img src="line.gif" width=1 height=62>




</td><td valign=top width=92>


<img src="one.gif" width=92 height=63><br><br>

<table><tr><td width=3></td><td>
<font size=2 face="arial" color="#b4b4b4">
<li><a href="/index.html">Home</a></li>
</font>

</td></tr></table>


<img src="learn.gif" width=92 height=30 alt="Learn"><br>


<table><tr><td width=3></td><td>
<font size=2 face="arial" color="#b4b4b4">
<li><a href="/tutorial.html">Tutorials</a></li>

<li><a href="/source.html">Source</a></li>
<li><a href="/books.html">Books</a></li>
<li><a href="http://www.cprogramming.com/cgi-bin/cdir/Cdirectory.cgi">Directory</a></li>
<li><A href="http://www.cprogramming.com/cgi-bin/quiz.cgi">Quiz</A></li>

</font>
</td></tr></table>


<img src="comp.gif" width=92 height=30 alt="Learn"><br>

<table><tr><td width=3></td><td>

<font size=2 face="arial" color="#b4b4b4">
<li><a href="/borland.html">Borland</a></li>

<li><a href="/djgpp.html">DJGPP</a></li>
<li><a href="/other.html">Other</a></li>
</font>
</td></tr></table>

<img src="q.gif" width=92 height=30 alt="Learn"><br>

<table><tr><td width=3></td><td>

<font size=2 face="arial" color="#b4b4b4">
<li><a href="http://www.cprogramming.com/board.html">C board</a></li>
<li><A href="/function.html">Functions</a></li>
<li><a href="/email.html">Email</a></li>
</font>
</td></tr></table>

 
 
</td><td valign=top width=1 bgcolor="#dfdfdf"><img src="dot.gif" width=1 height=1></td><td valign=top>



<A href="http://www.cprogramming.com/"><img src="cprog.gif" width=497 height=111 alt="Cprogramming.com - your resource for C/C++" border=0></A><center><A href="http://www.cprogramming.com/"></a>
<table border=0 cellspacing=0 cellpadding=0 width=470 height=84><tr><td align=center> 
 <iframe src="http://a.tribalfusion.com/f.ad?site=Cprogrammingcom&adSpace=ROS&requestID=622570084" width=470 height=84 marginwidth=0 marginheight=0 hspace=0 vspace=0 frameborder=0 scrolling=no>
         <script language=javascript>
           randNum = ((new Date()).getTime() % 2147483648) + Math.random();
           document.write(
             "<a href='http://a.tribalfusion.com/i.click?site=Cprogrammingcom&adSpace=ROS&requestID=" + randNum + "' target=_blank >" +
             "<img src='http://a.tribalfusion.com/i.ad?site=Cprogrammingcom&adSpace=ROS&requestID=" + randNum + "'" +
               "width=468 height=60 border=0 alt='Click Here'><br><b>Click Here!</b></a>");
         </script>
         <noscript>
             <a href="http://a.tribalfusion.com/i.click?site=Cprogrammingcom&adSpace=ROS&requestID=622570084" target=_blank >
             <img src="http://a.tribalfusion.com/i.ad?site=Cprogrammingcom&adSpace=ROS&requestID=622570084" 
                  width=468 height=60 border=0 alt="Click Here"><br><b>Click Here!</b></a>
         </noscript>
 </iframe></td></tr></table>
</center>
      <table>
        <tr> 
          <td width=20></td>
          <td> 
            <h3><font size="2" face="Courier New, Courier, mono">Code Journal</font></h3>
            <P><font size="2" face="Courier New, Courier, mono"><B>Code Journal</B> 
              is a free, biweekly newsletter on programming and computer science 
              provided jointly by <A HREF="http://www.cprogramming.com/">Cprogramming.com</A> 
              and <a href="http://www.aihorizon.com">AI Horizon</a>. There is 
              also an <A HREF="http://www.cprogramming.com/codej.html">archive</A> 
              of all past issues on both websites. </font></P>
            <P><font size="2" face="Courier New, Courier, mono">This is the January 
              8th Issue</font></p>
            <font size="2" face="Courier New, Courier, mono"><b>CODE JOURNAL: 
            Your Guide to Programming</b></font> 
            <p><font size="2" face="Courier New, Courier, mono">January 22, 2002</font></p>
            <p><font size="2" face="Courier New, Courier, mono">In This Edition:<br>
              - <a href="#welcome">Welcome to the Code Journal</a><br>
              - <a href="#a1">Standardized Article</a><br>
              - <a href="#a2">The Tower of Babel</a><br>
              - <a href="#qa">Common Questions</a><br>
              - <a href="#cc">Programming Challenge</a><br>
              - <a href="#er">Errata</a><br>
              <br>
              <a name="welcome"></a>Welcome to Code Journal, a joint venture between 
              Cprogramming.com <br>
              (<a href="http://www.cprogramming.com">http://www.cprogramming.com</a>) 
              and AI Horizon (<a href="http://www.aihorizon.com">http://www.aihorizon.com</a>)<br>
              that aims to provide insightful articles on both C++ and algorithmic 
              <br>
              programming. Code Journal is helpware: in return for reading it, 
              you <br>
              are asked to help someone else out with their own programming problems. 
              <br>
              Good luck, and quick compiling.</font></p>
            <p><font size="2" face="Courier New, Courier, mono"><br>
              ---------------------------------------------------------<br>
              <b><a name="a1"></a>C/C++ Programming by Alex Allain</b><br>
              ---------------------------------------------------------<br>
              <b>Templates in C++</b></font></p>
            <p><font size="2" face="Courier New, Courier, mono">What's better 
              than having several classes that do the same thing to <br>
              different datatypes? One class that lets you choose which datatype 
              <br>
              it acts on.</font></p>
            <p><font size="2" face="Courier New, Courier, mono" color="#009900">Templates</font><font size="2" face="Courier New, Courier, mono"> 
              are a way of making your classes more abstract by letting <br>
              you define the behavior of the class without actually knowing what 
              <br>
              datatype will be handled by the operations of the class. In essence,<br>
              this is what is known as <font color="#009900">generic programming</font>; 
              this term is a useful<br>
              way to think about templates because it helps remind the programmer 
              <br>
              that a templated class does not depend on the datatype (or types) 
              it<br>
              deals with. To a large degree, a templated class is more focused 
              on<br>
              the algorithmic thought rather than the specfic nuances of a single 
              <br>
              datatype. Templates can be used in conjunction with abstract datatypes 
              <br>
              in order to allow them to handle any type of data. For example, 
              you <br>
              could make a templated stack class that can handle a stack of any 
              datatype, <br>
              rather than having to create a stack class for every different datatype 
              for<br>
              which you want the stack to function. The ability to have a single 
              class<br>
              that can handle several different datatypes means the code is easier 
              to<br>
              maintain, and it makes classes more reusable.</font></p>
            <p><font size="2" face="Courier New, Courier, mono">The basic syntax 
              for declaring a templated class is as follows:</font></p>
            <p><font size="2" face="Courier New, Courier, mono"> template &lt;class 
              a_type&gt; class a_class {...};<br>
              <br>
              The keyword 'class' above simply means that the identifier a_type 
              will<br>
              stand for a datatype. NB: a_type is not a keyword; it is an identifier<br>
              that during the execution of the program will represent a single 
              datatype.<br>
              For example, you could, when defining variables in the class, use 
              the <br>
              following line:</font></p>
            <p><font size="2" face="Courier New, Courier, mono"> a_type a_var;</font></p>
            <p><font size="2" face="Courier New, Courier, mono">and when the programmer 
              defines which datatype 'a_type' is to be when the <br>
              program instantiates a particular instance of a_class, a_var will 
              be of that<br>
              type.</font></p>
            <p><font size="2" face="Courier New, Courier, mono">When defining 
              a function as a member of a templated class, it is necessary<br>
              to define it as a templated function:</font></p>
            <p><font size="2" face="Courier New, Courier, mono"> template&lt;class 
              a_type&gt; void a_class&lt;a_type&gt;::a_function(){...}<br>
              <br>
              When declaring an instance of a templated class, the syntax is as 
              follows:</font></p>
            <p><font size="2" face="Courier New, Courier, mono"> a_class&lt;int&gt; 
              an_example_class;<br>
              <br>
              An instantiated object of a templated class is called a <font color="#009900">specialization</font>; 
              the <br>
              term specialization is useful to remember because it reminds us 
              that the<br>
              original class is a generic class, whereas a specific instantiation 
              of a <br>
              class is specialized for a single datatype (although it is possible 
              to<br>
              template multiple types).</font></p>
            <p><font size="2" face="Courier New, Courier, mono">Usually when writing 
              code it is easiest to precede from concrete to abstract; <br>
              therefore, it is easier to write a class for a specific datatype 
              and then <br>
              procede to a templated - generic - class. For that brevity is the 
              soul of <br>
              wit, this example will be brief and therefore of little practical 
              application.</font></p>
            <p><font size="2" face="Courier New, Courier, mono">We will define 
              the first class to act only on integers.</font></p>
            <p><font size="2" face="Courier New, Courier, mono"> class calc<br>
              {<br>
              public:<br>
              int multiply(int x, int y);<br>
              int add(int x, int y);<br>
              };<br>
              int calc::multiply(int x, int y)<br>
              {<br>
              return x*y;<br>
              }<br>
              int calc::add(int x, int y)<br>
              {<br>
              return x+y;<br>
              }</font></p>
            <p><font size="2" face="Courier New, Courier, mono">We now have a 
              perfectly harmless little class that functions perfectly well <br>
              for integers; but what if we decided we wanted a generic class that 
              would <br>
              work equally well for floating point numbers? We would use a template.</font></p>
            <p><font size="2" face="Courier New, Courier, mono"> template &lt;class 
              A_Type&gt; class calc<br>
              {<br>
              public:<br>
              Type multiply(A_Type x, A_Type y);<br>
              Type add(A_Type x, A_Type y);<br>
              };<br>
              template &lt;class A_Type&gt; A_Type calc&lt;A_Type&gt;::multiply(A_Type 
              x, A_Type y)<br>
              {<br>
              return x*y;<br>
              }<br>
              template &lt;class A_Type&gt; A_Type calc&lt;A_Type&gt;::add(A_Type 
              x, A_Type y)<br>
              {<br>
              return x+y;<br>
              }</font></p>
            <p><font size="2" face="Courier New, Courier, mono">To understand 
              the templated class, just think about replacing the identifier A_Type 
              <br>
              everywhere it appears, except as part of the template or class definition, 
              with the <br>
              keyword int. It would be the same as the above class; now when you 
              instantiate an <br>
              object of class calc you can choose which datatype the class will 
              handle.</font></p>
            <p><font size="2" face="Courier New, Courier, mono"> calc &lt;double&gt; 
              a_calc_class;</font></p>
            <p><font size="2" face="Courier New, Courier, mono">Templates are 
              handy for making your programs more generic and allowing your code 
              <br>
              to be reused later. <br>
              ********************<br>
              Alexander Allain is the webmaster of <a href="http://www.cprogramming.com">http://www.cprogramming.com</a>.<br>
              Contact him at <a href="mailto:webmaster@cprogramming.com">webmaster@cprogramming.com</a></font></p>
            <p><font size="2" face="Courier New, Courier, mono">---------------------------------------------------------<br>
              <b><a name="a2"></a>Algorithms and Programming by Eric Suh</b><br>
              ---------------------------------------------------------</font></p>
            <p><font size="2" face="Courier New, Courier, mono"><b>The Tower of 
              Babel</b></font></p>
            <p><font size="2" face="Courier New, Courier, mono">The programming 
              community has tons and tons of languages to choose from,<br>
              but what's the difference? Why have tons of languages? Why can't 
              we all<br>
              settle down and choose just one?</font></p>
            <p><font size="2" face="Courier New, Courier, mono">These days, programming 
              languages are becomming more and more general and<br>
              all-purpose, but they still have their specializations, and each 
              language<br>
              has its disadvantages and advantages.</font></p>
            <p><font size="2" face="Courier New, Courier, mono" color="#009900">C++</font><font size="2" face="Courier New, Courier, mono"> 
              is well-suited for large projects because it has an object-oriented<br>
              structure. People can collaborate on one program by breaking it 
              up into<br>
              parts and having a small group or even one individual work on each 
              part.<br>
              The object-oriented structure also allows code to be reused a lot, 
              which<br>
              cuts down development time by a significant amount. C++ is also 
              a fairly<br>
              efficient language - although many C programmers will disagree.</font></p>
            <p><font size="2" face="Courier New, Courier, mono" color="#009900">C</font><font size="2" face="Courier New, Courier, mono"> 
              is used a lot, especially in game programming, because it doesn't 
              have<br>
              the extra packaging of the object-oriented C++. Programmers use 
              C because<br>
              it makes programs slightly faster and smaller than programs written 
              in C++.<br>
              You have to wonder, however, whether it's really worth giving up 
              the ease<br>
              and reuseability of C++ to get the small increase in performance 
              with C.</font></p>
            <p><font size="2" face="Courier New, Courier, mono" color="#009900">Pascal</font><font size="2" face="Courier New, Courier, mono"> 
              is still mostly a teaching language, and not many industrial<br>
              programs are written in Pascal. Pascal uses keywords a lot instead 
              of<br>
              C-style braces and symbols, so it is a bit easier for beginners 
              to<br>
              understand than languages like C++. Still, not all people think 
              Pascal is<br>
              just for the schools. Borland, the huge compiler software company, 
              has<br>
              been pushing Delphi as an industrial strength programming language. 
              Delphi<br>
              is an object-oriented version of Pascal, and currently, only Borland<br>
              compilers use it.</font></p>
            <p><font size="2" face="Courier New, Courier, mono" color="#009900">Fortran</font><font size="2" face="Courier New, Courier, mono"> 
              is a number-crunching program, and it is still used a lot by<br>
              scientists because the language allows variables of any size up 
              to the<br>
              memory limit of the machine. Fortran is especially convenient for 
              engineers,<br>
              who have to mathematically model and compute many different variables 
              to<br>
              large precisions. Fortran, however, isn't nearly the flexible language<br>
              that C++ or C is. Programming in Fortran is rigid, with strict rules 
              on<br>
              whitespace and formatting, which sometimes makes reading Fortran 
              programs<br>
              difficult.</font></p>
            <p><font size="2" face="Courier New, Courier, mono" color="#009900">Java</font><font size="2" face="Courier New, Courier, mono"> 
              is a multi-platform language that is especially useful in networking.<br>
              Of course, the most famous usage of Java is on the Web, with Java 
              applets,<br>
              but Java is also used to build cross-platform programs that stand 
              alone.<br>
              Since it resembles C++ in syntax and structure, learning Java is 
              usually<br>
              quite easy for most programmers.</font></p>
            <p><font size="2" face="Courier New, Courier, mono" color="#009900">Perl</font><font size="2" face="Courier New, Courier, mono"> 
              was originally a file management language for Unix, but it has become<br>
              famous as a <font color="#009900">CGI</font> language. CGI (Common 
              Gateway Interface) is a term for<br>
              programs that web servers can execute to allow web pages additional<br>
              capabilities. Perl is great with Regular Expression Pattern Matching, 
              which<br>
              is a method (or tool) for searching text. So, Perl can be used for 
              databases<br>
              and other useful server functions, and because it is a scripting 
              language,<br>
              it is pretty easy to learn. Web Hosting Services prefer Perl over 
              C++ as<br>
              a CGI language because the Web Hosts can inspect Perl script files, 
              since<br>
              they're just text files, while C++ is compiled, so it can't be inspected<br>
              for potentially dangerous code.</font></p>
            <p><font size="2" face="Courier New, Courier, mono" color="#009900">LISP</font><font size="2" face="Courier New, Courier, mono"> 
              is used mostly in Computer Science research. LISP is especially 
              handy<br>
              in programming abstract ideas because LISP is able to process a 
              data<br>
              structure called lists. Lists are like arrays, except lists have 
              no index<br>
              numbers. The syntax for lists is very simple, and so LISP programmers 
              can<br>
              manipulate these lists easily to implement complex structures easily.</font></p>
            <p><font size="2" face="Courier New, Courier, mono">Of course, there 
              are still many, many languages I still haven't covered,<br>
              (Prolog, Scheme, Tcl, Python, COBOL, Smalltalk, C#, etc.) but those 
              are<br>
              generally related or similar to the programming languages I have 
              described<br>
              above. You get the idea, however. Programming languages still have 
              their<br>
              advantages and disadvantages, so picking the appropriate language 
              for the<br>
              task is often an important step in the process of developing an 
              application<br>
              or program.</font></p>
            <p><font size="2" face="Courier New, Courier, mono">Now, if only I 
              had enough time to learn them all...</font></p>
            <p><font size="2" face="Courier New, Courier, mono">************************************<br>
              Eric Suh is the webmaster of AI Horizon (<a href="http://www.aihorizon.com/">http://www.aihorizon.com/</a>), 
              a site<br>
              devoted to Artificial Intelligence and Computer Science programming.<br>
              Contact him at <a href="mailto:webmaster@aihorizon.com">webmaster@aihorizon.com</a><br>
              <br>
              ---------------------------------------------------------<br>
              <b><a name="qa"></a>Questions and Answers on Programming</b><br>
              ---------------------------------------------------------<br>
              In response to the numerous emails Cprogramming.com receives, I 
              have <br>
              written an article on common programming mistakes. Due to its length,<br>
              it is available only online. Read it at <br>
              <a href="http://www.cprogramming.com/tutorial/common.html">http://www.cprogramming.com/tutorial/common.html</a>.<br>
              <br>
              ---------------------------------------------------------<br>
              <b><a name="cc"></a>Code Challenge</b><br>
              ---------------------------------------------------------</font></p>
            <p><font size="2" face="Courier New, Courier, mono">At the end of 
              every issue we will issue a programming challenge and ask<br>
              people to submit their solutions within two weeks. The best solutions<br>
              will be published the next issue, along with a new challenge.</font></p>
            <p><font size="2" face="Courier New, Courier, mono">We only received 
              three responses to the challenge last week: congratulations<br>
              to Niels Voigt, James Turk, and Matthew Costuros for their quick 
              responses.</font></p>
            <p><font size="2" face="Courier New, Courier, mono">Source code available 
              at<br>
              <a href="http://www.cprogramming.com/source/nvxor.c">http://www.cprogramming.com/source/nvxor.c</a><br>
              <a href="http://www.cprogramming.com/source/jtxor.cpp">http://www.cprogramming.com/source/jtxor.cpp</a><br>
              <a href="http://www.cprogramming.com/source/mcxor.cpp">http://www.cprogramming.com/source/mcxor.cpp</a></font></p>
            <p><font size="2" face="Courier New, Courier, mono">This week's challenge:</font></p>
            <p><font size="2" face="Courier New, Courier, mono">As towers seem 
              to be a theme this week, write a program to solve the Towers of<br>
              Hanoi problem.</font></p>
            <p><font size="2" face="Courier New, Courier, mono">Description of 
              the Towers of Hanoi:<br>
              The Towers of Hanoi is an old game, and the solution is a relatively 
              simple <br>
              algorithm to work out and program. In the game, there is a pyramidally 
              shaped<br>
              stack of disks placed onto a single shaft. There are two other shafts, 
              each <br>
              empty. The challenge is to move all of the disks from the first 
              shaft to the <br>
              third shaft.</font></p>
            <p><font size="2" face="Courier New, Courier, mono">Each disk is successively 
              smaller, and disks can only be placed on top<br>
              of larger disks. You are free to place any disk on an unoccupied 
              peg, but <br>
              after the first disk has been placed, only smaller disks can be 
              placed on it.</font></p>
            <pre><font face="Courier New, Courier, mono" size="2">      -|-        |       |
     --|--       |       |
    ---|---      |       |
   ----|----     |       |
   Move these           here</font></pre>
            <p><font size="2" face="Courier New, Courier, mono">Particulars:<br>
              The program must be able to handle any height of disks up to eight;<br>
              the program should be able to output the intermediate steps as the 
              solution is<br>
              worked out;<br>
              the program should use some form of ASCII output for the representation.<br>
              <br>
              Send your solution's source code to <a href="mailto:codejournal@cprogramming.com">codejournal@cprogramming.com</a>, 
              and you may <br>
              find it published (Note: due to length of code, solutions will be 
              downloadable<br>
              from the web rather than printed). Please include either your name 
              or an <br>
              identifying username so that we may attribute the solution to you 
              in the next <br>
              newsletter. If you wish, you may ask us to withhold your name.<br>
              <br>
              ---------------------------------------------------------<br>
              <b><a name="er"></a>Errata to previous issue</b><br>
              ---------------------------------------------------------</font></p>
            <p><font size="2" face="Courier New, Courier, mono">In the previous 
              issue we made two major mistakes:<br>
              Eric wrote that the fiftieth element of an array is accessed by 
              typing</font></p>
            <p><font size="2" face="Courier New, Courier, mono"> employees[50];</font></p>
            <p><font size="2" face="Courier New, Courier, mono">He should have 
              written</font></p>
            <p><font size="2" face="Courier New, Courier, mono"> employees[49];</font></p>
            <p><font size="2" face="Courier New, Courier, mono">As well, Alexander 
              wrote that C++ has no Exclusive-Or operator. It does, <br>
              however. ^ is the symbol for bitwise exclusive-or. Eg, </font></p>
            <p><font size="2" face="Courier New, Courier, mono"> A^B;</font></p>
            <p><font size="2" face="Courier New, Courier, mono">We apologize for 
              these mistakes, and if we have made any errors in this <br>
              issue, please inform us.<br>
              ---------------------------------------------------------<BR>
              Suggestions and comments on this newsletter should be sent to <A HREF="mailto:codejournal@cprogramming.com">codejournal@cprogramming.com</A> 
              or <A HREF="mailto:codejournal@aihorizon.com">codejournal@aihorizon.com</A>.<BR>
              <BR>
              <B>Editors:</B><BR>
              Eric Suh, <A HREF="mailto:webmaster@aihorizon.com">webmaster@aihorizon.com<BR>
              </A> Alexander Allain, <A HREF="mailto:webmaster@cprogramming.com">webmaster@cprogramming.com</A><BR>
              <BR>
              To unsubscribe from this journal, send a blank email to <A HREF="mailto:codejournal-unsubscribe@mlm.cprogramming.com">codejournal-unsubscribe@mlm.cprogramming.com</A>. 
              </font></p>
          </td>
        </tr>
        <tr>
          <td width=20></td>
          <td>&nbsp;</td>
        </tr>
      </table>
</td></tr></table>









 
<IMG SRC="/cgi-bin/axs/ax.pl?trans.gif" HEIGHT="1" WIDTH="1">
	
</body>



<SCRIPT LANGUAGE="JavaScript">
	<!--
		document.write("<IMG SRC=\"/cgi-bin/axs/ax.pl?trans.gif&ref=");
		document.write(document.referrer);
		document.write("\" HEIGHT=1 WIDTH=1>");
	// -->
	</SCRIPT><NOSCRIPT>
		</NOSCRIPT></html>
