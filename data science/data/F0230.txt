ID=F0230
URL=http://www.vb-helper.com/err_performance_tips.html
SIZE=37775
DATE=09/07/2002
TIME=13:17:07
DATASET=Visual Basic
HTML=<HTML>
<META http-equiv="PICS-Label" content='(PICS-1.1 "http://www.rsac.org/ratingsv01.html" l gen true comment "RSACi North America Server" by "RodStephens@vb-helper.com" for "http://www.vb-helper.com" on "1998.03.17T18:18-0800" r (n 0 s 0 v 0 l 0))'>
<HEAD>
<TITLE>VB Helper: Bug Proofing Visual Basic: Discussion: Performance Tips</TITLE>
<META NAME="Author" CONTENT="Rod Stephens">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META HTTP-EQUIV="Keywords" CONTENT="software engineering, software development, performance, bug proofing, error handling, bugs, bug-proofing">
<META NAME="Keywords" CONTENT="software engineering, software development, performance, bug proofing, error handling, bugs, bug-proofing">
<META NAME="Description" CONTENT="VB Helper: Bug Proofing Visual Basic: Discussion: Performance Tips">
<META NAME="Copyright" CONTENT="Copyright 1997-2001, Rocky Mountain Computer Consulting, Inc.">
<META NAME="Rating" CONTENT="General">
<META NAME="Robots" CONTENT="All">
</HEAD>

<BODY BGCOLOR="#E1F3FF" BACKGROUND="bg_blue.jpg">

  <!-- This table contains the banner, menu column, and content. -->
  <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="0">
    <!-- ****** -->
    <!-- Banner -->
    <!-- ****** -->
    <TR><TD>
      <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="0" ALIGN="Left">
        <TR>
          <TD BACKGROUND="banner_mid.jpg"><IMG SRC="banner_l.jpg" WIDTH="410" HEIGHT="64"></TD>
          <TD BGCOLOR="#E1F3FF"><IMG SRC="banner_r.jpg" WIDTH="32" HEIGHT="64"></TD>
        </TR>
      </TABLE>
    </TD></TR>
    <TR><TD>&nbsp;</TD></TR>

    <!-- Menu column and content -->
    <TR><TD>
      <TABLE WIDTH="100%" BORDER="0" CELLSPACING="2" CELLPADDING="0">
        <!-- *********** -->
        <!-- Menu column -->
        <!-- *********** -->
        <TR>
          <TD ALIGN="Left" VALIGN="Top">
            <TABLE BORDER="0" CELLSPACING="0" CELLPADDING="0">
              <!-- Menu top -->
              <TR>
                <TD><IMG SRC="blue_ul.jpg" WIDTH="16" HEIGHT="16"></TD>
                <TD><IMG SRC="blue_um.jpg" WIDTH="93" HEIGHT="16"></TD>
                <TD><IMG SRC="blue_ur.jpg" WIDTH="16" HEIGHT="16"></TD>
              </TR>

              <!-- Menu entries -->
              <TR BGCOLOR="#7FCFFF">
                <TD BACKGROUND="blue_l.jpg" WIDTH="16">&nbsp;</TD>
                <TD><CENTER>
                  <A HREF="index.html"><B><FONT SIZE="+1">Home</FONT></B></A><BR>
                  &nbsp;<BR>
                  <A HREF="whats_new.html"><B>What's New</B></A><BR>
                  <A HREF="index_categories.html"><B>Index</B></A><BR>
                  <A HREF="books.html"><B>Books</B></A><BR>
                  <A HREF="links.html"><B>Links</B></A><BR>
                  <A HREF="http://www.topica.com/lists/VBHelperQA/read"><B>Q &amp; A</B></A><BR>
                  <A HREF="newsletter.html"><B>Newsletter</B></A><BR>
                  <A HREF="banners.html"><B>Banners</B></A><BR>
                  &nbsp;<BR>
                  <A HREF="mailto:feedback@vb-helper.com"><B>Feedback</B></A><BR>
                  <A HREF="tip_jar.html"><B>Tip Jar</B></A><BR>
                </CENTER></TD>
                <TD BACKGROUND="blue_r.jpg" WIDTH="16">&nbsp;</TD>
              </TR>

              <!-- Menu bottom -->
              <TR>
                <TD><IMG SRC="blue_ll.jpg" WIDTH="16" HEIGHT="16"></TD>
                <TD><IMG SRC="blue_lm.jpg" WIDTH="93" HEIGHT="16"></TD>
                <TD><IMG SRC="blue_lr.jpg" WIDTH="16" HEIGHT="16"></TD>
              </TR>

              <TR><TD HEIGHT="20" COLSPAN="3">&nbsp;</TR></TD>
              <!-- Old Menu top -->
              <TR>
                <TD><IMG SRC="magenta_ul.jpg" WIDTH="16" HEIGHT="16"></TD>
                <TD><IMG SRC="magenta_t.jpg" WIDTH="93" HEIGHT="16"></TD>
                <TD><IMG SRC="magenta_ur.jpg" WIDTH="16" HEIGHT="16"></TD>
              </TR>

              <!-- Menu entries -->
              <TR BGCOLOR="#E36BFF">
                <TD BACKGROUND="magenta_lside.jpg" WIDTH="16">&nbsp;</TD>
                <TD><CENTER>
                  <B><FONT SIZE="+1">Old Pages</FONT></B><BR>
                  &nbsp;<BR>
                  <A HREF="old_index.htm"><B>Old Index</B></A></BR>
                  <A HREF="sitemap.htm"><B>Site Map</B></A></BR>
                  <A HREF="whatsnew.htm"><B>What's New</B></A></BR>
                  &nbsp;<BR>
                  <A HREF="books.htm"><B>Books</B></A></BR>
                  <A HREF="howto.htm"><B>How To</B></A></BR>
                  <A HREF="tips.htm"><B>Tips &amp; Tricks</B></A></BR>
                  <A HREF="tutorial.htm"><B>Tutorials</B></A></BR>
                  <A HREF="stories.htm"><B>Stories</B></A></BR>
                  <A HREF="perform.htm"><B>Performance</B></A></BR>
                  <A HREF="essays.htm"><B>Essays</B></A></BR>
                  <A HREF="links.htm"><B>Links</B></A></BR>
                  <A HREF="q_and_a.htm"><B>Q &amp; A</B></A></BR>
                  <A HREF="newvb6.htm"><B>New in VB6</B></A></BR>
                  <A HREF="free.htm"><B>Free Stuff</B></A></BR>
                  <A HREF="pictures.htm"><B>Pictures</B></A></BR>
                </CENTER></TD>
                <TD BACKGROUND="magenta_rside.jpg" WIDTH="16">&nbsp;</TD>
              </TR>

              <!-- Old Menu bottom -->
              <TR>
                <TD><IMG SRC="magenta_ll.jpg" WIDTH="16" HEIGHT="16"></TD>
                <TD><IMG SRC="magenta_b.jpg" WIDTH="93" HEIGHT="16"></TD>
                <TD><IMG SRC="magenta_lr.jpg" WIDTH="16" HEIGHT="16"></TD>
              </TR>

              <!-- Other stuff in the menu column -->
              <TR><TD HEIGHT="100" COLSPAN="3">&nbsp;</TR></TD>

              <!-- ***************** -->
              <!-- Amazon Recommends -->
              <!-- ***************** -->
              <TR><TD COLSPAN="3" ALIGN="Center">
<!-- -->
                <SCRIPT SRC="http://rcm.amazon.com/e/cm?t=vbhelper&l=rc1&p=2&o=1" TYPE="text/JavaScript"></SCRIPT>
<!-- -->
                <NOSCRIPT>
                  <TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" WIDTH="125">
                    <TR><TD>
                      <MAP NAME="boxmap">
                        <AREA SHAPE="RECT" COORDS="18, 263, 105, 274" HREF="http://rcm.amazon.com/e/cm/privacy-policy.html?o=1">
                        <AREA COORDS="0,0,10000,10000" HREF="http://www.amazon.com/exec/obidos/redirect-home/vbhelper">
                      </MAP>
                      <img src="http://rcm-images.amazon.com/images/G/01/associates/amzn_recommends/gnbox125x275.gif" width="125" height="275" border="0" usemap="#boxmap">
                    </TD></TR>
                  </TABLE>
                </NOSCRIPT>
              </TD></TR>
              <TR><TD HEIGHT="100" COLSPAN="3">&nbsp;</TR></TD>

              <!-- ******** -->
              <!-- Partners -->
              <!-- ******** -->
              <TR><TD COLSPAN="3" ALIGN="Center" BACKGROUND="sandpaper.gif"><A HREF="http://www.wiley.com/compbooks"><IMG SRC="wiley_logo.gif" BORDER="0" ALIGN="Center" WIDTH="77" HEIGHT="105"></TD></TR>
              <TR><TD COLSPAN="3"><FONT SIZE="1">&nbsp;</FONT></TD></TR>
              <TR><TD COLSPAN="3" ALIGN="Center"><A HREF="http://www.quepublishing.com"><IMG SRC="que.gif" BORDER="0" ALIGN="Center" WIDTH="121" HEIGHT="36"></A></TD></TR>
              <TR><TD COLSPAN="3"><FONT SIZE="1">&nbsp;</FONT></TD></TR>
              <TR><TD COLSPAN="3" ALIGN="Center"><A HREF="amazon.html"><IMG SRC="amazon_logo.gif" BORDER="0" ALIGN="Center" WIDTH="68" HEIGHT="65"></A></TD></TR>
              <TR><TD COLSPAN="3">&nbsp;</TR></TD>

              <!-- ********** -->
              <!-- More stuff -->
              <!-- ********** -->
            </TABLE>
          </TD>

          <!-- A little space between the menus and content -->
          <TD WIDTH="5">&nbsp;</TD>

          <!-- ******* -->
          <!-- Content -->
          <!-- ******* -->
          <TD WIDTH="100%" ALIGN="Left" VALIGN="Top">
            <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="0">

<TR><TD>
  <!-- Navigation menu -->
  <TABLE WIDTH="100%" BORDER="0" BGCOLOR="#7FE398" CELLSPACING="0" CELLPADDING="0">
    <!-- Top row -->
    <TR>
      <TD BGCOLOR="#7FE398" WIDTH="20"><IMG SRC="green_ul.jpg" WIDTH="20" HEIGHT="20"></TD>
      <TD WIDTH="100%" BACKGROUND="green_t.jpg">&nbsp;</TD>
      <TD BGCOLOR="#7FE398" WIDTH="20"><IMG SRC="green_ur.jpg" WIDTH="20" HEIGHT="20"></TD>
    </TR>

    <!-- Title row -->
    <TR>
      <TD BGCOLOR="#7FE398" WIDTH="20" BACKGROUND="green_l.jpg">&nbsp;</TD>
      <TD BGCOLOR="#7FE398" WIDTH="100%" ALIGN="Center"><B><FONT SIZE="+1" COLOR="#0000C0">Bug Proofing Visual Basic: Discussion: Performance Tips</FONT></B></TD>
      <TD BGCOLOR="#7FE398" WIDTH="20" BACKGROUND="green_r.jpg">&nbsp;</TD>
    </TR>

    <!-- Menu entries -->
    <TR>
      <TD BGCOLOR="#E1F3FF" BACKGROUND="green_l.jpg" WIDTH="20">&nbsp;</TD>
      <TD BGCOLOR="#7FE398" WIDTH="100%" ALIGN="Center">
        <TABLE WIDTH="100%" BGCOLOR="#7FE398" BORDER="0" CELLPADDING="0" CELLSPACING="0">
          <TR>
            <TD WIDTH="33%" BGCOLOR="#7FE398" ALIGN="Center"><A HREF="err.htm">Overview</A></TD>
            <TD WIDTH="33%" BGCOLOR="#7FE398" ALIGN="Center"><A HREF="err_toc.html">Table of Contents</A></TD>
            <TD WIDTH="33%" BGCOLOR="#7FE398" ALIGN="Center"><A HREF="err_updates.html">Updates</A></TD>
          </TR>
          <TR>
            <TD WIDTH="33%" BGCOLOR="#7FE398" ALIGN="Center"><A HREF="err_source.html">Source Code</A></TD>
            <TD WIDTH="33%" BGCOLOR="#7FE398" ALIGN="Center"><A HREF="err_comment_templates.html">Comment Templates</A></TD>
            <TD WIDTH="33%" BGCOLOR="#7FE398" ALIGN="Center"><A HREF="err_sample_text.html">Sample Text</A></TD>
          </TR>
          <TR>
            <TD WIDTH="33%" BGCOLOR="#7FE398" ALIGN="Center"><A HREF="err_discussion.html">Discussion, Q & A</A></TD>
            <TD WIDTH="33%" BGCOLOR="#7FE398" ALIGN="Center"><A HREF="http://www.amazon.com/exec/obidos/ASIN/0471323519/vbhelper/">Amazon.com</A></TD>
            <TD WIDTH="33%" BGCOLOR="#7FE398" ALIGN="Center"><A HREF="http://www.amazon.co.uk/exec/obidos/ASIN/0471323519/vbhelper0e/">Amazon.co.uk</A></TD>
          </TR>

        </TABLE>
      </TD>
      <TD BGCOLOR="#E1F3FF" BACKGROUND="green_r.jpg" WIDTH="20">&nbsp;</TD>
    </TR>


    <!-- Bottom row -->
    <TR>
      <TD BGCOLOR="#7FE398" WIDTH="20"><IMG SRC="green_ll.jpg" WIDTH="20" HEIGHT="20"></TD>
      <TD WIDTH="100%" BACKGROUND="green_b.jpg" ALIGN="Center">&nbsp;</TD>
      <TD BGCOLOR="#7FE398" WIDTH="20"><IMG SRC="green_lr.jpg" WIDTH="20" HEIGHT="20"></TD>
    </TR>
  </TABLE>
</TD></TR>

<TR><TD>
&nbsp;
<P>

  <P>
<TABLE WIDTH="100%" BORDER="0" CELLPADDING="0" CELLSPACING="0">
  <TR>
    <TD><IMG SRC="magenta_ul.jpg" WIDTH="16" HEIGHT="16"></TD>
    <TD WIDTH="100%" HEIGHT="16" BACKGROUND="magenta_t.jpg"><FONT SIZE="1">&nbsp;</FONT></TD>
    <TD><IMG SRC="magenta_ur.jpg" WIDTH="16" HEIGHT="16"></TD>
  </TR>
  <TR>
    <TD BACKGROUND="magenta_lside.jpg" WIDTH="16">&nbsp;</TD>
    <TD WIDTH="100%" BGCOLOR="#E36BFF">
This page lists some Visual Basic performance tuning tips. If you have other tips to share,
<A HREF="mailto:Performance@vb-helper.com">let me know</A>. I will update this page as tips are contributed.
<P>
The book <A HREF="err.htm">Bug Proofing Visual Basic</A> contains some performance optimization tips. 
More importantly, it explains when to optimize and when not to optimize. The condensed version is:
<CENTER><B>First make it work correctly. Then worry about making it work quickly.</B></CENTER>
    </TD>
    <TD BACKGROUND="magenta_rside.jpg" WIDTH="16">&nbsp;</TD>
  </TR>
  <TR>
    <TD><IMG SRC="magenta_ll.jpg" WIDTH="16" HEIGHT="16"></TD>
    <TD WIDTH="100%" HEIGHT="16" BACKGROUND="magenta_b.jpg"><FONT SIZE="1">&nbsp;</FONT></TD>
    <TD><IMG SRC="magenta_lr.jpg" WIDTH="16" HEIGHT="16"></TD>
  </TR>
</TABLE>

<P>
There are many ways to speed up a Visual Basic program. Unfortunately most produce only a small benefit
and make the program more complicated and harder to understand. For example, even if a program uses huge collections,
converting them into arrays will probably only save you a few percent in run time and it may make simple
operations much more complex.
On the other hand, rewriting the program's main algorithms can reduce the run time by factors of hundreds.
<P>
Here is a list of some of the many things you can do to improve performance. The ones at the top of the
list are more likely to make a noticeable difference.
<P>

<HR COLOR=#00C0FF>

<UL>
<LI><A HREF="mailto:Paul@Paulsheldon.com">Paul Sheldon</A>:<BR>
I have found the technique described in the tip "Hide controls while sending
them data" can in some cases give funny results,
so I prefer to use the LockWindowUpdate API Call. You call it once
passing the hwnd of the control, and all repaint messages will be
blocked for that control (giving the same effect as hiding it), you then
call it again with 0 as the parameter to restart the repaint messages.
Obviously it is good to also put the reset in your error handling.
<P>

<LI><A HREF="mailto:sfd@sfdonline.com">Seth</A>:<BR>
Hide controls while you send data to them. For example, suppose you want to display
1,000 strings in a ListBox. Set the control's Visible property to False,
set the strings, and then set Visible back to True.
The reason this makes it faster is
because the ListBox doesn't have to "repaint" itself every time a string of
data is sent. The
ListBox only has to paint itself once, not every single time an item is
added.
<P>

<LI><A HREF="mailto:constantijn.enders@cmg.nl">Constantijn Enders</A>:<BR>
Split IF functions. Visual Basic doesn't has an option like complete boolean 
evaluation. If the first expression is false it will still evaluate the second
one even if the result will be useless.
<P>

<TABLE BACKGROUND="computer_paper.jpg" WIDTH="100%">
  <TR><TD>
<PRE><FONT NAME="Courier New" POINT-SIZE="10" SIZE="2">Private Sub Command1_Click()
    <FONT COLOR="#008000">' Slow code</FONT>
    If f1 And f2 Then
        Debug.Print "True"
    End If

    <FONT COLOR="#008000">' Faster because f2 not executed when f1 is false</FONT>
    If f1 Then
        If f2 Then
            Debug.Print "True"
        End If
    End If
End Sub</FONT></PRE></TD></TR>
</TABLE>
<P>

And if possible put the fastest function at the top line
If both function have the same speed put the function that is 
most of the time false at the top
<P>

<LI><A HREF="mailto:constantijn.enders@cmg.nl">Constantijn Enders</A>:<BR>
Use option Compare Text at the top of the module. This will eliminate
the need for UCase$ functions. You can still use StrComp(s1, s2, vbBinaryCompare).
<P>

<LI><A HREF="mailto:constantijn.enders@cmg.nl">Constantijn Enders</A>:<BR>
Parse results directly to controls. If CheckPassword is a function which result a boolean:
<P>

<TABLE BACKGROUND="computer_paper.jpg" WIDTH="100%">
  <TR><TD>
<PRE><FONT NAME="Courier New" POINT-SIZE="10" SIZE="2">If CheckPassword() = True Then
    cmdLogon.Enabled = True
Else
    cmdLogon.Enabled = False
End If</FONT></PRE></TD></TR>
</TABLE>
<P>

Is slower than:

<P>
<TABLE BACKGROUND="computer_paper.jpg" WIDTH="100%">
  <TR><TD>
<PRE><FONT NAME="Courier New" POINT-SIZE="10" SIZE="2">cmdLogon.Enabled = (CheckPassword() = True)</FONT></PRE></TD></TR>
</TABLE>
<P>

Or even better:
<P>
<TABLE BACKGROUND="computer_paper.jpg" WIDTH="100%">
  <TR><TD>
<PRE><FONT NAME="Courier New" POINT-SIZE="10" SIZE="2">cmdLogon.Enabled = CheckPassword()</FONT></PRE></TD></TR>
</TABLE>
<P>


<LI><A HREF="mailto:constantijn.enders@cmg.nl">Constantijn Enders</A>:<BR>
Cache the results of a function just as you would a property.
<P>
<TABLE BACKGROUND="computer_paper.jpg" WIDTH="100%">
  <TR><TD>
<PRE><FONT NAME="Courier New" POINT-SIZE="10" SIZE="2">For i = 1 To 10
    Command(i).Enabled = CheckPassword()
Next</FONT></PRE></TD></TR>
</TABLE>
<P>

Is slower than:

<P>
<TABLE BACKGROUND="computer_paper.jpg" WIDTH="100%">
  <TR><TD>
<PRE><FONT NAME="Courier New" POINT-SIZE="10" SIZE="2">bEnabled = CheckPassword()
For i = 1 to 10
    Command(i).Enabled = bEnabled
Next</FONT></PRE></TD></TR>
</TABLE>
<P>


Because in the first routine the CheckPassword function is 
executed 10 times.
<P>

<LI><A HREF="mailto:carmis@home.com">Carman Thornton</A>:<BR>
In addition to using integer operations whenever possible. Use \ for division instead of / (it's faster). 
Use * .5 instead of / 2. Example: 11 * .5 = 5.5 is faster than 11 / 2 = 5.5.
Assembler instruction "MUL" is faster than "FDIV".
<P>
[<A HREF="/HowTo/div.zip">Click here</A> to download a test program comparing different calculations. You may be surprised at the results. -- Rod]
<P>
<LI><A HREF="mailto:mjcstuff@hotmail.com">Mike Carver</A>:<BR>
Whenever possible don't use square roots. For example:
 
<P>
<TABLE BACKGROUND="computer_paper.jpg" WIDTH="100%">
  <TR><TD>
<PRE><FONT NAME="Courier New" POINT-SIZE="10" SIZE="2">If a * a + b * b = 4 Then ...</FONT></PRE></TD></TR>
</TABLE>
<P>

is much faster than

<P>
<TABLE BACKGROUND="computer_paper.jpg" WIDTH="100%">
  <TR><TD>
<PRE><FONT NAME="Courier New" POINT-SIZE="10" SIZE="2">If Sqr(a * a + b * b) = 2 Then ...</FONT></PRE></TD></TR>
</TABLE>
<P>

<LI><A HREF="mailto:mpurgar@juno.com">Smidge</A>:<BR>
If you have to do anything with repetative calculations really fast (ie: Circles or anything dealing with Trig functions), it may help out a lot to create a table of values for whatever resolution you need for the data.
<P>
For example, precalculating the x, y coordinates of a circle about a point every two degrees (or use radians, which are actually better for this) is often good enough and much faster than using the SIN, COS and TAN functions.
<P>
<FONT SIZE="-1">[I have used this technique and it can make a huge difference depending on your application. My book
<A HREF="vba.htm">Ready-to-Run Visual Basic Algorithms</A> uses this technique to calculate Fibonacci numbers.
</FONT>
<P>

<LI>Rewrite the program in C++ or Delphi. [This is rarely an option, but it is the ultimate solution when you REALLY need more performance, so I am listing it anyway.]
<LI>Upgrade to Visual Basic .NET. VB.NET should provide roughly the same performance as VC++ or C# in Visual Studio .NET. Delphi may still be faster than all of these, though I haven't seen benchmarks comparing them.
<LI>Upgrade to Visual Basic 5 or 6. Compiled native Visual Basic executables are a lot slower than C++ or Delphi executables, but they are much faster then the non-compiled programs produced by Visual Basic 4 and earlier versions. [This is another expensive option, but easier than learning a new language.]
<LI>Profile your application. Use a performance monitoring tool to see exactly where the program is spending most of its time. Visual Basic 4 and 5 come with one. Visual Basic 6 does if you buy the enterprise edition. Don't waste your time optimizing code that is already fast enough.
<LI>Decompress graphics. Set the Picture property for a Form or PictureBox to a .bmp file, not a compressed JPEG or GIF file. Those files are stored in the program in compressed form so the program needs extra time to display them. Decompressing graphics will make the executable image larger but will load the pictures faster.
<LI>Preload forms. Load all the forms you will use when the program starts. Then they can display faster when you need them.
<LI>Use arrays instead of collections. Arrays are much faster. Use collections only if you need their special features like keyed lookup.
<LI>Preallocate arrays so they are big enough and you don't have to ReDim them later.
<LI>If you need to set all entries in an array to zero, use ReDim to reallocate it. This takes longer than leaving the array alone (the previous tip), but is faster than setting the entries one at a time.
<LI>To set entries to zero in a fixed-sized array (allocated using Dim), use the Erase statement. This destroys dynamically allocated arrays, but resets fixed-sized arrays. <A HREF="mailto:bwets@email.com">BwetS</A>.
<LI>Use the MemCopy or RtlMoveMemory API functions to copy arrays instead of copying their entries one at a time.
<LI>Use specific data types instead of Variants. Always declare a variable's data type. If you don't, it defaults to variant.
<LI>Use specific object types rather than declaring a variable to be of type Object. Be as specific as possible. For example, Object is bad, Control is better, TextBox is best.
<LI>Do not empty a collection by removing its elements. Destroy it by setting it to Nothing.
<LI>Declare and allocate objects in separate lines. The statement "Dim obj As New MyClass" is actually slower than "Dim obj As MyClass" and "Set obj = New MyClass" on two separate lines (try it).
<LI>Use integer operations whenever possible. Use \ for division instead of / (it's faster).
<LI>Use Len to test for zero-length strings. For example, If Len(my_string) = 0 Then ... This is faster than using If my_string = "" Then...
<LI>Use With for a long series of object references used several times. This executes faster than if you repeat the series of objects in each statement.
<LI>Use as few string operations as possible, they are slow.
<LI>Order Select Case statements so the most commonly used value comes first.
<LI>Call sub and function with by ref parameters when possible. <A HREF="mailto:aghezzi@isp.it">Adriano Ghezzi</A> [Note that this makes the routine more prone to accidental side effects so be careful--Rod]
<LI>Set form to nothing when you never need. <A HREF="mailto:aghezzi@isp.it">Adriano Ghezzi</A> [This saves memory and may save lots of time if you have so many forms that you must page. If you only have a few forms, it will be faster to keep them always loaded and just hide them--Rod]
<LI>Perceived performance is as important as actual performance. Imagine clicking on a button, and nothing happens for 10 seconds. That will be a very long 10 seconds. Add a progress bar, and the user won't even notice the 10 seconds. <A HREF="mailto:RobertT@mintek.co.za">Robert Terblanche</A>.
<LI>When you use a lot of images several times in an application. Put them on one form and load them when needed from that form. <A HREF="mailto:J_Cromwijk@driestar.nl">Jan Cromwijk</A> [This makes all the images load when that form is loaded so they are ready to go when you need them--Rod]
<LI>If you need to do a lot of string/file processing, use mid$ (and trim$ etc.) rather than mid as the latter treats the data type as a variant as opposed to a string, which can be up to 3 times slower (I think you can use the $ sign with mid, trim, left and right). <A HREF="mailto:sth@mentor-systems.com">Steven R. Hamby</A>.
<LI>To make the application seem faster, display its first form as quickly as possible. Use Show in the form's Load event handler to make it appear before performing long startup calculations.
<LI>Put as little code as possible in Form_Load event handlers so the forms load quickly.
<LI>If the initial form taks a long time to load, display a splash screen immediately and remove it only when the first form is loaded (<A HREF="avbt.htm">Advanced Visual Basic Techniques</A> shows how to make different kinds of interesting splash screens).
<LI>Group subroutines in modules. When one routine calls another, the other routine's module is loaded. If one routine calls many others from different modules, all the modules must be loaded. If all the routines are in the same module, they will all be loaded at once.
<LI>Do not waste memory. Sometimes you can make a program faster using more memory, but sometimes more memory can slow things down. In particular, if you use so much memory that the program cannot fit in real memory all at once, the system will page. That can slow the program enormously.
<LI>Set AutoRedraw to False to reduce memory usage. Set AutoRedraw to True to make redrawing faster for complicated drawings.
<LI>Set ClipControls to False (read the help for more information).
<LI>Use Move to position controls instead of setting the Left and Top properties.
<LI>Hide a control if you need to change a bunch of its appearance properties. Make it visible again when you are done modifying it.
<LI>Use a temporary variable to refer to a complex expression multiple times. For example, suppose you need to set several values in the SelectedEmployee.NextOfKin.HomeInformation.Address object. Instead of referring to this long expression several times, use:
<P>
<TABLE BACKGROUND="computer_paper.jpg" WIDTH="100%">
  <TR><TD>
<PRE><FONT NAME="Courier New" POINT-SIZE="10" SIZE="2">Dim addr As AddressInfo

Set addr = _
    SelectedEmployee.NextOfKin.HomeInformation.Address
addr.Street = txtStreet.Text
addr.City = txtCity.Text
addr.State = txtState.Text
addr.Phone = txtPhone.Text</FONT></PRE></TD></TR>
</TABLE>
<P>

<LI>Cache properties you use multiple times. If the program needs to refer to txtLastName.Left several times, save that value in a variable and refer to the variable instead. Accessing variables is much faster than accessing properties.
<LI>Use Line (x1, y1)-(x2, y2), , B to draw a box instead of using Line four times.
<LI>Use Image controls instead of PictureBoxes if possible. Image controls take less memory.
<LI>Use Frame controls to hold other controls instead of PictureBoxes. Frame controls take less memory.
<LI>Use control arrays for controls that are unimportant. For example, many forms contain a lot of uninteresting labels. Put them all in a control array. A control array containing 10 controls usees less memory than 10 individual controls. 
<LI>Perform long, low-prioirity calculations in the background using a Timer.
<LI>Use comments and meaningful variable names. Long comments and variable names, and blank lines <B>do not</B> add to the compiled program's size so there is no harm in using them.
<LI>Do not line number every line because line numbers increase the program's size.
<LI>Remove unused variables and code since they remain in the program and take up memory.
<LI>Use DoEvents to allow the user to perform other actions while your long process is running. This can reduce the user's frustration even if it doesn't make the program move faster. (<A HREF="mailto:jrdye@dialpoint.net">John Dye</A>)
<LI>Use the FindFirstFile, FindNextFile, and FindClose API functions to quickly search directories. <A HREF="mailto:NickDD@ISM-Solutions.com">Nikolaos D. Dimopoulos</A>.
<BR>
[Note that using API functions is often but not always faster. It is always more complicated and sometimes riskier than using VB--Rod]

<LI>UCase$ and LCase$ let you perform case insensitive comparisons. The following API functions are faster:
<P>
<TABLE BACKGROUND="computer_paper.jpg" WIDTH="100%">
  <TR><TD>
<PRE><FONT NAME="Courier New" POINT-SIZE="10" SIZE="2">Declare Function CharLower Lib "user32" _
    Alias "CharLowerA" (ByVal lpsz As String) As String
Declare Function CharUpper Lib "user32" _
    Alias "CharUpperA" (ByVal lpsz As String) As String</FONT></PRE></TD></TR>
</TABLE>
<P>


<A HREF="mailto:NickDD@ISM-Solutions.com">Nikolaos D. Dimopoulos</A>.

<LI>Use a temporary variable to refer to a complex expression multiple times. For example, suppose you need to set several values in the SelectedEmployee.NextOfKin.HomeInformation.Address object. Instead of referring to this long expression several times, use:
<P>
<TABLE BACKGROUND="computer_paper.jpg" WIDTH="100%">
  <TR><TD>
<PRE><FONT NAME="Courier New" POINT-SIZE="10" SIZE="2">Dim addr As AddressInfo

Set addr = _
    SelectedEmployee.NextOfKin.HomeInformation.Address
addr.Street = txtStreet.Text
addr.City = txtCity.Text
addr.State = txtState.Text
addr.Phone = txtPhone.Text</FONT></PRE></TD></TR>
</TABLE>
<P>

The With command speeds things up in the same way, so this could be:

<P>
<TABLE BACKGROUND="computer_paper.jpg" WIDTH="100%">
  <TR><TD>
<PRE><FONT NAME="Courier New" POINT-SIZE="10" SIZE="2">With SelectedEmployee.NextOfKin.HomeInformation.Address
    .Street = txtStreet.Text
    .City = txtCity.Text
    .State = txtState.Text
    .Phone = txtPhone.Text
End With</FONT></PRE></TD></TR>
</TABLE>
<P>

<A HREF="mailto:crimar@NOSpamone.net.au">Mark Focas</A>.

<LI>Use ByRef to pass values instead of ByVal. When you use ByRef, the program passes the (small) address of the value. When you use ByVal, it must make a new copy of the value and pass that. Generally it is faster to pass the address instead of a copy.
<P>
However, when you are making an out-of-process call, ByVal is faster. With out-of-process calls, Visual Basic must repackage the value anyway to send it to the other process. If you use Byref, it must then unpackage the returned result and that takes extra time.
<A HREF="mailto:kcastle@mindspring.com">Kevin B. Castleberry</A>.

<LI>Use * instead of ^ to take simple integer powers. For example, use A = B * B instead of A = B ^ 2. The first is faster. <A HREF="mailto:michalisv@modus.gr">Michalis Vlastos</A>.

<LI>If you need to build a long string, build it in pieces and then join the pieces when they are all finished. For example, suppose subroutines AddText1, AddText2, etc. append text to a string. Then the following code:

<P>
<TABLE BACKGROUND="computer_paper.jpg" WIDTH="100%">
  <TR><TD>
<PRE><FONT NAME="Courier New" POINT-SIZE="10" SIZE="2">Dim txt As String

txt = AddText1(txt)
txt = AddText2(txt)
txt = AddText3(txt)</FONT></PRE></TD></TR>
</TABLE>
<P>


takes longer than this code:

<P>
<TABLE BACKGROUND="computer_paper.jpg" WIDTH="100%">
  <TR><TD>
<PRE><FONT NAME="Courier New" POINT-SIZE="10" SIZE="2">Dim txt As String
Dim txt1 As String
Dim txt2 As String
Dim txt3 As String

AddText1(txt1)
AddText2(txt2)
AddText3(txt3)
txt = txt1 & txt2 & txt3</FONT></PRE></TD></TR>
</TABLE>
<P>


In the first code, the AddText subroutines must manipulate long strings. In the second example they work with relatively short strings.

<LI>Save intermediate results in mathematical calculations. For example, this code:

<P>
<TABLE BACKGROUND="computer_paper.jpg" WIDTH="100%">
  <TR><TD>
<PRE><FONT NAME="Courier New" POINT-SIZE="10" SIZE="2">Xsquare = x * x
Ysquare = y * y
a = 2 * Xsquare + 3 * Ysquare
b = 3 * Xsquare + 5 * Ysquare
If a + b > 50 Then ...</FONT></PRE></TD></TR>
</TABLE>
<P>

is faster than this version:

<P>
<TABLE BACKGROUND="computer_paper.jpg" WIDTH="100%">
  <TR><TD>
<PRE><FONT NAME="Courier New" POINT-SIZE="10" SIZE="2">If 2 * x * x + 3 * y * y + _
    3 * x * x + 5 * y * y > 50 _
Then ...</FONT></PRE></TD></TR>
</TABLE>
<P>
<A HREF="mailto:michalisv@modus.gr">Michalis Vlastos</A>.

<LI><A HREF="mailto:cade@acm.org">Cade Roux</A> has some words of wisdom about Visual Basic's optimizations.
<P>
When I moved to VB5 from VB4, I immediately started compiling everything to native code for speed.  For large interactive applications which are not processor bound, I have found the size of the executable for the compiled version causes it to load much slower and execute slower due to the large executable size, and probably larger working set.  I had a 10MB exe go down to 4MB by switching back to P-Code.  The compile time is vastly shorter as well, resulting in quicker test-cycles.  We no longer compile to native code at all, even on smaller applications.
<P>
[Database bound applications may show the same effect. Any program that spends a lot of time waiting for some slow process (the user, a database, a modem, etc.) will not be limited by the code speed. In those cases, you will get smaller executables and possibly better performance if you do not compile. -- Rod]



<LI>From <A HREF="mailto:CDCollura@aol.com">Chris Collura</A>:
<P>
When looping to a final value, do not put the function returning the count in the looping logic.

<P>
<TABLE BACKGROUND="computer_paper.jpg" WIDTH="100%">
  <TR><TD>
<PRE><FONT NAME="Courier New" POINT-SIZE="10" SIZE="2">i = 1
Do While i <= SlowFunction()
    total = total + i
Loop</FONT></PRE></TD></TR>
</TABLE>
<P>


Runs slower than

<P>
<TABLE BACKGROUND="computer_paper.jpg" WIDTH="100%">
  <TR><TD>
<PRE><FONT NAME="Courier New" POINT-SIZE="10" SIZE="2">i_max = SlowFunction()
i = 1
Do While i <= i_max
    total = total + i
Loop</FONT></PRE></TD></TR>
</TABLE>
<P>


[Note: For loops do not evaluate their bounds every time through the loop. When the For statement starts, the system calculates the upper bound and saves it. It does not recalculate it every time through the loop. Therefore this code is reasonably fast:

<P>
<TABLE BACKGROUND="computer_paper.jpg" WIDTH="100%">
  <TR><TD>
<PRE><FONT NAME="Courier New" POINT-SIZE="10" SIZE="2">For i = 1 To SlowFunction()
    total = total + i
Next i</FONT></PRE></TD></TR>
</TABLE>
<P>

If you need the program to recalculate the function each time through the loop,
use a Do loop.
<P>
Rod]



</UL>
  <P>

<P>
&nbsp;
<P>
</TD></TR>

<TR><TD>
  <!-- Navigation menu -->
  <TABLE WIDTH="100%" BORDER="0" BGCOLOR="#7FE398" CELLSPACING="0" CELLPADDING="0">
    <!-- Top row -->
    <TR>
      <TD BGCOLOR="#7FE398" WIDTH="20"><IMG SRC="green_ul.jpg" WIDTH="20" HEIGHT="20"></TD>
      <TD WIDTH="100%" BACKGROUND="green_t.jpg">&nbsp;</TD>
      <TD BGCOLOR="#7FE398" WIDTH="20"><IMG SRC="green_ur.jpg" WIDTH="20" HEIGHT="20"></TD>
    </TR>

    <!-- Title row -->
    <TR>
      <TD BGCOLOR="#7FE398" WIDTH="20" BACKGROUND="green_l.jpg">&nbsp;</TD>
      <TD BGCOLOR="#7FE398" WIDTH="100%" ALIGN="Center"><B><FONT SIZE="+1" COLOR="#0000C0">Bug Proofing Visual Basic: Discussion: Performance Tips</FONT></B></TD>
      <TD BGCOLOR="#7FE398" WIDTH="20" BACKGROUND="green_r.jpg">&nbsp;</TD>
    </TR>

    <!-- Menu entries -->
    <TR>
      <TD BGCOLOR="#E1F3FF" BACKGROUND="green_l.jpg" WIDTH="20">&nbsp;</TD>
      <TD BGCOLOR="#7FE398" WIDTH="100%" ALIGN="Center">
        <TABLE WIDTH="100%" BGCOLOR="#7FE398" BORDER="0" CELLPADDING="0" CELLSPACING="0">
          <TR>
            <TD WIDTH="33%" BGCOLOR="#7FE398" ALIGN="Center"><A HREF="err.htm">Overview</A></TD>
            <TD WIDTH="33%" BGCOLOR="#7FE398" ALIGN="Center"><A HREF="err_toc.html">Table of Contents</A></TD>
            <TD WIDTH="33%" BGCOLOR="#7FE398" ALIGN="Center"><A HREF="err_updates.html">Updates</A></TD>
          </TR>
          <TR>
            <TD WIDTH="33%" BGCOLOR="#7FE398" ALIGN="Center"><A HREF="err_source.html">Source Code</A></TD>
            <TD WIDTH="33%" BGCOLOR="#7FE398" ALIGN="Center"><A HREF="err_comment_templates.html">Comment Templates</A></TD>
            <TD WIDTH="33%" BGCOLOR="#7FE398" ALIGN="Center"><A HREF="err_sample_text.html">Sample Text</A></TD>
          </TR>
          <TR>
            <TD WIDTH="33%" BGCOLOR="#7FE398" ALIGN="Center"><A HREF="err_discussion.html">Discussion, Q & A</A></TD>
            <TD WIDTH="33%" BGCOLOR="#7FE398" ALIGN="Center"><A HREF="http://www.amazon.com/exec/obidos/ASIN/0471323519/vbhelper/">Amazon.com</A></TD>
            <TD WIDTH="33%" BGCOLOR="#7FE398" ALIGN="Center"><A HREF="http://www.amazon.co.uk/exec/obidos/ASIN/0471323519/vbhelper0e/">Amazon.co.uk</A></TD>
          </TR>

        </TABLE>
      </TD>
      <TD BGCOLOR="#E1F3FF" BACKGROUND="green_r.jpg" WIDTH="20">&nbsp;</TD>
    </TR>


    <!-- Bottom row -->
    <TR>
      <TD BGCOLOR="#7FE398" WIDTH="20"><IMG SRC="green_ll.jpg" WIDTH="20" HEIGHT="20"></TD>
      <TD WIDTH="100%" BACKGROUND="green_b.jpg" ALIGN="Center">&nbsp;</TD>
      <TD BGCOLOR="#7FE398" WIDTH="20"><IMG SRC="green_lr.jpg" WIDTH="20" HEIGHT="20"></TD>
    </TR>
  </TABLE>
&nbsp;
<P>
</TD></TR>

            </TABLE> <!-- End content table -->
          </TD>
        </TR> <!-- End row containing menu column and content -->
      </TABLE> <!-- End table containing menu column and content -->
    </TD></TR>

    <!-- ****** -->
    <!-- Footer -->
    <!-- ****** -->
    <TR><TD WIDTH="100%">
      <TABLE WIDTH="100%" BORDER="0" BGCOLOR="#87CEFA" CELLSPACING="0" CELLPADDING="0">
        <!-- Top row -->
        <TR>
          <TD BGCOLOR="#E1F3FF" ALIGN="Right" WIDTH="16"><IMG SRC="blue_ul.jpg" WIDTH="16" HEIGHT="16"></TD>
          <TD BACKGROUND="blue_um.jpg" COLSPAN="2" ALIGN="Center"><FONT SIZE="-2">
            Copyright &copy; 1997-2001 Rocky Mountain Computer Consulting, Inc. &nbsp; All rights reserved.
          </FONT></TD>
          <TD BGCOLOR="#E1F3FF"><IMG SRC="blue_ur.jpg" WIDTH="16" HEIGHT="16"></TD>
        </TR>

        <!-- Bottom row -->
        <TR>
          <TD BGCOLOR="#E1F3FF" ALIGN="Right" WIDTH="16"><IMG SRC="blue_ll.jpg" WIDTH="16" HEIGHT="16"></TD>
          <TD BACKGROUND="blue_lm.jpg"><FONT SIZE="-2">
            &nbsp;<SCRIPT LANGUAGE=JavaScript>document.write(document.URL)</SCRIPT></FONT></TD>
          <TD BACKGROUND="blue_lm.jpg" ALIGN="Right"><FONT SIZE="-2">
            Updated <SCRIPT LANGUAGE=JavaScript>document.write(document.lastModified)</SCRIPT> &nbsp;
          </FONT></TD>
          <TD BGCOLOR="#E1F3FF"><IMG SRC="blue_lr.jpg" WIDTH="16" HEIGHT="16"></TD>
        </TR>
      </TABLE>
    </TD></TR>
  </TABLE> <!-- End table containing banner, menu column + content, and footer -->

</BODY>
</HTML>
