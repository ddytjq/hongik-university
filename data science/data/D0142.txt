ID=D0142
URL=http://www.ejbtut.com/EjbHandles.jsp
SIZE=3981
DATE=16/07/02
TIME=14:37:54
DATASET=Java
HTML=<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.75 [en] (Win98; U) [Netscape]">
   <meta name="Description" content="EJB Tutorial">
   <meta name="Keywords" content="JSP Tutorial">
   <meta name="KeyWords" content="EJB Tutorial">
   <title>EJB Tutorial</title>
</head>
<body>
&nbsp;
<table BORDER=0 CELLSPACING=0 CELLPADDING=0 COLS=1 WIDTH="100%" >
<tr>
<td>
<center><b><font size=+3>EJB Tutorial</font></b>
<br><img SRC="ejbtut.gif" ></center>
</td>
</tr>

<tr>
<td><i><font size=-1><a href="/">Tutorial Index Page</a></font></i>
<h2>
EJB Handles</h2>
In everything we have done so far, we have followed the standard model
of locating a "home" object, and then using it to create or find the EJB.&nbsp;
Also, since there are no finders in the case of session beans, once the
program using a session bean exits, the bean is gone in our model.
<p>There is another model provided for getting to EJBs.&nbsp; This method
uses "handles".
<p>Each home or bean object has a handle.&nbsp; You can ask for this handle
from the home or bean object.&nbsp; Later on, you can get back to the object
by using the handle.
<p>The handle doesn't just work during the running program, it even works
if your program exits and is restarted, or if the handle is used from another
program.&nbsp; The handle itself is like a permanent object.&nbsp; Of course,
if your program exits, it has to have a way to save the handle.&nbsp; This
can be done simply by writing the handle to a file (or any another such
method of passing or preserving bytes.)&nbsp; The handle derives from java.io.Serializable,
so it can be written to files.
<p>The code to obtain a handle from an EJB object and to get an EJB object
back from a handle is fairly straightforward.&nbsp; The following code
fragment shows how to obtain a handle from a bean object called "stock"
and to write it into a file:
<p><tt>Handle handle = stock.getHandle();</tt>
<br><tt>ObjectOutputStream p = new ObjectOutputStream(</tt>
<br><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new FileOutputStream("C:\\SaveHandle.dat"));</tt>
<br><tt>p.writeObject( handle );</tt>
<br><tt>p.close();</tt>
<p>Once the handle has been saved, it can be read back from the file and
object created from it:
<p><tt>ObjectInputStream p = new ObjectInputStream(</tt>
<br><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new FileInputStream(
"C:\\SaveHandle.dat"));</tt>
<br><tt>Handle handle = (Handle) p.readObject();</tt>
<br><tt>StockQuotes stock = (StockQuotes) handle.getEJBObject();</tt>
<br><tt>// Use PortableRemoteObject in 1.3 or when available.</tt>
<p>Note that the object returned by getEJBObject() has to be cast into
the correct type.
<p>An important item to remember about handles is that session beans are
discarded after a certain timeout.&nbsp; Therefore, if you use a session
bean's handle after that certain timeout, you will not get the bean back.&nbsp;
Instead, an exception will be thrown.&nbsp; (The timeout value can usually
be changed, see server documentation for this.)
<p><i>Exercise:</i>&nbsp; Modify your session bean client to save a handle
to the (stateful) StockQuotes bean.&nbsp; Write another program that retrieves
the handle and gets the bean.&nbsp; Confirm that the "stock" member variable
of the bean is the same as when saved.&nbsp; Obtain the price from this
"recovered" bean.&nbsp; Try using your second bean within the timeout period,
and after the timeout period.
<br>&nbsp;</td>
</tr>

<tr>
<td>
<table BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH="100%" >
<tr>
<td><a href="DeploymentDescriptor.jsp">Next tutorial: Deployment Descriptor</a></td>

<td>
<div align=right><font size=-1><a href="Index.html#contents">Contents</a></font></div>
</td>
</tr>
</table>
</td>
</tr>
</table>

</body>
</html>

