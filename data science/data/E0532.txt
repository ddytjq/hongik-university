ID=E0532
URL=http://www.intap.net/~drw/cpp/cpp03_02.htm
SIZE=5829
DATE=12/07/02
TIME=19:21:55
DATASET=C
HTML=
<html>
<head> 
<title>
online C++ tutorial: Variable Types and Declaring Variables
</title>
</head>

<body bgcolor="#ffffff"
       link = "#ff0000"
      alink = "#00ff00"
      vlink = "#660000" >


<table width="100%" border=0>
<tr>
<td align=left>
<a href="cpp03_01.htm"><img border=0 src="pictures/buttons/prevs.gif" width=51 height=34 alt="&lt;&lt;=="></a>
<a href="cpp03_01.htm"><img border=0 src="pictures/buttons/prevp.gif" width=37 height=34 alt="&lt;="></a>
</td>
<td align=center>
<a href="index.htm">
<img border=0 width=122 height=34 src="pictures/buttons/toc.gif"
    alt="[table of contents]"></a>
<a href="/cgi-bin/drw/cpp/search.cgi">
<img border=0 width=46 height=34 src="pictures/buttons/search.gif"
    alt="[search]"></a>
<a href="glossary.htm">
<img border=0 width=61 height=34 src="pictures/buttons/glossary.gif"
    alt="[glossary]"></a>
<a href="feedback.htm">
<img border=0 width=65 height=34 src="pictures/buttons/feedback.gif"
    alt="[feedback]"></a>
</td>
<td align=right>

<a href="cpp03_03.htm"><img border=0 src="pictures/buttons/nextp.gif" width=37 height=34 alt="=&gt;"></a>
<a href="cpp04_01.htm"><img border=0 src="pictures/buttons/nexts.gif" width=51 height=34 alt="==&gt;&gt;"></a>
</td>
</tr>
</table>
<hr>
<table width="100%"><tr><td align=left><img src="pictures/buttons/cppsm.gif" width=143 height=37 alt="[online C++ tutorial]"></td><td align=right><b>Section 3: Variables, Types, and Operators</b></td></tr></table>
<center><h2>Section 3.2: Variable Types and Declaring Variables</h2></center>


<h3>Variable Types</h3>

<p>
A variable <a href="glossary.htm#type">type</a> is a description of
the kind of information a variable will store.  Programming languages
vary regarding how strict they require you to be when declaring a
variable's type.  Some languages, like Perl, do not require you to
announce the type of a variable.  Other languages require you to
declare some variables as numbers and others as text-strings, for
example.  C++, a strongly-typed language, requires you to be even more
specific than that.  Instead of declaring a variable as a number, you
must say whether it will store <a
href="glossary.htm#integer">integers</a> or <a
href="glossary.htm#decimal">decimals</a>.  In C++, the type of an
integer is <code>int</code> and the type of a decimal is
<code>float</code> (floating-point number).
</p>


<h3>Declaring Variables</h3>
<p>
Declaring a variable in C++ is simple.  Let's say you want to
declare a variable of type <code>int</code> called <code>myAge</code>.
That is to say, the variable <code>myAge</code> will store
an integer.  In C++, this is written:
<pre>
int myAge;
</pre>
All this does is tell the computer that you plan to use an
integer, and that the integer's name is <code>myAge</code>.

</p>

<p>
In some languages, variables are initialized to 0 - that is, a
variable's initial value will be 0.  This is not true of C++!
Sometimes your variables will be initialized to 0, but sometimes they
will be initialized with <a href="glossary.htm#garbage">garbage</a>.  As
you might anticipate, this can cause some nasty bugs.  Let's take
a look at another sample program.

<pre>
#include &lt;iostream.h&gt;

int main() {
  int myAge;
  cout &lt;&lt; "My age is " &lt;&lt; myAge &lt;&lt; endl;
  return 0;
}
</pre>

You might expect the program to output "My age is 0".  In fact,
the output of this program is unreliable.  On one system you may
get output of "My age is 11"; another system may output "My age is 0";
yet another system may output "My age is 3145".  That's what it means
to have a variable initialized with garbage.
</p>

<p>
It is always a good idea to initialize your variables with some value.
If you don't know what a variable's initial value should be,
initialize it to 0.  Initializing a variable is easy.  Let's fix
the above program so that it always outputs "My age is 22".  The
first line of the <code>main</code> function initializes <code>myAge</code>
by assigning it a value immediately.

<pre>
#include &lt;iostream.h&gt;

int main() {
  int myAge = 22;
  cout &lt;&lt; "My age is " &lt;&lt; myAge &lt;&lt; endl;
  return 0;
}
</pre>

That's all there is to it!  By the way, the equals sign ("=") is
called an <a href="glossary.htm#operator">operator</a> and will be
covered later in Section 3.


</p>


<!--
mips/sparc

Sizeof short: 2
Sizeof int: 4
Sizeof long: 4
Sizeof float: 4
Sizeof double: 8
Sizeof char: 1



pentium (vc1.5)

Sizeof short: 2      
Sizeof int: 2        
Sizeof long: 4       
Sizeof float: 4      
Sizeof double: 8     
Sizeof char: 1       
-->

<hr>
<table width="100%" border=0>
<tr>
<td align=left>
<a href="cpp03_01.htm"><img border=0 src="pictures/buttons/prevs.gif" width=51 height=34 alt="&lt;&lt;=="></a>
<a href="cpp03_01.htm"><img border=0 src="pictures/buttons/prevp.gif" width=37 height=34 alt="&lt;="></a>
</td>
<td align=center>
<a href="index.htm">
<img border=0 width=122 height=34 src="pictures/buttons/toc.gif"
    alt="[table of contents]"></a>
<a href="/cgi-bin/drw/cpp/search.cgi">
<img border=0 width=46 height=34 src="pictures/buttons/search.gif"
    alt="[search]"></a>
<a href="glossary.htm">
<img border=0 width=61 height=34 src="pictures/buttons/glossary.gif"
    alt="[glossary]"></a>
<a href="feedback.htm">
<img border=0 width=65 height=34 src="pictures/buttons/feedback.gif"
    alt="[feedback]"></a>
</td>
<td align=right>

<a href="cpp03_03.htm"><img border=0 src="pictures/buttons/nextp.gif" width=37 height=34 alt="=&gt;"></a>
<a href="cpp04_01.htm"><img border=0 src="pictures/buttons/nexts.gif" width=51 height=34 alt="==&gt;&gt;"></a>
</td>
</tr>
</table>
</body>
</html>

