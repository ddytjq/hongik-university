ID=E0948
URL=http://www.hh.se/stud/d98rolb/ansi/printf().html
SIZE=2912
DATE=12/07/02
TIME=19:26:02
DATASET=C
HTML=<html>
<head>
  <title>printf()</title>
  <meta name="Generator" content="GuideML V1.6">
  <meta http-equiv="Content-Type" content="text/html">
</head>
<body>
<a href="main.html"><img src="toc.gif" alt="CONTENTS" border=0></a><a href="alphalist.html"><img src="index.gif" alt="INDEX" border=0></a><a href="perror().html"><img src="prev.gif" alt="PREV" border=0></a><a href="pow().html"><img src="next.gif" alt="NEXT" border=0></a><a href="http://www.hh.se/stud/d98rolb/programming.html"><img src="home.gif" alt="HOME" border=0></a>
<hr>
<pre>
printf-Formatted print to stdout

Synopsis

        #include &#060;stdio.h&#062;

        length = printf(fmt,arg1,arg2,...);

        int length;           /* number of characters generated */
        const char *fmt;   /* format string */
        .... argx;            /* arguments */

Description

        This function produces an output stream of ASCII characters and
        sends the output to stdout.  stdout is usually the user's screen
        (console).

        The printf function has a built-in version that is equivalent to
        the standard library version.  The effect of a call to the printf
        function is that the most efficient internal version of the printf
        function is used.

        This function works like the <a href="fprintf().html"> fprintf </a> function.    See the
        description of the <a href="fprintf().html"> fprintf </a> function earlier in this chapter for a
        complete description.


Returns

        This function returns the number of output characters generated.

Example

        /*
         * This example prints a message indicating whether
         * the function argument is positive or negative.
         * In the second printf, the width and precision
         * are 15 and 8, respectively.
         */
        #include &#060;stdio.h&#062;

        void pneg(double value)
        {
            char *sign;

            if (value &#060; 0)
            {
                sign = &quot;negative&quot;;
            }
            else
            {
                sign = &quot;not negative&quot;;
            }

            printf(&quot;The number %E is %s.n&quot;,value,sign);
            printf(&quot;The number %*.*E is %s.n&quot;,15,8,value,sign);
        }

        void main(void)
        {
            pneg(37.8);
            pneg(-18.2);
        }

See Also

        <a href="fprintf().html"> fprintf </a>
</pre>
<hr>
<a href="main.html"><img src="toc.gif" alt="CONTENTS" border=0></a><a href="alphalist.html"><img src="index.gif" alt="INDEX" border=0></a><a href="perror().html"><img src="prev.gif" alt="PREV" border=0></a><a href="pow().html"><img src="next.gif" alt="NEXT" border=0></a><a href="http://www.hh.se/stud/d98rolb/programming.html"><img src="home.gif" alt="HOME" border=0></a>
</body>
</html>

