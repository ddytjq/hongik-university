ID=E0361
URL=http://www.intap.net/~drw/cpp/cpp03_01.htm
SIZE=6888
DATE=12/07/02
TIME=19:20:10
DATASET=C
HTML=
<html>
<head> 
<title>
online C++ tutorial: What is a Variable?
</title>
</head>

<body bgcolor="#ffffff"
       link = "#ff0000"
      alink = "#00ff00"
      vlink = "#660000" >


<table width="100%" border=0>
<tr>
<td align=left>
<a href="cpp02_01.htm"><img border=0 src="pictures/buttons/prevs.gif" width=51 height=34 alt="&lt;&lt;=="></a>
<a href="cpp02_03.htm"><img border=0 src="pictures/buttons/prevp.gif" width=37 height=34 alt="&lt;="></a>
</td>
<td align=center>
<a href="index.htm">
<img border=0 width=122 height=34 src="pictures/buttons/toc.gif"
    alt="[table of contents]"></a>
<a href="/cgi-bin/drw/cpp/search.cgi">
<img border=0 width=46 height=34 src="pictures/buttons/search.gif"
    alt="[search]"></a>
<a href="glossary.htm">
<img border=0 width=61 height=34 src="pictures/buttons/glossary.gif"
    alt="[glossary]"></a>
<a href="feedback.htm">
<img border=0 width=65 height=34 src="pictures/buttons/feedback.gif"
    alt="[feedback]"></a>
</td>
<td align=right>

<a href="cpp03_02.htm"><img border=0 src="pictures/buttons/nextp.gif" width=37 height=34 alt="=&gt;"></a>
<a href="cpp04_01.htm"><img border=0 src="pictures/buttons/nexts.gif" width=51 height=34 alt="==&gt;&gt;"></a>
</td>
</tr>
</table>
<hr>
<table width="100%"><tr><td align=left><img src="pictures/buttons/cppsm.gif" width=143 height=37 alt="[online C++ tutorial]"></td><td align=right><b>Section 3: Variables, Types, and Operators</b></td></tr></table>
<center><h2>Section 3.1: What is a Variable?</h2></center>

<p>
A <a href="glossary.htm#variable">variable</a> is a place to store a
piece of information.  Just as you might store a friend's phone number
in your own memory, you can store this information in a computer's
memory.  Variables are your way of accessing your computer's memory.
</p>

<p>
Of course, your memory changes over time.  Your friend moves across
country and has a new phone number, and your friend's new phone number
will replace the old one in your memory.  Over time, as you acquire
new friends, your memory will keep changing to store different pieces
of information.  Likewise, a computer's memory can change over time,
if you tell it to.  Since variables are your access point to your
computer's memory, it makes sense that you'd be able to change the
information in a computer's memory; otherwise, they wouldn't be called
<i>variables</i> (they'd be called statics).
</p>

<p>
Why should you care about variables?  Variables are the essence of any
computer program!  Without variables, computers would be useless.
Imagine a program which asks the user for two numbers and adds them
together, and prints the result.

<pre>
# AddTwoNumbers
Enter the first number: <b>2</b>
Enter the second number: <b>5</b>
The sum of 2 and 5 is 7.
# 
</pre>

Sounds simple, right?  But let's do a little role-playing to see what
the computer has to do to <a href="glossary.htm#execute">execute</a>
this program.  Instead of this interaction between a person and a
computer, let's imagine the same kind of conversation between two
people, Sol and Frank.

<blockquote>
<b>Sol:</b> Hey Frank, I just learned how to add two numbers together.<br>
<b>Frank:</b> Cool!<br>
<b>Sol:</b> Give me the first number.<br>
<b>Frank:</b> 2.<br>
<b>Sol:</b> Ok, and give me the second number.<br>
<b>Frank:</b> 5.<br>
<b>Sol:</b> Ok, here's the answer: 2 + 5 = 7.<br>
<b>Frank:</b> Sheesh!  This guy is unbelievable!<br>
</blockquote>

After Frank says "2", Sol has to store that number in his memory
somewhere.  It may be stored in short-term memory, but he has to
store it somewhere before Frank gives him the second number.  Even if
Frank were to give him two numbers in the same sentence, Sol would
have to store the numbers somewhere in his memory to add them
together.
</p>

<p>
In the sample program described above, the computer would most likely
store "2" in a variable, then store "5" in a variable, and then
calculate the sum by calculating the sum of the numbers store in the
two variables.
</p>

<p>
Although there are similarities between a person's memory and a
computer's memory, there are some pretty big differences.  In C++, you
need to grab a little piece of the computer's memory before you can
use it.  In other words, you have to tell the computer that you're
planning to store a number in a variable before you can actually do
it.  This is called <b>declaring</b> a variable.  To declare a
variable, you need to know what kind of information it will store
(i.e., will it store a number, or a text-string, or something else)
and how you plan to refer to the variable (i.e., the variable's name).
C++ imposes fairly strict rules on how you can name your variables:
<ul>
<li>variable names must begin with a letter</li>
<li>variable names are "case-sensitive" (i.e., the variable "myNumber" is different from the variable "MYNUMBER" which is different from the variable "mYnUmBeR")</li>
<li>variable names can't have spaces</li>
<li>variable names can't have special characters (typographic symbols)</li>
</ul>

What <i>can</i> you name your variables?  In general, variable names
can be composed of letters, numbers, and underscores (<b>_</b>).
However, C++ reserves certain <a
href="glossary.htm#keyword">keywords</a> which have special meaning to
the language, and you are not allowed to use any of these keywords as
variables names.  Some examples of C++ keywords are <code>int</code>,
<code>for</code>, <code>else</code>, and <code>class</code>.  You can,
however, use keywords in the middle of a variable name, such as
"foreign" or "classical".  For a complete list of C++ keywords, please
see <a href="cppab_03.htm">Appendix B</a>.

</p>
<hr>
<table width="100%" border=0>
<tr>
<td align=left>
<a href="cpp02_01.htm"><img border=0 src="pictures/buttons/prevs.gif" width=51 height=34 alt="&lt;&lt;=="></a>
<a href="cpp02_03.htm"><img border=0 src="pictures/buttons/prevp.gif" width=37 height=34 alt="&lt;="></a>
</td>
<td align=center>
<a href="index.htm">
<img border=0 width=122 height=34 src="pictures/buttons/toc.gif"
    alt="[table of contents]"></a>
<a href="/cgi-bin/drw/cpp/search.cgi">
<img border=0 width=46 height=34 src="pictures/buttons/search.gif"
    alt="[search]"></a>
<a href="glossary.htm">
<img border=0 width=61 height=34 src="pictures/buttons/glossary.gif"
    alt="[glossary]"></a>
<a href="feedback.htm">
<img border=0 width=65 height=34 src="pictures/buttons/feedback.gif"
    alt="[feedback]"></a>
</td>
<td align=right>

<a href="cpp03_02.htm"><img border=0 src="pictures/buttons/nextp.gif" width=37 height=34 alt="=&gt;"></a>
<a href="cpp04_01.htm"><img border=0 src="pictures/buttons/nexts.gif" width=51 height=34 alt="==&gt;&gt;"></a>
</td>
</tr>
</table>
</body>
</html>

