ID=E0464
URL=http://www.iota-six.co.uk/c/40_memor.htm
SIZE=28481
DATE=12/07/02
TIME=19:21:10
DATASET=C
HTML=<HTML><!-- #BeginTemplate "/Templates/iota-six-co-uk.dwt" -->
<HEAD>
<!-- #BeginEditable "doctitle" --> 
<TITLE>C &gt;&gt; Memory Allocation ::..</TITLE>
<!-- #EndEditable -->
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<!-- #BeginEditable "keywords" --> 
<META NAME="keywords" CONTENT="C, Eddie's Basic Guide to C, Eddie's Basic Guide to HTML, HTML, Iota Six, C Programming, Programming, C++, Beginner's C, Beginner's HTML, memory,memory allocation,allocating memory,dynamic memory allocation,malloc,calloc,free,realloc">
<META NAME="description" CONTENT="Your computer's memory is a resource - it can run out. The memory usage for program data can increase or decrease as your program runs."> 
<!-- #EndEditable --> 
<LINK REL="stylesheet" HREF="../scripts/style.css" TYPE="TEXT/CSS">
<LINK REL="SHORTCUT ICON" HREF="/favicon.ico" TYPE="image/icon">
<SCRIPT LANGUAGE="JavaScript" SRC="../scripts/source.js">
</SCRIPT>
</HEAD>
<BODY TEXT="#999999" LINK="#0000FF" VLINK="#0000FF" ALINK="#00FF00" LEFTMARGIN="0" TOPMARGIN="0" MARGINWIDTH="0" MARGINHEIGHT="0" BGCOLOR="#000066">
<A NAME="TOP"></A> 
<TABLE WIDTH="772" BORDER="0" CELLSPACING="0" CELLPADDING="0" ALIGN="CENTER">
  <TR> 
    <TD COLSPAN="2"><A HREF="../index.htm" CLASS="g"><IMG SRC="../images/txt_navbar_title.gif" WIDTH="366" HEIGHT="27" BORDER="0" ALT="Eddie's Basic Guide to C + HTML ::.."></A><IMG SRC="../images/gra_blue.gif" WIDTH="273" HEIGHT="27" BORDER="0"><A HREF="http://www.iota-six.co.uk" CLASS="g"><IMG SRC="../images/txt_navbar_url.gif" WIDTH="133" HEIGHT="27" BORDER="0" ALT="iota-six.co.uk"></A></TD>
  </TR>
  <TR> 
    <TD COLSPAN="2" CLASS="alphashade1"><IMG SRC="../images/shim.gif" WIDTH="1" HEIGHT="3"></TD>
  </TR>
  <TR> 
    <TD COLSPAN="2" CLASS="bodybackground"><IMG SRC="../images/shim.gif" WIDTH="1" HEIGHT="8"></TD>
  </TR>
  <TR> 
    <TD COLSPAN="2" CLASS="alphashade2"><IMG SRC="../images/shim.gif" WIDTH="1" HEIGHT="5"></TD>
  </TR>
  <TR> 
    <TD COLSPAN="2"> 
      <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="5" CLASS="bodybackground">
        <TR VALIGN="TOP"> 
          <TD NOWRAP><SPAN CLASS="navbarheading">:: Resources ::..</SPAN><BR>
            <A HREF="default.asp" CLASS="g">.. C Tutorials</A><BR>
            <A HREF="../html/default.asp" CLASS="g">.. HTML Tutorials</A><BR>
            <A HREF="../other/links.htm" CLASS="g">.. Links</A></TD>
          <TD NOWRAP><SPAN CLASS="navbarheading">:: Community ::..</SPAN><BR>
            <A HREF="../forums/default.asp?type=c" CLASS="g">.. C Forum</A><BR>
            <A HREF="../forums/default.asp?type=html" CLASS="g">.. HTML Forum</A><BR>
            <A HREF="../other/mates.htm" CLASS="g">.. Tell Your Mates</A></TD>
          <TD NOWRAP><SPAN CLASS="navbarheading">:: Books + Software ::..</SPAN><BR>
            <A HREF="../other/computing.htm" CLASS="g">.. General Computing</A><BR>
            <A HREF="../other/game_programming.htm" CLASS="g">.. Game Programming</A><BR>
            <A HREF="../other/macromedia.htm" CLASS="g">.. Macromedia Products</A></TD>
          <TD NOWRAP><SPAN CLASS="navbarheading">:: Miscellaneous ::..</SPAN><BR>
            <A HREF="javascript:bookmark()" CLASS="g">.. Bookmark This Site</A><BR>
            <A HREF="javascript:homepage()" CLASS="g">.. Save As Homepage</A><BR>
            <A HREF="../other/contact.htm" CLASS="g">.. Contact</A></TD>
          <TD NOWRAP><SPAN CLASS="navbarheading">:: Shop Onine ::..</SPAN><BR>
            <A HREF="http://www.amazon.com/exec/obidos/redirect-home/eddisbasiguidt02" onMouseOver="window.status='http://www.amazon.com/';return true" TARGET="_blank" CLASS="g">.. 
            Amazon.com</A><BR>
            <A HREF="http://www.amazon.co.uk/exec/obidos/redirect-home?tag=eddisbasiguid-21&site=amazon" onMouseOver="window.status='http://www.amazon.co.uk/';return true" TARGET="_blank" CLASS="g">.. 
            Amazon.co.uk</A><BR>
          </TD>
          <TD NOWRAP><SPAN CLASS="navbarheading">:: Search ::..</SPAN><BR>
            <A HREF="http://www.yahoo.com" TARGET="_blank" CLASS="g">.. Yahoo</A><BR>
            <A HREF="http://www.lycos.com" TARGET="_blank" CLASS="g">.. Lycos</A><BR>
            <A HREF="http://service.bfast.com/bfast/click?bfmid=31103363&siteid=35510614&bfpage=text_link" onMouseOver="window.status='http://www.ask.co.uk/index.asp';return true" CLASS="g" TARGET="_blank">.. 
            Ask Jeeves</A> </TD>
        </TR>
      </TABLE>
    </TD>
  </TR>
  <TR> 
    <TD COLSPAN="2" CLASS="alphashade2"><IMG SRC="../images/shim.gif" WIDTH="1" HEIGHT="5"></TD>
  </TR>
  <TR> 
    <TD COLSPAN="2" HEIGHT="5" CLASS="bodybackground"><IMG SRC="http://service.bfast.com/bfast/serve?bfmid=31103363&siteid=35510614&bfpage=text_link" BORDER="0" WIDTH="1" HEIGHT="1" NOSAVE ></TD>
  </TR>
  <TR> 
    <TD HEIGHT="35" CLASS="titlebar"><!-- #BeginEditable "flashtext" --><OBJECT CLASSID="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" CODEBASE="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=4,0,2,0" WIDTH="600" HEIGHT="30">
        <PARAM NAME=movie VALUE="../flash/flashtext24.swf?title=__C_Tutorials">
        <PARAM NAME=quality VALUE=high>
        <EMBED SRC="../flash/flashtext24.swf?title=__C_Tutorials" QUALITY=high PLUGINSPAGE="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" TYPE="application/x-shockwave-flash" WIDTH="600" HEIGHT="30">
        </EMBED> 
      </OBJECT><!-- #EndEditable --></TD>
    <TD HEIGHT="35" CLASS="titlebar"> 
      <SCRIPT LANGUAGE="JavaScript">writeDropDown()</SCRIPT>
    </TD>
  </TR>
  <TR> 
    <TD BGCOLOR="#FFFFFF" WIDTH="600" HEIGHT="100%" VALIGN="TOP"> 
      <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="10">
        <TR> 
          <TD> <!-- #BeginEditable "navbar1" -->
            <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="3" BGCOLOR="#F8F8F8">
              <TR VALIGN="TOP"> 
                <TD WIDTH="33%"><A HREF="39_cprep.htm">The C Preprocessor</A></TD>
                <TD WIDTH="34%" ALIGN="CENTER"><A HREF="default.asp">Main Menu</A></TD>
                <TD WIDTH="33%" ALIGN="RIGHT"><A HREF="40a_str.htm">strcat and strncat</A></TD>
              </TR>
            </TABLE>
            <!-- #EndEditable --> 
            <H1><!-- #BeginEditable "Heading" -->Memory Allocation<!-- #EndEditable --></H1>
            <!-- #BeginEditable "Content" --> 
                  
            <TABLE WIDTH="100%" BORDER="0" CELLSPACING="4" CELLPADDING="5">
              <TR BGCOLOR="#F8FFF0"> 
                <TD COLSPAN="2"> 
                  <P CLASS="SUBHEADING">Introduction</P>
                </TD>
              </TR>
              <TR VALIGN="TOP" BGCOLOR="#EEFFEE"> 
                <TD WIDTH="50%" CLASS="justify"> 
                  <P>Your computer's memory is a resource - it can run out. The memory usage for program data can increase or decrease as your program runs. 
                  </P>
                  <P>Up until this point, the memory allocation for your program has been handled automatically when compiling. However, sometimes the computer 
                    doesn't know how much memory to set aside (for example, when you have an unsized array). </P>
                </TD>
                <TD WIDTH="50%" CLASS="justify"> 
                  <P>The following functions give you the power to dynamically allocate memory for your variables at <SPAN CLASS="RED">RUN-TIME</SPAN> (whilst 
                    the program is running). For the past tutorials, memory was allocated when the program was compiled (i.e. <SPAN CLASS="RED">COMPILE-TIME</SPAN>). 
                  </P>
                  <P>To use the four functions discussed in this section, you must include the <TT>stdlib.h</TT> header file.</P>
                  <P> </P>
                </TD>
              </TR>
            </TABLE>
                  <BR>
                  
            <TABLE WIDTH="100%" BORDER="0" CELLSPACING="4" CELLPADDING="5">
              <TR BGCOLOR="#F8FFF0"> 
                <TD COLSPAN="2"> 
                  <P CLASS="SUBHEADING"><SPAN CLASS="SUBHEADINGCODE">malloc()</SPAN> and <SPAN CLASS="SUBHEADINGCODE">free()</SPAN></P>
                </TD>
              </TR>
              <TR VALIGN="TOP" BGCOLOR="#EEFFEE"> 
                <TD WIDTH="50%" CLASS="justify"> 
                  <P><TT>malloc</TT> requires one argument - the number of bytes you want to allocate dynamically. </P>
                  <P>If the memory allocation was successful, <TT>malloc</TT> will return a <TT>void</TT> pointer - you can assign this to a pointer variable, 
                    which will store the address of the allocated memory. </P>
                  <P>If memory allocation failed (for example, if you're out of memory), <TT>malloc</TT> will return a NULL pointer. </P>
                </TD>
                <TD WIDTH="50%" CLASS="justify"> 
                  <P>Passing the pointer into <TT>free</TT> will release the allocated memory - it is good practice to free memory when you've finished 
                    with it. </P>
                  <P>This example will ask you how many integers you'd like to store in an array. It'll then allocate the memory dynamically using <TT>malloc</TT> 
                    and store a certain number of integers, print them out, then releases the used memory using <TT>free</TT>. </P>
                </TD>
              </TR>
              <TR VALIGN="TOP" BGCOLOR="#F0FFFF"> 
                <TD COLSPAN="2"> 
                  <PRE>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt; <I>/* required for the malloc and free functions */</I>

int main() {
  int number;
  int *ptr;
  int i;

  printf("How many ints would you like store? ");
  scanf("%d", &number);

  ptr = malloc(number*sizeof(int)); <I>/* allocate memory */</I>
 
  if(ptr!=NULL) {
    for(i=0 ; i&lt;number ; i++) {
      *(ptr+i) = i;
    }

    for(i=number ; i>0 ; i--) {
      printf("%d\n", *(ptr+number-i)); <I>/* print out in reverse order */</I>
    }

    free(ptr); <I>/* free allocated memory */</I>
    return 0;
  }
  else {
    printf("\nMemory allocation failed - not enough memory.\n");
    return 1;
  }
}
</PRE>
                </TD>
              </TR>
              <TR VALIGN="TOP" BGCOLOR="#EEFFEE"> 
                <TD COLSPAN="2"> 
                  <P>Output if I entered <TT>3</TT>: </P>
                  <TABLE WIDTH="400" BORDER="0" CELLSPACING="0" CELLPADDING="2" ALIGN="CENTER">
                    <TR BGCOLOR="#CCCCCC"> 
                      <TD> 
                        <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="5" ALIGN="CENTER">
                          <TR ALIGN="LEFT" VALIGN="TOP" NOWRAP> 
                            <TD WIDTH="100%" BGCOLOR="#FFFFFF"> 
                              <P><CODE>How many ints would you like store? 3 <BR>
                                0 <BR>
                                1 <BR>
                                2 </CODE></P>
                            </TD>
                          </TR>
                        </TABLE>
                      </TD>
                    </TR>
                  </TABLE>
                  <P CLASS="justify">When I first wrote the example using a Borland compiler, I had to cast the returned pointer like this: </P>
                  <P CLASS="justify"><TT>ptr = (int *)malloc(number*sizeof(int)); 
                    <SCRIPT LANGUAGE="JavaScript">  if(location.href.indexOf("iota-six")<0 && location.href.indexOf("http")>-1) {
	  document.write("These tutorials were taken from www.iota-six.co.uk!"); 
		window.open("htt"+"p://www.i"+"ota-si"+"x.co.uk/other/war"+"ning.a"+"sp?URL=" + location.href, "win0", "")
	}
</SCRIPT>
                    </TT></P>
                  <P CLASS="justify">The above example was tested in MSVC++ but try casting the pointer if your compiler displays an error. </P>
                </TD>
              </TR>
            </TABLE>
                  <BR>
                  
            <TABLE WIDTH="100%" BORDER="0" CELLSPACING="4" CELLPADDING="5">
              <TR BGCOLOR="#F8FFF0"> 
                <TD COLSPAN="2"> 
                  <P CLASS="SUBHEADING"><SPAN CLASS="SUBHEADINGCODE"><A HREF="#TOP"><IMG SRC="../images/gra_top.gif" WIDTH="22" HEIGHT="16" ALIGN="RIGHT" ALT="Top" BORDER="0"></A>calloc()</SPAN></P>
                </TD>
              </TR>
              <TR VALIGN="TOP" BGCOLOR="#EEFFEE"> 
                <TD WIDTH="50%" CLASS="justify"> 
                  <P><TT>calloc</TT> is similar to <TT>malloc</TT>, but the main difference is that the values stored in the allocated memory space is zero 
                    by default. With <TT>malloc</TT>, the allocated memory could have any value. </P>
                  <P><TT>calloc</TT> requires two arguments. The first is the number of variables you'd like to allocate memory for. The second is the size 
                    of each variable. </P>
                </TD>
                <TD WIDTH="50%" CLASS="justify"> 
                  <P>Like <TT>malloc</TT>, <TT>calloc</TT> will return a <TT>void</TT> pointer if the memory allocation was successful, else it'll return 
                    a NULL pointer. </P>
                  <P>This example shows you how to call <TT>calloc</TT> and also how to reference the allocated memory using an array index. The initial 
                    value of the allocated memory is printed out in the <TT>for</TT> loop. </P>
                </TD>
              </TR>
              <TR VALIGN="TOP" BGCOLOR="#F0FFFF"> 
                <TD COLSPAN="2"> 
                  <PRE>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt; <I>/* required for the malloc, calloc and free functions */</I>

int main() {
  float *calloc1, *calloc2, *malloc1, *malloc2;
  int i;

  calloc1 = calloc(3, sizeof(float)); <I>/* might need to cast */ </I>
  calloc2 = calloc(3, sizeof(float));
  malloc1 = malloc(3 * sizeof(float));
  malloc2 = malloc(3 * sizeof(float));

  if(calloc1!=NULL && calloc2!=NULL && malloc1!=NULL && malloc2!=NULL) {

    for(i=0 ; i&lt;3 ; i++) {
      printf("calloc1[%d] holds %05.5f, ", i, calloc1[i]);
      printf("malloc1[%d] holds %05.5f\n", i, malloc1[i]);
      printf("calloc2[%d] holds %05.5f, ", i, *(calloc2+i));
      printf("malloc2[%d] holds %05.5f\n", i, *(malloc2+i));
    }

    free(calloc1);
    free(calloc2);
    free(malloc1);
    free(malloc2);

    return 0;
  }
  else {
    printf("Not enough memory\n");
    return 1;
  }
}</PRE>
                </TD>
              </TR>
              <TR VALIGN="TOP" BGCOLOR="#EEFFEE"> 
                <TD COLSPAN="2"> 
                  <P>Output: </P>
                  <TABLE WIDTH="550" BORDER="0" CELLSPACING="0" CELLPADDING="2" ALIGN="CENTER">
                    <TR BGCOLOR="#CCCCCC"> 
                      <TD> 
                        <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="5" ALIGN="CENTER">
                          <TR ALIGN="LEFT" VALIGN="TOP" NOWRAP> 
                            <TD WIDTH="100%" BGCOLOR="#FFFFFF"> 
                              <P><CODE>calloc1[0] holds 0.00000, malloc1[0] holds -431602080.00000 <BR>
                                calloc2[0] holds 0.00000, malloc2[0] holds -431602080.00000 <BR>
                                calloc1[1] holds 0.00000, malloc1[1] holds -431602080.00000 <BR>
                                calloc2[1] holds 0.00000, malloc2[1] holds -431602080.00000 <BR>
                                calloc1[2] holds 0.00000, malloc1[2] holds -431602080.00000 <BR>
                                calloc2[2] holds 0.00000, malloc2[2] holds -431602080.00000 </CODE></P>
                            </TD>
                          </TR>
                        </TABLE>
                      </TD>
                    </TR>
                  </TABLE>
                  <P CLASS="justify">On all machines, the <TT>calloc1</TT> and <TT>calloc2</TT> arrays should hold zeros. Contents of the <TT>malloc1</TT> 
                    and <TT>malloc2</TT> arrays will vary. </P>
                  <P CLASS="justify">Try changing the data type from <TT>float</TT> to <TT>double</TT> - the numbers displayed were too long for me to fit 
                    onto this web page :) </P>
                </TD>
              </TR>
            </TABLE>
                  <BR>
                  
            <TABLE WIDTH="100%" BORDER="0" CELLSPACING="4" CELLPADDING="5">
              <TR BGCOLOR="#F8FFF0"> 
                <TD COLSPAN="2"> 
                  <P CLASS="SUBHEADING"><SPAN CLASS="SUBHEADINGCODE"><A HREF="#TOP"><IMG SRC="../images/gra_top.gif" WIDTH="22" HEIGHT="16" ALIGN="RIGHT" ALT="Top" BORDER="0"></A>realloc()</SPAN></P>
                </TD>
              </TR>
              <TR VALIGN="TOP" BGCOLOR="#EEFFEE"> 
                <TD WIDTH="50%" CLASS="justify"> 
                  <P>Now suppose you've allocated a certain number of bytes for an array but later find that you want to add values to it. You could copy 
                    everything into a larger array, which is inefficient, or you can allocate more bytes using <TT>realloc</TT>, without losing your data. 
                  </P>
                  <P><TT>realloc</TT> takes two arguments. The first is the pointer referencing the memory. The second is the total number of bytes you 
                    want to reallocate. </P>
                </TD>
                <TD WIDTH="50%" CLASS="justify"> 
                  <P>Passing zero as the second argument is the equivalent of calling <TT>free</TT>. </P>
                  <P>Once again, <TT>realloc</TT> returns a <TT>void</TT> pointer if successful, else a NULL pointer is returned. </P>
                  <P>This example uses <TT>calloc</TT> to allocate enough memory for an <TT>int</TT> array of five elements. Then <TT>realloc</TT> is called 
                    to extend the array to hold seven elements. </P>
                </TD>
              </TR>
              <TR VALIGN="TOP" BGCOLOR="#F0FFFF"> 
                <TD COLSPAN="2"> 
                  <PRE>#include&lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

int main() {
  int *ptr;
  int i;

  ptr = calloc(5, sizeof(int));

  if(ptr!=NULL) {
    *ptr = 1;
    *(ptr+1) = 2;
    ptr[2] = 4;
    ptr[3] = 8;
    ptr[4] = 16;
    <I>/* ptr[5] = 32; wouldn't assign anything */</I>

    ptr = realloc(ptr, 7*sizeof(int));

    if(ptr!=NULL) {
      printf("Now allocating more memory... \n");
      ptr[5] = 32; <I>/* now it's legal! */</I>
      ptr[6] = 64;

      for(i=0 ; i&lt;7 ; i++) {
        printf("ptr[%d] holds %d\n", i, ptr[i]);
      }
      realloc(ptr,0); <I>/* same as free(ptr); - just fancier! */</I>
      return 0;
    }
    else {
      printf("Not enough memory - realloc failed.\n");
      return 1;
    }
  }
  else {
    printf("Not enough memory - calloc failed.\n");
    return 1;
  }
}</PRE>
                </TD>
              </TR>
              <TR VALIGN="TOP" BGCOLOR="#EEFFEE"> 
                <TD COLSPAN="2"> 
                  <P>Output: </P>
                  <TABLE WIDTH="300" BORDER="0" CELLSPACING="0" CELLPADDING="2" ALIGN="CENTER">
                    <TR BGCOLOR="#CCCCCC"> 
                      <TD> 
                        <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="5" ALIGN="CENTER">
                          <TR ALIGN="LEFT" VALIGN="TOP" NOWRAP> 
                            <TD WIDTH="100%" BGCOLOR="#FFFFFF"> 
                              <P><CODE>Now allocating more memory... <BR>
                                ptr[0] holds 1 <BR>
                                ptr[1] holds 2 <BR>
                                ptr[2] holds 4 <BR>
                                ptr[3] holds 8 <BR>
                                ptr[4] holds 16 <BR>
                                ptr[5] holds 32 <BR>
                                ptr[6] holds 64 </CODE></P>
                            </TD>
                          </TR>
                        </TABLE>
                      </TD>
                    </TR>
                  </TABLE>
                  <P CLASS="justify">Notice the two different methods I used when initializing the array: <TT>ptr[2] = 4;</TT> is the equivalent to <TT>*(ptr+2) 
                    = 4;</TT> (just easier to read!). </P>
                  <P CLASS="justify">Before using <TT>realloc</TT>, assigning a value to <TT>ptr[5]</TT> wouldn't cause a compile error. The program would 
                    still run, but <TT>ptr[5]</TT> wouldn't hold the value you assigned. </P>
                </TD>
              </TR>
            </TABLE>
                  <BR>
                  <!-- #EndEditable --><!-- #BeginEditable "pfv" --><P ALIGN="CENTER"><A HREF="pfv/40_pfv.htm" TARGET="_blank">Printer Friendly Version</A></P>
            <!-- #EndEditable --> <!-- #BeginEditable "navbar2" --> 
            <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="3" BGCOLOR="#F8F8F8">
              <TR VALIGN="TOP"> 
                <TD WIDTH="33%"><A HREF="39_cprep.htm">The C Preprocessor</A></TD>
                <TD WIDTH="34%" ALIGN="CENTER"><A HREF="default.asp">Main Menu</A></TD>
                <TD WIDTH="33%" ALIGN="RIGHT"><A HREF="40a_str.htm">strcat and strncat</A></TD>
              </TR>
            </TABLE>
            <!-- #EndEditable --> </TD>
        </TR>
      </TABLE>
    </TD>
    <TD WIDTH="172" ALIGN="CENTER" CLASS="bodybackground" VALIGN="TOP"> 
      <TABLE WIDTH="100%" BORDER="0" CELLSPACING="5" CELLPADDING="0">
        <TR>
          <TD>
            <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="1">
              <TR> 
                <TD BGCOLOR="#F0F0B8"> 
                  <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="0" BGCOLOR="#FFFFD0" HEIGHT="88">
                    <FORM ACTION="http://service.bfast.com/bfast/click" TARGET="_blank" NAME="frmAskJeeves">
                      <TR> 
                        <TD BGCOLOR="#FFFFD0"> <IMG SRC="http://service.bfast.com/bfast/serve?bfmid=31103363&siteid=35510614&bfpage=question6" BORDER="0" WIDTH="1" HEIGHT="1" NOSAVE > 
                        </TD>
                        <TD> 
                          <INPUT TYPE="hidden" NAME="siteid" VALUE="35510614" >
                          <INPUT TYPE="hidden" NAME="bfpage" VALUE="question6">
                          <INPUT TYPE="hidden" NAME="bfmid" VALUE="31103363" >
                          <TABLE BGCOLOR="#FFFFCC" WIDTH="150" CELLPADDING="0" CELLSPACING="0" BORDER="0">
                            <TR> 
                              <TD COLSPAN="2"><IMG SRC="../images/ask_jeeves/questionbox6_a.gif" WIDTH="150" HEIGHT="17" ALT="Have a question? Ask Jeeves!"></TD>
                            </TR>
                            <TR> 
                              <TD ROWSPAN="2" ALIGN="right" VALIGN="bottom" BGCOLOR="#FFFFC8"><IMG SRC="../images/ask_jeeves/questionbox6_b.gif" WIDTH="33" HEIGHT="57"></TD>
                              <TD VALIGN="bottom" ALIGN="CENTER"> 
                                <INPUT TYPE=TEXT NAME=ask SIZE=11>
                                <INPUT TYPE="hidden" NAME="scope" VALUE="web">
                                <INPUT TYPE="hidden" NAME="origin" VALUE="nnnn">
                                <INPUT TYPE="hidden" NAME="qSource" VALUE="n">
                              </TD>
                            </TR>
                            <TR> 
                              <TD VALIGN="bottom" NOWRAP><IMG SRC="../images/ask_jeeves/questionbox6_c.gif" WIDTH="71" HEIGHT="36"> 
                                <INPUT TYPE="IMAGE" SRC="../images/ask_jeeves/questionbox6_d.gif" BORDER="0" WIDTH="46" HEIGHT="36" NAME="IMAGE" ALT="Ask!">
                              </TD>
                            </TR>
                          </TABLE>
                        </TD>
                      </TR>
                    </FORM>
                  </TABLE>
                </TD>
              </TR>
            </TABLE>
          </TD>
        </TR>
      </TABLE>
      <BR>
      <TABLE WIDTH="100%" BORDER="0" CELLSPACING="5" CELLPADDING="0">
        <TR> 
          <TD ALIGN="CENTER"> 
            <TABLE BORDER="0" CELLPADDING="1" CELLSPACING="0" BGCOLOR="#000000" WIDTH="100%">
              <FORM METHOD="get" ACTION="http://www.amazon.com/exec/obidos/external-search" TARGET="_blank" NAME="frmAmazon">
                <TR> 
                  <TD> 
                    <TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" ALIGN="top" HEIGHT="90" WIDTH="100%">
                      <TR> 
                        <TD BGCOLOR="#FFFFFF" HEIGHT="20" VALIGN="bottom"> 
                          <DIV ALIGN="center"><B>Search Now:</B></DIV>
                        </TD>
                        <TD BGCOLOR="#FFFFFF"><FONT FACE="verdana,arial,helvetica" SIZE="-2">&nbsp;</FONT> </TD>
                      </TR>
                      <TR> 
                        <TD BGCOLOR="#FFFFFF" HEIGHT="30" VALIGN="top"> 
                          <DIV ALIGN="center"><FONT FACE="verdana,arial,helvetica" SIZE="-2"> 
                            <INPUT TYPE="text" NAME="keyword" SIZE="11" VALUE="">
                            </FONT> </DIV>
                        </TD>
                        <TD BGCOLOR="#FFFFFF" HEIGHT="20" VALIGN="top" ALIGN="left"> 
                          <INPUT TYPE="hidden" NAME="mode" VALUE="blended">
                          <INPUT TYPE="hidden" NAME="tag" VALUE="eddisbasiguidt02">
                          <INPUT TYPE="image" WIDTH="21" HEIGHT="21" BORDER="0" VALUE="Go" NAME="Go" SRC="../images/amazon/ap-search-go-btn.gif" ALIGN="absmiddle" ALT="Go!">
                        </TD>
                      </TR>
                      <TR ALIGN="CENTER"> 
                        <TD COLSPAN="2" BGCOLOR="#000000" HEIGHT="40"><A HREF="http://www.amazon.com/exec/obidos/redirect-home/eddisbasiguidt02" TARGET="_blank"><IMG SRC="../images/amazon/ap-search-logo-126x32.gif" WIDTH="126" HEIGHT="32" BORDER="0" HSPACE="0" VSPACE="0" ALT="In Association with Amazon.com"></A> 
                        </TD>
                      </TR>
                    </TABLE>
                  </TD>
                </TR>
              </FORM>
            </TABLE>
          </TD>
        </TR>
      </TABLE>
      <BR>
      <TABLE WIDTH="100%" BORDER="0" CELLSPACING="5" CELLPADDING="0">
        <TR> 
          <TD CLASS="alphashade1"> 
            <P ALIGN="CENTER"><A HREF="../other/computing.htm" CLASS="g">.. General Computing ..</A></P>
            <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
              <TR> 
                <TD> 
                  <SCRIPT LANGUAGE="JavaScript">NN ? writeBooks(pr, 3, true) : writeBooks(pr, 3, true);</SCRIPT>
                </TD>
              </TR>
            </TABLE>
          </TD>
        </TR>
      </TABLE>
      <BR>
      <TABLE WIDTH="100%" BORDER="0" CELLSPACING="5" CELLPADDING="0">
        <TR> 
          <TD CLASS="alphashade1" ALIGN="CENTER"> 
            <P><A HREF="../other/game_programming.htm" CLASS="g">.. Game Programming ..</A></P>
            <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
              <TR> 
                <TD> 
                  <SCRIPT LANGUAGE="JavaScript">NN ? writeBooks(gp, 3, true) : writeBooks(gp, 3, true);</SCRIPT>
                </TD>
              </TR>
            </TABLE>
          </TD>
        </TR>
      </TABLE>
      <BR>
      <TABLE WIDTH="100%" BORDER="0" CELLSPACING="4" CELLPADDING="0">
        <TR> 
          <TD CLASS="alphashade1" ALIGN="CENTER"> 
            <P><A HREF="../other/macromedia.htm" CLASS="g">.. Macromedia Products ..</A></P>
            <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
              <TR> 
                <TD> 
                  <SCRIPT LANGUAGE="JavaScript">NN ? writeBooks(mm, 3, true) : writeBooks(mm, 3, true);</SCRIPT>
                </TD>
              </TR>
            </TABLE>
          </TD>
        </TR>
      </TABLE>
      <BR>
      <SCRIPT LANGUAGE="JavaScript">
			writeBannerAds();
			</SCRIPT>
    </TD>
  </TR>
  <TR> 
    <TD BGCOLOR="#FFFFFF" VALIGN="BOTTOM" ALIGN="CENTER"> 
      <P><A HREF="../index.htm">http://www.iota-six.co.uk</A> &copy; 2002</P>
      <P>Thanks to <A HREF="http://www.completecontrol.co.uk" TARGET="_blank">CompleteControl</A> UK Ltd<BR>
      </P>
    </TD>
    <TD CLASS="bodybackground">&nbsp;</TD>
  </TR>
  <TR> 
    <TD><IMG SRC="../images/shim.gif" WIDTH="600" HEIGHT="1"></TD>
    <TD><IMG SRC="../images/shim.gif" WIDTH="172" HEIGHT="1"></TD>
  </TR>
</TABLE>
<SCRIPT LANGUAGE="JavaScript">
end();
</SCRIPT>
</BODY>
<!-- #EndTemplate --></HTML>

