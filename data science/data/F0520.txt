ID=F0520
URL=http://www.visualbasicbooks.com/advVB6samplepg20.html
SIZE=11543
DATE=09/07/2002
TIME=13:21:58
DATASET=Visual Basic
HTML=<html>

<head>



<meta name="description"
content="Visual Basic books for all levels of visual basic programmers are featured and reviewed regularly. Only those Visual Basic books of highest quality appear on this site.">
<meta name="keywords" content="visual basic books,visual basic,vb books,visual basic sites,programming,win32 api,database,beginner,amazon,bookstore">

<title>Visual Basic Books</title>
</head>

<body bgcolor="#6373B5" text="#616161" link="#0000ff" vlink="#666666" alink="#CC9900">
<center>
<!-- BEGIN RICH-MEDIA BURST! CODE --> 
       <script language="JavaScript"> 
       <!-- /* © 1997-1999 BURST! Media, LLC. All Rights Reserved.*/ 
       var TheAdcode = 'ad5645a'; 
       var bN = navigator.appName; 
       var bV = parseInt(navigator.appVersion); 
       var base='http://www.burstnet.com/'; 
       var Tv=''; 
       var agt=navigator.userAgent.toLowerCase(); 
       if (bV>=4) 
         {ts=window.location.pathname+window.location.search; 
          i=0; Tv=0; while (i< ts.length) 
             { Tv=Tv+ts.charCodeAt(i); i=i+1; } Tv="/"+Tv;} 
         else   {Tv=escape(window.location.pathname); 
          if( Tv.charAt(0)!='/' ) Tv="/"+Tv; 
                 else if (Tv.charAt(1)=="/")
       Tv=""; 
         if( Tv.charAt(Tv.length-1) == "/") 
           Tv = Tv + "_";} 
       if (bN=='Netscape'){ 
            if ((bV>=4)&&(agt.indexOf("mac")==-1))
       {  document.write('<s'+'cript src="'+ 
             base+'cgi-bin/ads/'+TheAdcode+'.cgi/RETURN-CODE/JS' 
             +Tv+'">'); 
            document.write('</'+'script>');    
       } 
            else if (bV>=3) {document.write('<'+'a href="'+base+'ads/'+ 
               TheAdcode+'-map.cgi'+Tv+'"target=_top>'); 
               document.write('<img src="' + base + 'cgi-bin/ads/' + 
               TheAdcode + '.cgi' + Tv + '" ismap width=468 height=60' + 
               ' border=0 alt="Click Here"></a>');} 
        } 
       if (bN=='Microsoft Internet Explorer') 
        document.write('<ifr'+'ame id=BURST src="'+base+'cgi-bin/ads/'
       + 
         TheAdcode + '.cgi' + Tv + '/RETURN-CODE" width=468 height=60' + 
         'marginwidth=0 marginheight=0 hspace=0 vspace=0 ' + 
         'frameborder=0 scrolling=no></ifr'+'ame>'); 
       // --> 
       </script> 
       <noscript><a href="http://www.burstnet.com/ads/ad5645a-map.cgi" target=_top> 
       <img src="http://www.burstnet.com/cgi-bin/ads/ad5645a.cgi" 
        width=468 height=60 border=0 alt="Click Here"></a> 
       </noscript> 
       <!-- END BURST CODE --> 
</center>


<table border="0" bgcolor="" cellpadding="0" cellspacing="0">
<tr><td><p align="center"><img src="../images/vblogo.jpg" border="0" alt="vb logo"></td></tr>
<tr> 
<td rowspan="3" valign="top" height="1"> <p>&nbsp;</p>

<p align="left"><font face= "verdana" color="#000000"><b>Visual Basic Books</b></font><br>
<a href="index.html"><font color="#ffffff">Home</font></a><br>
<a href="beginner.html"><font color="#ffffff">Visual Basic Beginner Books</font></a><br>
<a href="database.html"><font color="#ffffff">Visual Basic Database Books</font></a><br>
<a href="activex.html"><font color="#ffffff">Visual Basic ActiveX Books</font></a><br>
<a href="advanced.html"><font color="#ffffff">Visual Basic Advanced Books</font></a><br>
<a href="vbinternet.html"><font color="#ffffff">VB Internet Programming Books</font></a><br>


</p>
<p><font color="#000000" face="verdana"><b>Resources</b></font><br>
<a href="links.html"><font color="#FFFFFF">Visual Basic Links</font></a><br>
<a href="addlink.html"><font color="#FFFFFF">Add a Link</font></a><br>
<a href="esubscribe.html"><font color="#FFFFFF">Subscribe to Mailing List</font></a>

</p>

<p>


</font>


<td bgcolor="#ffffff" valign="middle"><h1 align="center"><img src="../images/anibook.gif" alt="" width="32" height="32"><font face="trebuchet ms, arial, helvetica" color="#000000"> Visual Basic Books </font><img src="../images/anibook.gif" alt="" width="32" height="32"></h1>

</td>






</tr><tr>
<td bgcolor="#ffffff" colspan="1" valign="top">



<table border="0" cellpadding="5"><tr><td>


<font  color="#000000" FACE="Verdana, Arial, Helvetica" SIZE="-1">

<center><H1> Advanced Microsoft Visual Basic 6 Chapter 1</h1></center>


<FONT FACE="Arial">
</B></FONT><B><FONT FACE="Arial" SIZE=5><P>Tip 13: Use Microsoft System <BR>
Information (MSINFO32.EXE) when you can.</P>
</B></FONT><P>When you’re trying to help a user with some problem (especially if you’re in support), you often need to know a lot of technical stuff about the user’s machine, such as what is loaded into memory or how the operating system is configured. Getting this information out of the user, even figuring out where to find it all in the first place, can be time-consuming and difficult. (Asking the user to continually hit Ctrl+Alt+Delete in an attempt to bring up the Task List and &quot;see&quot; what’s running can be a dangerous practice: <I>User: &quot;</I>Oh, my machine’s rebooting.&quot; <I>Support:</I> &quot;What did you do?&quot; <I>User: &quot;</I>What you told me to do—hit Ctrl+Alt+Delete again!&quot;) Microsoft thought so too, so they provided their users with an application to gather this information automatically: Microsoft System Information (MSINFO32.EXE). The good news is that you can use this application to help your customers.</P>
<P>Microsoft System Information comes with applications such as Microsoft Word and Microsoft Excel. If you have one of those applications installed, you’re almost certain to have Microsoft System Information installed too. It also ships with Visual Basic 6. If you haven’t seen this applet before, choose About Microsoft Visual Basic from the Help menu and click the System Info button. You’ll see a window similar to Figure 1-5.</P>
<B><FONT FACE="Arial"><P><img src="../images/F01AI05.gif"> </P>
<P>Figure 1-5</P>
</B></FONT><I><P>Running MSINFO32.EXE opens the Microsoft System Information application</P>
</I><P> The bottom line is that if your user is a Microsoft Office user or has an application such as Microsoft Excel installed, Microsoft System Information will be available. All you need to do then to provide the same information on the user’s system is to run the same application!</P>
<P>To determine whether you’ve got this application to work with, look in the following location in the Registry:</P><DIR>

<FONT FACE="Courier New" SIZE=2><P>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Shared Tools\MSInfo\Path</P></DIR>

</FONT><P>In the following example, we use the registration API in ADVAPI32.DLL to retrieve the value of the Registry key. We can then check to see whether the application really exists. If it does, <I>Shell </I>it!</P>
<B><P>Declaration Section</P><DIR>

</B><FONT FACE="Courier New" SIZE=2><P>Option Explicit<BR>
<BR>
Private Const REG_SZ                    As Long = 1<BR>
Private Const ERROR_SUCCESS             As Long = 0<BR>
Private Const HKEY_LOCAL_MACHINE        As Long = &amp;H80000002<BR>
Private Const STANDARD_RIGHTS_ALL       As Long = &amp;H1F0000<BR>
Private Const KEY_QUERY_VALUE           As Long = &amp;H1<BR>
Private Const KEY_ENUMERATE_SUB_KEYS    As Long = &amp;H8<BR>
Private Const KEY_NOTIFY                As Long = &amp;H10<BR>
Private Const SYNCHRONIZE               As Long = &amp;H100000<BR>
Private Const READ_CONTROL              As Long = &amp;H20000<BR>
Private Const STANDARD_RIGHTS_READ      As Long = (READ_CONTROL)<BR>
Private Const KEY_READ                  As Long = _<BR>
                                           ((STANDARD_RIGHTS_READ _<BR>
                                           Or KEY_QUERY_VALUE _<BR>
                                           Or KEY_ENUMERATE_SUB_KEYS _<BR>
                                           Or KEY_NOTIFY) _<BR>
                                           And (Not SYNCHRONIZE))<BR>
<BR>
Private Declare Function WinRegOpenKeyEx Lib "advapi32.dll" _<BR>
Alias "RegOpenKeyExA" (ByVal hKey As Long, _<BR>
                       ByVal lpSubKey As String, _<BR>
                       ByVal ulOptions As Long, _<BR>
                       ByVal samDesired As Long, _<BR>
                       phkResult As Long) As Long<BR>
<BR>
 Private Declare Function WinRegQueryValueEx Lib _<BR>
"advapi32.dll" Alias "RegQueryValueExA" _<BR>
                     (ByVal hKey As Long, _<BR>
                      ByVal lpValueName As String, _<BR>
                      ByVal lpReserved As Long, _<BR>
                      lpType As Long, lpData As Any, _<BR>
                      lpcbData As Long) As Long<BR>
<BR>
Private Declare Function WinRegCloseKey Lib "advapi32" _<BR>
Alias "RegCloseKey" (ByVal hKey As Long) As Long</P></DIR>

</FONT><B><P>Form Load Event</P><DIR>

</B><FONT FACE="Courier New" SIZE=2><P>Private Sub Form_Load()<BR>
<BR>
    Dim hKey   As Long<BR>
    Dim lType  As Long<BR>
    Dim Buffer As String<BR>
    <BR>
    ' Need some space to write string into - DLL routine <BR>
    ' expects us to allocate this space before the call.<BR>
    Buffer = Space(255)<BR>
        <BR>
    ' Always expect failure!<BR>
    cmdSystemInfo.Visible = False<BR>
        <BR>
    ' This will work if Microsoft System Information is installed.<BR>
    If WinRegOpenKeyEx( _<BR>
                 HKEY_LOCAL_MACHINE _<BR>
                , "SOFTWARE\Microsoft\Shared Tools\MSInfo" _<BR>
                , 0 _<BR>
                , KEY_READ _<BR>
                , hKey _<BR>
                ) = ERROR_SUCCESS Then<BR>
<BR>
        ' Read the Path value - happens to include the filename <BR>
        ' too, e.g., <BR>
        ' "C:\Program Files\Common Files\Microsoft Shared\<BR>
        ' MSinfo\msinfo32.exe".<BR>
        If WinRegQueryValueEx( _<BR>
                              hKey _<BR>
                             , "Path" _<BR>
                             , 0 _<BR>
                             , lType _<BR>
                             , ByVal Buffer _<BR>
                              , Len(Buffer) _<BR>
                             ) = ERROR_SUCCESS Then<BR>
            ' Make sure we read a string back. If we did...<BR>
            If lType = REG_SZ Then<BR>
                ' Make sure the Registry and reality are in <BR>
                ' alignment!<BR>
                ' Note: Using FileAttr() means you're <BR>
                ' suffering from paranoia&lt;g&gt;.<BR>
                If Dir$(Buffer) &lt;&gt; "" Then<BR>
                    ' Put the path into the button's Tag <BR>
                    ' property and make the button visible.<BR>
                    cmdSystemInfo.Tag = Buffer<BR>
                    cmdSystemInfo.Visible = True<BR>
                End If<BR>
            End If<BR>
<BR>
        End If<BR>
<BR>
        ' We open - we close.<BR>
        Call WinRegCloseKey(hKey)<BR>
<BR>
    End If<BR>
<BR>
End Sub</P></DIR>

</FONT><B><P>Button Click Event</P><DIR>

</B><FONT FACE="Courier New" SIZE=2><P>Private Sub cmdSystemInfo_Click()<BR>
<BR>
    ' If we got clicked, we must be visible and therefore <BR>
    ' must have our Tag property set to the name of the <BR>
    ' Microsoft System Information application - Shell it!<BR>
    Call Shell(cmdSystemInfo.Tag, vbNormalFocus)<BR>
<BR>
End Sub</P></DIR>

</FONT><P>In the code above, as the form loads (maybe this is an About box?) it detects whether or not Microsoft System Information exists. If it does, the form makes a command button visible and sets its <I>Tag</I> property to point to the program. When the form becomes visible, the button either will or won’t be visible. If it is visible, you have Microsoft System Information on your machine. When you click the button, it simply calls <I>Shell</I> with the value in its <I>Tag</I> property. For more information on the APIs used in this example, see the appropriate Win32 documentation.</P>
<P> One of the neat little extras that came first with Visual Basic 5 was the little wizard dialog &quot;thang&quot; that allowed you to add standard dialog boxes to your application. One of these standard dialog boxes is an About dialog box. You’ll notice that the About dialog box comes complete with a System Info button. The dialog box displays the Microsoft System Information utility using code similar to that shown on the previous page. (I think ours is cooler so I’ve left it here in the second edition.) This raises an interesting question, however. Is Microsoft implicitly giving you and me permission to ship MSINFO32.EXE (and anything that it needs) with an EXE? I’m afraid I don’t know the answer to this one—sorry!</P>

<center><a href="advVB6samplepg21.html">next page....</a></center>

</td></tr></table></table><tr><td bgcolor="#991100"><center>
<font FACE="Verdana, Arial, Helvetica" SIZE="-1"><font color="#FFFFFF">Email us your comments:<a href="mailto:contact@vbbooks.freeservers.com"><img src="../images/emailed.gif"alt="mail" border=0></a><br>Fax: 1(916)404-7719<br>&copy;1999 Valassis Enterprises. All rights reserved.</font>

<P>
<!--Start of WSTR Block-->
<script language=JavaScript>id=1530</script>
<script language=JavaScript src="http://www.meixler-tech.com/wstr/js.cgi"></script>
<!--End of WSTR Block-->
</center>


</body>
</html>

