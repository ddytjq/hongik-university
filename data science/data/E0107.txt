ID=E0107
URL=http://www.intap.net/~drw/cpp/cpp04_02.htm
SIZE=9739
DATE=12/07/02
TIME=19:17:31
DATASET=C
HTML=
<html>
<head> 
<title>
online C++ tutorial: Branching Statements (if, else, switch)
</title>
</head>

<body bgcolor="#ffffff"
       link = "#ff0000"
      alink = "#00ff00"
      vlink = "#660000" >


<table width="100%" border=0>
<tr>
<td align=left>
<a href="cpp04_01.htm"><img border=0 src="pictures/buttons/prevs.gif" width=51 height=34 alt="&lt;&lt;=="></a>
<a href="cpp04_01.htm"><img border=0 src="pictures/buttons/prevp.gif" width=37 height=34 alt="&lt;="></a>
</td>
<td align=center>
<a href="index.htm">
<img border=0 width=122 height=34 src="pictures/buttons/toc.gif"
    alt="[table of contents]"></a>
<a href="/cgi-bin/drw/cpp/search.cgi">
<img border=0 width=46 height=34 src="pictures/buttons/search.gif"
    alt="[search]"></a>
<a href="glossary.htm">
<img border=0 width=61 height=34 src="pictures/buttons/glossary.gif"
    alt="[glossary]"></a>
<a href="feedback.htm">
<img border=0 width=65 height=34 src="pictures/buttons/feedback.gif"
    alt="[feedback]"></a>
</td>
<td align=right>

<a href="cpp04_03.htm"><img border=0 src="pictures/buttons/nextp.gif" width=37 height=34 alt="=&gt;"></a>
<a href="cpp05_01.htm"><img border=0 src="pictures/buttons/nexts.gif" width=51 height=34 alt="==&gt;&gt;"></a>
</td>
</tr>
</table>
<hr>
<table width="100%"><tr><td align=left><img src="pictures/buttons/cppsm.gif" width=143 height=37 alt="[online C++ tutorial]"></td><td align=right><b>Section 4: Control Statements </b></td></tr></table>
<center><h2>Section 4.2: Branching Statements (if, else, switch)</h2></center>

<h3> the if statement </h3>

<p> The first type of branching statement we will look at
is the <b>if statement</b>. An <b>if statement</b> has the form:
<blockquote>
<pre>
<b>if</b> (<i>condition</i>)
{
   // code to execute if <i>condition</i> is true
}
<b>else</b> 
{
   // code to execute if <i>condition</i> is false
}
</pre>
</blockquote>

In an <b>if statement</b>, <i>condition</i> is a value 
or an expression that is used
to determine which code block is executed, and the curly braces
act as "begin" and "end" markers. 
<p>
Here is a full C++ program as an example:

<pre>
//include this file for cout
#include &lt;iostream.h&gt;

int main() {
  // define two integers
  int x = 3;
  int y = 4;

  //print out a message telling which is bigger
  if (x &gt; y) {
    cout &lt;&lt; "x is bigger than y" &lt;&lt; endl;
  }
  else {
    cout &lt;&lt; "x is smaller than y" &lt;&lt; endl;
  }
  return 0;
}
</pre>

<p>
In this case <i>condition</i> is equal to "(x &gt; y)" which is
equal to "(3 &gt; 4)" which is a <i>false</i> statement. So the code
within the <b>else</b> clause will be executed. The output of this 
program will be:

<pre>
x is smaller than y
</pre>
 
If instead the value for x was 6 and the value for y was 2, then
<i>condition</i> would be "(6 &gt; 2)" which is a <i>true</i> statement
and the output of the program would be:

<pre>
x is bigger than y
</pre>
 
<h3> the switch statement </h3>

<p>
The next branching statement is called a <b>switch statement</b>.
A <b>switch statement</b> is used in place of many <b>if
statements</b>.
<p>
Let's consider the following case: Joel is writing a program that
figures interest on money that is held in a bank. The amount of
interest that money earns in this bank depends on which type of 
account the money is in. There are 6 different types of accounts
and they earn interest as follows:

<center>
<table border=1>
<tr>
<th>account type</th>
<th>interest earned</th>
</tr>

<tr>
<td>personal financial</td>
<td>2.3%</td>
</tr>

<tr>
<td>personal homeowner</td>
<td>2.6%</td>
</tr>

<tr>
<td>personal gold</td>
<td>2.9%</td>
</tr>

<tr>
<td>small business</td>
<td>3.3%</td>
</tr>

<tr>
<td>big business</td>
<td>3.5%</td>
</tr>

<tr>
<td>gold business</td>
<td>3.8%</td>
</tr>

</table>
</center>

<p> One way for Joel to write this program is as follows:
(assuming also that Joel has assigned numbers to the account
types starting with personal financial and ending with gold 
business.)

<pre>

// declare a variable to keep track of the interest
float interest = 0.0;

// decide which interest rate to use.
if (account_type == 1){
  interest = 2.3;
  }
else {
     if (account_type == 2) {
       interest = 2.6;
       }
     else {
          if (account_type == 3){
            interest = 2.9;
            }
          else {
               if (account_type == 4){
                 interest = 3.3;
                 }
               else {
                    if (account_type == 5){
                      interest = 3.5;
                      }
                    else {
                         // account type must be 6
                           interest = 3.8;
                         }
                    }
               }
          }
     }
</pre>

<p> That code is hard to read and hard to understand. There is an 
easier way to write this, using the <b>switch statement</b>.
The preceding chunk of code could be written as follows:

<pre>
switch (account_value){
  case 1:
    interest = 2.3;
    break;
  case 2:
    interest = 2.6;
    break;
  case 3:
    interest = 2.9;
    break;
  case 4:
    interest = 3.3;
    break;
  case 5:
    interest = 3.5;
    break;
  case 6:
    interest = 3.8;
    break;
  default:
    interest = 0.0;
}
</pre>

<p> The <b>switch statement</b> allows a programmer to compound a group
of <b>if statements</b>, provided that the condition being tested
is an integer. The switch statement has the form:

<blockquote>
<pre> 
<b>switch</b>(<i>integer_val</i>){
   <b>case</b> <i>val_1</i>:
      // code to execute if <i>integer_val</i> is <i>val_1</i>
      <b>break</b>;
    ...
   <b>case</b> <i>val_n</i>:
      // code to execute if <i>integer_val</i> is <i>val_n</i>
      <b>break</b>;
   <b>default</b>:
      // code to execute if <i>integer_val</i> is none of the above
}
</pre>
</blockquote>

<p>The <b>default</b> clause is optional, but it is good programming 
practice to use it. The default clause is executed if none of 
the other clauses have been executed. For example, if my code
looked like:
<pre>
switch (place) {
   case 1:
      cout &lt;&lt; "we're first" &lt;&lt; endl;
	break;
   case 2:
      cout &lt;&lt; "we're second" &lt;&lt; endl;
	break;
   default:
	cout &lt;&lt; "we're not first or second" &lt;&lt; endl;
}
</pre>

<p>
This switch statement will write "we're first" if the
variable <b>place</b> is equal to 1, it will write "we're
second" if <b>place</b> is equal to 2, and will write
"we're not first or second" if <b>place</b> is any other 
value.

<p> The <b>break</b> keyword means "jump out of the switch 
statement, and do not execute any more code." To show how this 
works, examine the following piece of code:

<pre>
int value = 0;
switch(input){
  case 1:
    value+=4;
  case 2:
    value+=3;
  case 3: 
    value+=2;
  default:
    value++;
}
</pre>

<p> If <i>input</i> is 1 then 4 will be added to <i>value</i>.
Since there is no <b>break</b> statement, the program will go
on to the next line of code which adds 3, then the line of code
that adds 2, and then the line of code that adds 1. So <i>value</i>
will be set to 10! The code that was intended was probably:

<pre>
int value = 0;
switch(input){
  case 1:
    value+=4;
    break;
  case 2:
    value+=3;
    break;
  case 3: 
    value+=2;
    break;
  default:
    value++;
}
</pre>

<p> This feature of <b>switch</b> statements can sometimes be used
to a programmers' advantage. In the example with the different
types of bank accounts, say that the interest earned was a follows:

<center>
<table border=1>
<tr>
<th>account type</th>
<th>interest earned</th>
</tr>

<tr>
<td>personal financial</td>
<td>2.3%</td>
</tr>

<tr>
<td>personal homeowner</td>
<td>2.6%</td>
</tr>

<tr>
<td>personal gold</td>
<td>2.9%</td>
</tr>

<tr>
<td>small business</td>
<td>2.6%</td>
</tr>

<tr>
<td>big business</td>
<td>2.9%</td>
</tr>

<tr>
<td>gold business</td>
<td>3.0%</td>
</tr>

</table>
</center>

<p> Now, the code for this could be written as:

<pre>
switch (account_value){
  case 1:
    interest = 2.3;
    break;
  case 2:
  case 4:
    interest = 2.6;
    break;
  case 3:
  case 5:
    interest = 2.9;
    break;
  case 6:
    interest = 3.8;
    break;
  default:
    interest = 0.0;
}
</pre>

<hr>
<table width="100%" border=0>
<tr>
<td align=left>
<a href="cpp04_01.htm"><img border=0 src="pictures/buttons/prevs.gif" width=51 height=34 alt="&lt;&lt;=="></a>
<a href="cpp04_01.htm"><img border=0 src="pictures/buttons/prevp.gif" width=37 height=34 alt="&lt;="></a>
</td>
<td align=center>
<a href="index.htm">
<img border=0 width=122 height=34 src="pictures/buttons/toc.gif"
    alt="[table of contents]"></a>
<a href="/cgi-bin/drw/cpp/search.cgi">
<img border=0 width=46 height=34 src="pictures/buttons/search.gif"
    alt="[search]"></a>
<a href="glossary.htm">
<img border=0 width=61 height=34 src="pictures/buttons/glossary.gif"
    alt="[glossary]"></a>
<a href="feedback.htm">
<img border=0 width=65 height=34 src="pictures/buttons/feedback.gif"
    alt="[feedback]"></a>
</td>
<td align=right>

<a href="cpp04_03.htm"><img border=0 src="pictures/buttons/nextp.gif" width=37 height=34 alt="=&gt;"></a>
<a href="cpp05_01.htm"><img border=0 src="pictures/buttons/nexts.gif" width=51 height=34 alt="==&gt;&gt;"></a>
</td>
</tr>
</table>
</body>
</html>

