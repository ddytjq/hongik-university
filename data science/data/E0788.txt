ID=E0788
URL=http://www.cplusplus.com/ref/iostream/
SIZE=9630
DATE=12/07/02
TIME=19:24:28
DATASET=C
HTML=<HTML>
<HEAD>
<TITLE>C++ reference: iostream library</TITLE>
<META NAME="description" CONTENT="Classes for input/output operations.">
<META NAME="keywords" CONTENT="iostream.h">
</HEAD>
<BODY BGCOLOR="white">
<!--header-->
<TABLE WIDTH=100%><TR><TD BGCOLOR="#D0D0D0" ALIGN="left"><FONT FACE="arial,helvetica,verdana" SIZE=2>&nbsp;
 <A HREF="http://www.cplusplus.com" TARGET="_top">cplusplus.com</A> &gt;
 <A HREF="../indexr.html">reference</A> &gt;
 iostream library
</TD></TR></TABLE>

<TABLE WIDTH=100%><TR><TD>
<FONT FACE="arial,helvetica" SIZE=6><B>
iostream library
</B></FONT>
</TD><TD ALIGN="right"><!--ad--><script language="Javascript"><!-- 
var a=b=c=d=e=h=i=j=l=n=p=s=t=u=v=w=x=y=z=dc='';
var id=o=k=f=0;  var jar=new Date(); var f=jar.getSeconds() * jar.getMinutes();
dc=document;  n=navigator;  v=parseFloat(n.appVersion);  e=escape(dc.referrer);
dc.cookie='mc=y'; j=(n.javaEnabled()? 'Y':'N'); c=(dc.cookie.length>0?'Y':'N');
if(v>=4){x=screen; } if(n.appName.indexOf('Mic')>=0) {o=1; } if(v>=4){ id=4636;
if(o==1){s=x.colorDepth}w=x.width;h=x.height;}x='|';p=w+x+h+x+s+'||||'+j+x+c+x;
u='ht'+'tp://media.fastclick.net/w'; c=' alt="Click"></a>'; x='/get.media?t=s';
l=' width=468 height=60 border=0 ';t=l+'marginheight=0 marginwidth=';b='&sid=';
i=u+x+b+id+'&m=1&f=a&v=1.2&c='+f+'&j='+p+'&r='+e;d='ameborder=0 scrolling=no>';
u = '<a  hr'+'ef="'+u+'/cli'+'ck.here?sid='+id+'&m=1&c='+f+'"  target="_top">';
dc.writeln('<ifr'+'ame src="'+i+'&d=f"'+t+'0 hspace=0 vspace=0 fr'+d);if(o!=1){
dc.writeln(u+'<i'+'mg sr'+'c="'+i+'&d=n"'+l+c);}dc.writeln('</iframe>'); // -->
</script><noscript><a 
href="http://media.fastclick.net/w/click.here?sid=4636&m=1&c=1"  target="_top">
<img src="http://media.fastclick.net/w/get.media?sid=4636&m=1&d=s&c=1&f=a&v=1.2
" width=468 height=60 border=1></a>
</noscript><!--/ad--></TD></TR></TABLE>
<!--/header-->
<TABLE WIDTH=100%><TR><TD BGCOLOR="gray" ALIGN="right"><FONT FACE="arial,helvetica,verdana" SIZE=2 COLOR="white">cplusplus.com &nbsp;</TD></TR></TABLE>

<!--content-->
<FONT FACE="arial,helvetica" SIZE=3>
Classes for input and output operations.
</FONT>

<P>
<MAP NAME="hierarchymap">
<AREA HREF="ios_base/" SHAPE="RECT" COORDS="21,36,128,62">
<AREA HREF="ios/" SHAPE="RECT" COORDS="21,95,128,122">
<AREA HREF="istream/" SHAPE="RECT" COORDS="161,36,268,62">
<AREA HREF="iostream/" SHAPE="RECT" COORDS="161,95,268,121">
<AREA HREF="ostream/" SHAPE="RECT" COORDS="161,154,268,180">
<AREA HREF="streambuf/" SHAPE="RECT" COORDS="161,220,268,246">
<AREA HREF="cin.html" SHAPE="RECT" COORDS="299,65,406,91">
<AREA HREF="cout.html" SHAPE="RECT" COORDS="300,183,407,209">
<AREA HREF="ifstream/" SHAPE="RECT" COORDS="438,26,545,52">
<AREA HREF="fstream/" SHAPE="RECT" COORDS="438,85,545,111">
<AREA HREF="ofstream/" SHAPE="RECT" COORDS="438,144,545,170">
<AREA HREF="filebuf/" SHAPE="RECT" COORDS="438,210,545,236">
<AREA HREF="istringstream/" SHAPE="RECT" COORDS="577,43,684,69">
<AREA HREF="stringstream/" SHAPE="RECT" COORDS="577,99,684,125">
<AREA HREF="ostringstream/" SHAPE="RECT" COORDS="577,159,684,185">
<AREA HREF="stringbuf/" SHAPE="RECT" COORDS="577,225,684,251">
</MAP>
<CENTER>
<TABLE WIDTH=705 CELLSPACING=0 CELLPADDING=0>
<TR><TD><IMG SRC="hierarchy.gif" BORDER=0 NAME="hierarchy" WIDTH="705" HEIGHT="273" USEMAP="#hierarchymap" ALT="click on a class for detailed information"></TD></TR>
<TR><TD><SMALL>
<B>iostream hierarchy of classes (char instantiation):</B>
<A HREF="ios_base/">ios_base</A>,
<A HREF="ios/">ios</A>,
<A HREF="istream/">istream</A>,
<A HREF="ostream/">ostream</A>,
<A HREF="iostream/">iostream</A>,
<A HREF="streambuf/">streambuf</A>,
<A HREF="ifstream/">ifstream</A>,
<A HREF="fstream/">fstream</A>,
<A HREF="ofstream/">ofstream</A>,
<A HREF="filebuf/">filebuf</A>,
<A HREF="istringstream/">istringstream</A>,
<A HREF="stringstream/">stringstream</A>,
<A HREF="ostringstream/">ostringstream</A>,
<A HREF="stringbuf/">stringbuf</A>
<SMALL></TD></TR>
</TABLE>
</CENTER>

<P>
&nbsp;
The iostream library is an object-oriented library that provides input and
output functionality using streams.<BR>
&nbsp;
A stream is an abstraction that represents a device in which input and ouput
operations are performed.
A stream can basically be represented as an indefinite source or destination
of characters - the number of character to be in/output is not needed to be known
in advance - We can simply write characters
to the stream or get them until we find it convenient or until the source of characters
exhausts.<BR>
&nbsp;
The streams are generally associated to a physical source or destination of characters,
like a disk file, the keyboard or a text console, so the characters we get or
write to/from our abstraction called stream are physically input/output to the
physical device. For example, <I>file streams</I> are C++ objects to manipulate
and interact with files; Once a <I>file stream</I> is used to open a file, any input or
output operation performed on that stream is physically reflected in the file.
<P>
To operate with streams we have to our disposal the standard <TT>iostream</TT> library
which provides us the following elements:
<DL>

<DT><B>Basic class templates</B>
<DD>The base of the iostream library is the hierarchy of class templates.
The class templates provide most of the functionality of the library in a way
that they can be used to operate with any type of elements.<BR>
This is a set of class templates have two template parameters: the <U>char type</U>
(<TT>charT</TT>) that determines the type of elements to be manipulated and the
<U>traits</U>, that provides additional characteristics specific
for that type of elements.<BR>
The class templates in this hierarchy have the same name as their <TT>char</TT>-type
instantiations but with <TT>basic_</TT> as prefix. For example, the class template which
<TT>istream</TT> is instantiated from is called <TT>basic_istream</TT>, the one of <TT>fstream</TT>
is <TT>basic_fstream</TT> and so on. The only exception is <TT>ios_base</TT>.

<DT><B>Class template instantiations</B>
<DD>The library incorporates two standard sets of instantiations of the iostream class
template hierarchy:
one, narrow-oriented, to manipulate <TT><B>char</B></TT> elements and another one,
wide-oriented, to manipulate <TT><B>wchar_t</B></TT> elements.<BR>
The narrow-oriented (<TT>char</TT>) instantiation is probably the better known part of
the iostream library. Classes like <TT>ios</TT>, <TT>istream</TT> and
<TT>ofstream</TT> are narrow-oriented. The diagram on top of this page shows the
names and relationships of narrow-oriented classes.<BR>
The classes of the wide-oriented (<TT>wchar_t</TT>) instatiation use the same names
as the narrow-oriented but prefixed with a <TT>w</TT> character, like <TT>wios</TT>,
<TT>wistream</TT> and <TT>wofstream</TT>.<BR>

<DT><B>Standard objects</B>
<DD>
Within the iostream library, declared in the <TT><B>&lt;iostream&gt;</B></TT>
header file there are certain objects that are used to perform input and output
operations on the standard input and output devices.<BR>
They are divided in two sets: narrow-oriented objects, which are the popular <TT>cin</TT>,
<TT>cout</TT>, <TT>cerr</TT> and <TT>clog</TT> and
wide-oriented iostream objects, declared as <TT>wcin</TT>, <TT>wcout</TT>, <TT>wcerr</TT>
and <TT>wclog</TT>.

<DT><B>Types</B>
<DD>
The iostream classes barely use fundamental types on their member's prototypes.
They generally use defined types that depend on the <TT>traits</TT> used in the
instantiation.
For the default <TT>char</TT> and <TT>wchar_t</TT> specializations, types
<TT>streampos</TT>,
<TT>streamoff</TT> and
<TT>streamsize</TT>
are used to represent positions, offsets and sizes, respectivelly.

<DT><B>Manipulators</B>
<DD>
Manipulators are global functions designed to be used
in conjunction with insertion (<TT>&lt;&lt;</TT>) and extraction (<TT>&gt;&gt;</TT>)
operators of stream objects. They generally modify properties and formatting
information of streams.
<TT>endl</TT>, <TT>hex</TT> and <TT>scientific</TT> are examples of manipulators.

</DL>

<P>
<A NAME="hierarchy">
<H2>Organization:</H2>
</A>

<P>
&nbsp;
The library and its hierarchy of classes is divided in different files:<BR>
<UL>
<LI>
<TT>&lt;ios&gt;</TT>,
<TT>&lt;istream&gt;</TT>,
<TT>&lt;ostream&gt;</TT>,
<TT>&lt;streambuf&gt;</TT> and
<TT>&lt;iosfwd&gt;</TT>
aren't usually included directly in most C++ programs. They describe the base classes
of the hierarchy and are automatically included by other header files of the library
that contain the derived classes.<BR>
<LI>
<TT>&lt;iostream&gt;</TT>
declares the objects used to communicate through the standard input and output
(including <TT>cin</TT> and <TT>out</TT>).
<LI>
<TT>&lt;fstream&gt;</TT>
defines the file stream classes (like template <TT>basic_ifstream</TT> or class
<TT>ofstream</TT>) as well as the internal buffer objects used (<TT>basic_filebuf</TT>).
These classes are used to manipulate files with streams.
<LI>
<TT>&lt;sstream&gt;</TT>.
The classes defined in this file are used to manipulate STL string objects as if they
were streams.
<LI>
<TT><A HREF="iomanip/">&lt;iomanip&gt;</A></TT> declares some standard manipulators with
parameters to be used with extraction and insertion operators to modify internal flags and
formatting options.
</UL>



<P>
<TABLE><TR><TD BGCOLOR="#BFFFBF">
<B>Compatibility notes</B><BR>
1. The names, prototypes and examples included in this reference for the iostream classes
mostly describe and use the char instatiations of the class templates instead of the
templates themselves. Although these classes are only one of the possible instantiations
of the templates, this has been done thus in order to provide a better readability
and assuming it is as easy to obtain the names and prototypes of the basic template from
the char specialization as the opposite.<BR>
2. The classes described in this reference follow the ANSI C++ standard.
Many compilers released before the publication of this standard may have a
different implementation which is not considered in this reference.
The <A HREF="http://www.cplusplus.com/info/faq.html">C++ FAQ</A> includes an example
to check if your compiler may be ANSI compliant.

</TD></TR></TABLE>


<!--/content-->
<P><HR><CENTER><FONT FACE="arial,helvetica" SIZE=1>&copy; The C++ Resources Network, 2001</FONT></CENTER>


</TD></TR></TABLE>
</BODY>
</HTML>
