ID=F0736
URL=http://www.visualbasicbooks.com/advVB6samplepg18.html
SIZE=8801
DATE=09/07/2002
TIME=13:25:10
DATASET=Visual Basic
HTML=<html>

<head>



<meta name="description"
content="Visual Basic books for all levels of visual basic programmers are featured and reviewed regularly. Only those Visual Basic books of highest quality appear on this site.">
<meta name="keywords" content="visual basic books,visual basic,vb books,visual basic sites,programming,win32 api,database,beginner,amazon,bookstore">

<title>Visual Basic Books</title>
</head>

<body bgcolor="#6373B5" text="#616161" link="#0000ff" vlink="#666666" alink="#CC9900">
<center>
<!-- BEGIN RICH-MEDIA BURST! CODE --> 
       <script language="JavaScript"> 
       <!-- /* © 1997-1999 BURST! Media, LLC. All Rights Reserved.*/ 
       var TheAdcode = 'ad5645a'; 
       var bN = navigator.appName; 
       var bV = parseInt(navigator.appVersion); 
       var base='http://www.burstnet.com/'; 
       var Tv=''; 
       var agt=navigator.userAgent.toLowerCase(); 
       if (bV>=4) 
         {ts=window.location.pathname+window.location.search; 
          i=0; Tv=0; while (i< ts.length) 
             { Tv=Tv+ts.charCodeAt(i); i=i+1; } Tv="/"+Tv;} 
         else   {Tv=escape(window.location.pathname); 
          if( Tv.charAt(0)!='/' ) Tv="/"+Tv; 
                 else if (Tv.charAt(1)=="/")
       Tv=""; 
         if( Tv.charAt(Tv.length-1) == "/") 
           Tv = Tv + "_";} 
       if (bN=='Netscape'){ 
            if ((bV>=4)&&(agt.indexOf("mac")==-1))
       {  document.write('<s'+'cript src="'+ 
             base+'cgi-bin/ads/'+TheAdcode+'.cgi/RETURN-CODE/JS' 
             +Tv+'">'); 
            document.write('</'+'script>');    
       } 
            else if (bV>=3) {document.write('<'+'a href="'+base+'ads/'+ 
               TheAdcode+'-map.cgi'+Tv+'"target=_top>'); 
               document.write('<img src="' + base + 'cgi-bin/ads/' + 
               TheAdcode + '.cgi' + Tv + '" ismap width=468 height=60' + 
               ' border=0 alt="Click Here"></a>');} 
        } 
       if (bN=='Microsoft Internet Explorer') 
        document.write('<ifr'+'ame id=BURST src="'+base+'cgi-bin/ads/'
       + 
         TheAdcode + '.cgi' + Tv + '/RETURN-CODE" width=468 height=60' + 
         'marginwidth=0 marginheight=0 hspace=0 vspace=0 ' + 
         'frameborder=0 scrolling=no></ifr'+'ame>'); 
       // --> 
       </script> 
       <noscript><a href="http://www.burstnet.com/ads/ad5645a-map.cgi" target=_top> 
       <img src="http://www.burstnet.com/cgi-bin/ads/ad5645a.cgi" 
        width=468 height=60 border=0 alt="Click Here"></a> 
       </noscript> 
       <!-- END BURST CODE --> 
</center>


<table border="0" bgcolor="" cellpadding="0" cellspacing="0">
<tr><td><p align="center"><img src="../images/vblogo.jpg" border="0" alt="vb logo"></td></tr>
<tr> 
<td rowspan="3" valign="top" height="1"> <p>&nbsp;</p>

<p align="left"><font face= "verdana" color="#000000"><b>Visual Basic Books</b></font><br>
<a href="index.html"><font color="#ffffff">Home</font></a><br>
<a href="beginner.html"><font color="#ffffff">Visual Basic Beginner Books</font></a><br>
<a href="database.html"><font color="#ffffff">Visual Basic Database Books</font></a><br>
<a href="activex.html"><font color="#ffffff">Visual Basic ActiveX Books</font></a><br>
<a href="advanced.html"><font color="#ffffff">Visual Basic Advanced Books</font></a><br>
<a href="vbinternet.html"><font color="#ffffff">VB Internet Programming Books</font></a><br>


</p>
<p><font color="#000000" face="verdana"><b>Resources</b></font><br>
<a href="links.html"><font color="#FFFFFF">Visual Basic Links</font></a><br>
<a href="addlink.html"><font color="#FFFFFF">Add a Link</font></a><br>
<a href="esubscribe.html"><font color="#FFFFFF">Subscribe to Mailing List</font></a>

</p>

<p>


</font>


<td bgcolor="#ffffff" valign="middle"><h1 align="center"><img src="../images/anibook.gif" alt="" width="32" height="32"><font face="trebuchet ms, arial, helvetica" color="#000000"> Visual Basic Books </font><img src="../images/anibook.gif" alt="" width="32" height="32"></h1>

</td>






</tr><tr>
<td bgcolor="#ffffff" colspan="1" valign="top">



<table border="0" cellpadding="5"><tr><td>


<font  color="#000000" FACE="Verdana, Arial, Helvetica" SIZE="-1">

<center><H1> Advanced Microsoft Visual Basic 6 Chapter 1</h1></center>


<FONT FACE="Arial">
</B></FONT><B><P>Note</P>
</B><P>If we assume that Visual Basic itself raises exceptions by calling <I>Err.Raise </I>and that <I>Err.Raise </I>simply sets other properties of <I>Err</I>, such as <I>Err.Number</I>, our own <I>Err.Number </I>obviously won’t be called to set <I>VBA.Err </I>properties (as it would if we simply had a line of code that read, say, <I>Err.Number = 42</I>). This is a pity because if it did call our <I>Err.Number</I>, we could detect (what with our <I>Err.Number </I>being called first before any other routines) that an error was being raised and automatically look after preserving the error context; that is, we could do an <I>Err.Push </I>automatically without having it appear in each error handler.</P></DIR>

<P>All sound good to you? Here’s a sample implementation of a new <I>Err </I>object that contains <I>Pop</I> and <I>Push </I>methods:</P>
<B><P>In a class called ErrObject</P><DIR>

</B><FONT FACE="Courier New" SIZE=2><P>Private e() As ErrObjectState<BR>
<BR>
Private Type ErrObjectState<BR>
<BR>
    Description As String<BR>
    HelpContext As Long<BR>
    HelpFile    As String<BR>
    Number      As Long<BR>
<BR>
End Type<BR>
<BR>
Public Property Get Description() As String<BR>
<BR>
    Description = VBA.Err.Description<BR>
<BR>
End Property<BR>
<BR>
 Public Property Let Description(ByVal s As String)<BR>
<BR>
    VBA.Err.Description = s<BR>
<BR>
End Property<BR>
<BR>
Public Property Get HelpContext() As Long<BR>
<BR>
    HelpContext = VBA.Err.HelpContext<BR>
<BR>
End Property<BR>
<BR>
Public Property Let HelpContext(ByVal l As Long)<BR>
<BR>
    VBA.Err.HelpContext = l<BR>
<BR>
End Property<BR>
<BR>
Public Property Get HelpFile() As String<BR>
<BR>
    HelpFile = VBA.Err.HelpFile<BR>
<BR>
End Property<BR>
<BR>
Public Property Let HelpFile(ByVal s As String)<BR>
<BR>
    VBA.Err.HelpFile = s<BR>
<BR>
End Property<BR>
<BR>
Public Property Get Number() As Long<BR>
<BR>
    Number = VBA.Err.Number<BR>
<BR>
End Property<BR>
<BR>
Public Property Let Number(ByVal l As Long)<BR>
<BR>
    VBA.Err.Number = l<BR>
<BR>
End Property<BR>
<BR>
Public Property Get Source() As String<BR>
<BR>
    Source = VBA.Err.Source<BR>
<BR>
End Property<BR>
<BR>
 Public Property Let Source(ByVal s As String)<BR>
<BR>
    VBA.Err.Source = s<BR>
<BR>
End Property<BR>
<BR>
Public Sub Clear()<BR>
<BR>
    VBA.Err.Clear<BR>
    <BR>
    Description = VBA.Err.Description<BR>
    HelpContext = VBA.Err.HelpContext<BR>
    HelpFile = VBA.Err.HelpFile<BR>
    Number = VBA.Err.Number<BR>
<BR>
End Sub<BR>
<BR>
Public Sub Push()<BR>
<BR>
    ReDim Preserve e(UBound(e) + 1) As ErrObjectState<BR>
<BR>
    With e(UBound(e))<BR>
<BR>
        .Description = Description<BR>
        .HelpContext = HelpContext<BR>
        .HelpFile = HelpFile<BR>
        .Number = Number<BR>
<BR>
    End With<BR>
<BR>
End Sub<BR>
<BR>
Public Sub Pop()<BR>
<BR>
    With e(UBound(e))<BR>
<BR>
        Description = .Description<BR>
        HelpContext = .HelpContext<BR>
        HelpFile = .HelpFile<BR>
        Number = .Number<BR>
<BR>
    End With<BR>
<BR>
     If UBound(e) Then<BR>
        ReDim e(UBound(e) - 1) As ErrObjectState<BR>
    Else<BR>
        VBA.Err.Raise Number:=28 ' Out of stack space - underflow<BR>
    End If<BR>
<BR>
End Sub<BR>
<BR>
Private Sub Class_Initialize()<BR>
<BR>
    ReDim e(0) As ErrObjectState<BR>
<BR>
End Sub<BR>
<BR>
Private Sub Class_Terminate()<BR>
<BR>
    Erase e()<BR>
<BR>
End Sub</P></DIR>

</FONT><B><P>In Sub Main</P><DIR>

</B><FONT FACE="Courier New" SIZE=2><P>Set Err = New ErrObject</P></DIR>

</FONT><B><P>In Global Module</P><DIR>

</B><FONT FACE="Courier New" SIZE=2><P>Public Err As ErrObject</P></DIR>

</FONT><P>As you can see, our new <I>Err </I>object maintains a stack of a user-defined type (UDT) called <I>ErrObjectState</I>. An instance of this type basically holds information from the last error. In Sub Main we create our only <I>ErrObject</I>—note that it’s called <I>Err</I>. This means that calls to methods like <I>Err.Number </I>will be directed to our object. In other words, <I>Err</I> refers to our instance of <I>ErrObject </I>and not the global instance <I>VBA.Err</I>. This means, of course, that we have to provide stubs for all the methods that are normally part of the global <I>Err </I>object: <I>Number</I>, <I>Description</I>, <I>Source</I>, and so on.</P>
<P>Note that we’ve left <I>LastDLLError</I> off the list. This is because when we pop the stack we’d need to write a value back into <I>VBA.Err.LastDLLError</I> and, unfortunately, this is a read-only property!</P>
<P>Another object we replace is the <I>Debug</I> object. We do this because we sometimes want to see what debug messages might be emitting from a built executable.</P>
<P>As you know, &quot;normal&quot; <I>Debug.Print </I>calls are thrown away by Visual Basic when your application is running as an executable; &quot;special&quot; <I>Debug.Print </I>calls, however, can be captured even when the application is running as an executable. Replacing this object is a little trickier than replacing the <I>Err</I> object because the <I>Debug</I> object name cannot be overloaded; that is,you have to call your new object something like <I>Debugger</I>. This new object can be designed to write to Visual Basic’s Immediate window so that it becomes a complete replacement for the <I>Debug </I>object. Chapter 6 shows how you can write your own <I>Assert </I>method so that you can also replace the <I>Debug </I>object’s <I>Assert </I>method.</P>

<center><a href="advVB6samplepg19.html">next page....</a></center>

</td></tr></table></table><tr><td bgcolor="#991100"><center>
<font FACE="Verdana, Arial, Helvetica" SIZE="-1"><font color="#FFFFFF">Email us your comments:<a href="mailto:contact@vbbooks.freeservers.com"><img src="../images/emailed.gif"alt="mail" border=0></a><br>Fax: 1(916)404-7719<br>&copy;1999 Valassis Enterprises. All rights reserved.</font>

<P>
<!--Start of WSTR Block-->
<script language=JavaScript>id=1530</script>
<script language=JavaScript src="http://www.meixler-tech.com/wstr/js.cgi"></script>
<!--End of WSTR Block-->
</center>


</body>
</html>

