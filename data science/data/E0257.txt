ID=E0257
URL=http://www.hh.se/stud/d98rolb/ansi/c_operator_precedence.html
SIZE=4455
DATE=12/07/02
TIME=19:19:13
DATASET=C
HTML=<html>
<head>
  <title>C Operator Precedence</title>
  <meta name="Generator" content="GuideML V1.6">
  <meta http-equiv="Content-Type" content="text/html">
</head>
<body>
<a href="main.html"><img src="toc.gif" alt="CONTENTS" border=0></a><a href="alphalist.html"><img src="index.gif" alt="INDEX" border=0></a><a href="wctomb().html"><img src="prev.gif" alt="PREV" border=0></a><a href="formatted_input_specifiers.html"><img src="next.gif" alt="NEXT" border=0></a><a href="http://www.hh.se/stud/d98rolb/programming.html"><img src="home.gif" alt="HOME" border=0></a>
<hr>
<pre>
Operator Precedence and Associativity

   All operators in a block (between two lines of dashes) are of equal
   precedence.        The blocks are arranged in descending order (in other
   words, '!' will be evaluated before '*').

   Associativity is the order in which the parameters of that operator
   are evaluated.

   Operator        Description                                Associativity
   ------------------------------------------------------------------
   ()           function call                           left-to-right
   []                array index
   .                structure or union member
   -&#062;                pointer to structure or union member
   ------------------------------------------------------------------
   !                logical NOT                                right-to-left
   ~                one's complement
   -                unary negation
   ++                increment
   --                decrement
   &amp;                address of
   *                indirection
   (type)       type cast
   sizeof        size in bytes
   ------------------------------------------------------------------
   *                multiply                                left-to-right
   /                divide
   %                modulus
   ------------------------------------------------------------------
   +                add                                        left-to-right
   -                subtract
   ------------------------------------------------------------------
   &#060;&#060;                left shift                                left-to-right
   &#062;&#062;                right shift
   ------------------------------------------------------------------
   &#060;                less than                                left-to-right
   &#060;=                less than or equal
   &#062;                greater than
   &#062;=                greater than or equal
   ------------------------------------------------------------------
   ==                equal left-to-right
   !=                not equal
   ------------------------------------------------------------------
   &amp;                bitwise AND                                left-to-right
   ------------------------------------------------------------------
   ^                bitwise XOR                                left-to-right
   ------------------------------------------------------------------
   |                bitwise OR                                left-to-right
   ------------------------------------------------------------------
   &amp;&amp;                logical AND                                left-to-right
   ------------------------------------------------------------------
   ||                logical OR                                left-to-right
   ------------------------------------------------------------------
   ?:                conditional                                right-to-left
   ------------------------------------------------------------------
   =                assignment operators                        right-to-left
   *=  /=  %=  +=
   -=  &#060;&#060;=  &#062;&#062;=
   &amp;=  ^=  |=
   ------------------------------------------------------------------
   ,                comma left-to-right
   ------------------------------------------------------------------
</pre>
<hr>
<a href="main.html"><img src="toc.gif" alt="CONTENTS" border=0></a><a href="alphalist.html"><img src="index.gif" alt="INDEX" border=0></a><a href="wctomb().html"><img src="prev.gif" alt="PREV" border=0></a><a href="formatted_input_specifiers.html"><img src="next.gif" alt="NEXT" border=0></a><a href="http://www.hh.se/stud/d98rolb/programming.html"><img src="home.gif" alt="HOME" border=0></a>
</body>
</html>

