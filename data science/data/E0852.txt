ID=E0852
URL=http://www.delorie.com/djgpp/v2faq/faq18_6.html
SIZE=9604
DATE=12/07/02
TIME=19:25:05
DATASET=C
HTML=<html><head><title>DJGPP FAQ -- Fast access to absolute addresses</title>
<base href="http://www.delorie.com/djgpp/v2faq/faq18_6.html">
</head><body><center><!-- BEGIN RICH-MEDIA BURST! CODE --> 
     <script language="JavaScript"> 
     <!-- /* (C) 1997-1999 BURST! Media, LLC. All Rights Reserved.*/ 
     var TheAdcode = 'ad1954a'; 
     var bN = navigator.appName; 
     var bV = parseInt(navigator.appVersion); 
     var base='http://www.burstnet.com/'; 
     var Tv='/5294'; 
     var agt=navigator.userAgent.toLowerCase(); 
     if (bN=='Netscape'){ 
          if ((bV>=4)&&(agt.indexOf("mac")==-1))
     {  document.write('<s'+'cript src="'+ 
           base+'cgi-bin/ads/'+TheAdcode+'.cgi/RETURN-CODE/JS' 
           +Tv+'">'); 
          document.write('</'+'script>');    
     } 
          else if (bV>=3) {document.write('<'+'a href="'+base+'ads/'+ 
             TheAdcode+'-map.cgi'+Tv+'"target=_top>'); 
             document.write('<img src="' + base + 'cgi-bin/ads/' + 
             TheAdcode + '.cgi' + Tv + '" ismap width=468 height=60' + 
             ' border=0 alt="Click Here"></a>');} 
      } 
     if (bN=='Microsoft Internet Explorer') 
      document.write('<ifr'+'ame id=BURST src="'+base+'cgi-bin/ads/'
     + 
       TheAdcode + '.cgi' + Tv + '/RETURN-CODE" width=468 height=60' + 
       'marginwidth=0 marginheight=0 hspace=0 vspace=0 ' + 
       'frameborder=0 scrolling=no></ifr'+'ame>'); 
     // --> 
     </script> 
     <noscript><a href="http://www.burstnet.com/ads/ad1954a-map.cgi" target=_top> 
     <img src="http://www.burstnet.com/cgi-bin/ads/ad1954a.cgi" 
      width=468 height=60 border=0 alt="Click Here"></a> 
     </noscript> 
     <!-- END BURST CODE --> 
<table width=100% border=0 cellspacing=0 cellpadding=3><tr><td align=left valign=top bgcolor="#ffcc99"><small><font face="itc avant garde gothic,helvetica,arial"><b> &nbsp;
<a href="/" target="_top">www.delorie.com</a>/<a href="/djgpp/" target="_top">djgpp</a>/<a href="/djgpp/v2faq/" target="_top">v2faq</a>/faq18_6.html</b></font></small></td>
<td align=right valign=top bgcolor="#ffcc99"><small><font face="itc avant garde gothic,helvetica,arial"><b> &nbsp;
<a href="/search/">search</a> &nbsp;
</b></font></small></td>
</tr></table><a href="bulktrap.html"></a></center>

Node:<a name="Fat%20DS">Fat DS</a>,
Next:<a rel=next href="faq18_7.html">Above 1MB</a>,
Previous:<a rel=previous href="faq18_5.html">Move structs</a>,
Up:<a rel=up href="faq18.html">Low-level</a>
<br>

<h2>18.6 Fast access to absolute addresses</h2>

<p><em><strong>Q</strong>: The "farptr" functions are too slow for my application which
<strong>MUST</strong> have direct access to a memory-mapped device under DPMI. 
How can I have this in DJGPP?  My entire optimized graphics library is at
stake if I can't! <tt>:-(</tt></em>

<br><p>
<p><strong>A</strong>:  The following so-called <b>Fat DS</b>, or "nearptr" method was
suggested by <a href="mailto:junaid@barney.eng.monash.edu.au">Junaid A. Walker</a>
(he also posted a program which uses this technique to access the video
RAM; you can look it up by searching the mailing list archives).  But
first, a word of warning: the method I'm about to describe effectively
disables memory protection, and so might do all kinds of damage if used
by a program with a wild pointer.  It is depressingly easy, e.g., to
overwrite parts of DOS code or data with "Fat DS" on.  Or, as <a href="mailto:turnbull@shako.sk.tsukuba.ac.jp">Stephen Turnbull</a>
has put it when he read the description of this trick:

<blockquote>
<strong>Surgeon General's WARNING</strong>:  The description below uses the
"Fat DS hack", a steroid derivative which gives your program great
strength, a thick neck, baldness, and is known to be closely linked with
the Alzheimer's disease. 
</blockquote>

<p>In addition to the above warning, experience shows that many programs
which use the safer "farptr" functions do not sacrifice performance at
all.  So, with the exception of a small number of programs, "nearptr"
is really a convenience trick: it allows you to treat memory-mapped
devices with usual C pointers, rather than with function calls. 
Therefore, I would generally advise <strong>against</strong> using "nearptr"
due to speed considerations, unless your program absolutely needs the
last percent of speed.

<p>Having said that, here is the trick: you change the limit of the segment
descriptor stored in <small>DS</small> to <code>0xffffffff</code> (i.e., -1), using
library function <code>__djgpp_nearptr_enable</code>.  After that, you have
access to all the memory which is currently mapped in.  This works due to
32-bit wrap-around in the linear address space to access memory at, say,
linear address 0xa0000 (which belongs to the VGA), or any other address
on your memory-mapped device, by adding the value of the global variable
<code>__djgpp_conventional_base</code> to the target address. 
<code>__djgpp_conventional_base</code> is the negated base address of the
<small>DS</small> selector that you program is using to access its data.  By
adding the value of <code>__djgpp_conventional_base</code>, you effectively
<em>subtract</em> the <small>DS</small> base address, which makes the result
zero-based, exactly what you need to access absolute addresses.

<p>You should know up front that this trick won't work with every DPMI
host.  Linux's DOSEmu and Windows/NT won't allow you to set such a huge
limit on the memory segment, because these operating systems take memory
protection seriously; in these cases <code>__djgpp_nearptr_enable</code> will
return zero--a sign of a failure.  CWSDPMI, QDPMI, Windows 3.X and
Windows 9X all allow this technique (OS/2 Warp seems to allow it too, at
least as of version 8.200), but some events break this scheme even for
those DPMI hosts which will allow it.  A call to <code>malloc</code> or any
other library function which calls <code>sbrk</code> might sometimes change
the base address of the <small>DS</small> selector and break this method unless
the base address is recomputed after <code>sbrk</code> call.  (The "nearptr"
functions support this recomputation by providing you with the
<code>__djgpp_conventional_base</code> variable, but it is <em>your</em>
responsibility to recompute the pointers using it.)  The same change can
happen when you call <code>system</code>, and as a result of some other events
external to the executing code thread, like multitasking or debugger
execution.

<p>You should also know that the <code>__djgpp_nearptr_enable</code> function
in DJGPP v2.0 didn't verify that the limit was properly set.  So if the
DPMI server would fail the call <strong>silently</strong>, the function won't
detect it and will not return a failure indication.  DJGPP v2.01
corrects this omission by always verifying that the DPMI host has
honored the request, and returns a failure indication if it hasn't.

<p>If you are aware of these limitations, and don't need your code to run
under all DPMI hosts, it might be the fix to your problems.

<p>Confused about how exactly should you go about using this technique in
your program?  Look at the docs of the "nearptr" functions in
the Info file <code>libc.info</code> (node <code>__djgpp_nearptr_enable</code>).

<p>Another possibility is to use the DPMI function <code>0x508</code> (a wrapper
function <code>__dpmi_map_device_in_memory_block</code> is available in the
DJGPP library) that can map any range of physical memory addresses into
a block that you allocate.  Note that this is a DPMI 1.0 functionality
which is <strong>not</strong> supported by most DPMI 0.9 hosts (CWSDPMI does
support it).  There is a convenience helper function
<code>__djgpp_map_physical_memory</code> in the DJGPP C library that you can
use to call these services.

<p>If you need a nearptr-style access to a certain region of memory which
is above the base address of the <small>DS</small> selector, you can enlarge the
limit of the <small>DS</small> selector just enough to cover the highest address
you need to access.  To this end, use the library function
<code>__dpmi_set_segment_limit</code> like this (thanks to <a href="mailto:rudd@cyberoptics.com">Eric Rudd</a> for posting this code):

<pre> unsigned long new_limit;

 if (__dpmi_set_segment_limit (_my_ds (), new_limit) == 0)
   {
     if (__dpmi_get_segment_limit (_my_ds ()) != new_limit)
       /* The DPMI host ignored the call.  Fail.  */
     else
       {
         __dpmi_set_segment_limit (__djgpp_ds_alias, new_limit);
         __dpmi_set_segment_limit (_my_cs (), new_limit);
         _crt0_startup_flags |= _CRT0_FLAG_NEARPTR;
       }
   }
 else
   /* The call failed.  */
</pre>

<p>Remember that <code>new_limit</code> should have all its lower 12 bits set,
otherwise the above snippet will not work!

<p><hr>



<br clear=both></p>
<a href="bulktrap.html"></a><table width=100% border=0 cellspacing=0 cellpadding=3><tr>
<td align=left valign=top bgcolor="#ffcc99"><small><font face="itc avant garde gothic,helvetica,arial"><b> &nbsp;
<a href="/users/dj/" target="_top">webmaster</a> &nbsp;
<a href="/donations.html" target="_top">donations</a> &nbsp;
<a href="/store/books/" target="_top">bookstore</a> &nbsp;
</b></font></small></td>
<td align=right valign=top bgcolor="#ffcc99"><small><font face="itc avant garde gothic,helvetica,arial"><b> &nbsp;
<a href="/" target="_top">delorie software</a> &nbsp;
<a href="/privacy.html" target="_top">privacy</a> &nbsp;
</b></font></small></td>
</tr><tr><td align=left valign=top bgcolor="#ffcc99"><small><font face="itc avant garde gothic,helvetica,arial"><b> &nbsp;
<a href="/copyright.html" target="_top">Copyright © 2001</a> &nbsp;
<a href="/users/eliz/" target="_top">by Eli Zaretskii</a> &nbsp;
</b></font></small></td>
<td align=right valign=top bgcolor="#ffcc99"><small><font face="itc avant garde gothic,helvetica,arial"><b> &nbsp;
Updated Apr 2001 &nbsp;
</b></font></small></td>
</tr></table>
<center><iframe
 SRC="http://www.burstnet.com/cgi-bin/ads/ba1954a.cgi/RETURN-CODE/if/5294/"
 scrolling="no" marginwidth="0" marginheight="0" frameborder="0" vspace="0" hspace="0"
 width="468" height="60"><A target="_top"
 HREF="http://www.burstnet.com/ads/ba1954a-map.cgi/5294"><IMG SRC="http://www.burstnet.com/cgi-bin/ads/ba1954a.cgi/5294"
 border="0" width="468" height="60" alt="Please support our sponsor."></A></iframe><br><small><i>Please take a moment to fill out
this <a href="http://survey.burstmedia.com/cgi-win/client.exe?Burst,welcome,ad1954a,2000">visitor survey</a></i></small>
<br><small><i>You can help support this site by
visiting the advertisers that sponsor it! (only once each, though)</i></small>
</center>
</body></html>


