ID=E0254
URL=http://home.att.net/~robertdunn/CodeSamples/CheapTricks.html
SIZE=22731
DATE=12/07/02
TIME=19:19:13
DATASET=C
HTML=<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
 
<HTML>
 
<HEAD>
<META HTTP-EQUIV="CONTENT-TYPE"
 CONTENT="text/html; charset=iso-8859-1"> 
<TITLE>Yet Another Code Site - Cheap Tricks</TITLE>
<META NAME="GENERATOR" CONTENT="StarOffice/5.2 (Win32)"> 
<META NAME="CREATED" CONTENT="19981221;21240371"> 
<META NAME="CHANGEDBY" CONTENT="Robert Dunn"> 
<META NAME="CHANGED" CONTENT="20010308;19495006"> 
<META NAME="Template"
 CONTENT="C:\Program Files\Microsoft Office\Templates\Web Pages\Web Page Wizard.wiz">

</HEAD>

<BODY>
<TABLE WIDTH="100%" BORDER="0" CELLPADDING="0"
 CELLSPACING="0"> 
<TR>
  <TD WIDTH="100%" VALIGN="TOP" BGCOLOR="#000080">
	 <H1 ALIGN="CENTER" STYLE="margin-top: 0in"><A
	 NAME="TopOfPage"></A><FONT COLOR="#ffffff">Yet Another Code
	 Site</FONT></H1>
  </TD>
</TR>
</TABLE> 
<H2 ALIGN="CENTER">Cheap Tricks</H2>
<P ALIGN="LEFT">This page contains tricks that left me
  thinking &quot;why did I not think of that?&quot; or
  &quot;you can do that?&quot; or &quot;so that is how they
  do that!&quot;and other tips that may make your coding a
  little easier.&nbsp; Here you will find slick C/C++
  precompiler tricks, IDE shortcuts and configuration tips,
  and other bits that do not really belong anywhere
  else.&nbsp; Much of this is untested, so use it at your own
  risk.&nbsp; This page will undoubtedly be a mess initially,
  so please bear with me.
</P> 
<P ALIGN="LEFT">Warning:&nbsp; Some of the code provided
  below is Delphi/Pascal.&nbsp; It should be easy to convert
  &#150; and, as soon as I have a personal need to use the
  code, I will convert it to BCB/C++.&nbsp; In the meantime,
  it looks right to me, so I am adding it to this page in
  hopes that you will find it useful.&nbsp; If you translate
  it before I do, please send the code to me so that we can
  share it with others that follow.&nbsp; On the other hand,
  if a BCB version is not posted, please do not ask me to do
  it for you &#150; give it a try yourself....
</P> 
<P><IMG SRC="../Images/bludiamd.gif" NAME="Graphic1"
  ALIGN="BOTTOM" WIDTH="14" HEIGHT="14" BORDER="0">&nbsp;Get
  access to a private or protected class data member or
  method without changing the source.&nbsp;
  (01-06-1999)&nbsp; <A HREF="#Bmk001">Go to the trick</A>
</P> 
<P><IMG SRC="../Images/bludiamd.gif" NAME="Graphic2"
  ALIGN="BOTTOM" WIDTH="14" HEIGHT="14"
  BORDER="0">&nbsp;Giving an application real-time
  priority.&nbsp; (02-23-2000)&nbsp; <A HREF="#Bmk002">Go to
  the trick.</A>
</P> 
<P><IMG SRC="../Images/bludiamd.gif" NAME="Graphic7"
  ALIGN="BOTTOM" WIDTH="14" HEIGHT="14"
  BORDER="0">&nbsp;Constrain a value to a permitted range of
  values.&nbsp; (02-14-1999)&nbsp; <A HREF="#Bmk003">Go to
  the trick</A><A HREF="#Bmk004">.</A>
</P> 
<P><IMG SRC="../Images/bludiamd.gif" NAME="Graphic8"
  ALIGN="BOTTOM" WIDTH="14" HEIGHT="14"
  BORDER="0">&nbsp;Associate a file extension with an
  application.&nbsp; (04-14-1999)&nbsp; <A HREF="#Bmk004">Go
  to the trick</A><A HREF="#Bmk005">.</A>
</P> 
<P><IMG SRC="../Images/bludiamd.gif" NAME="Graphic9"
  ALIGN="BOTTOM" WIDTH="14" HEIGHT="14" BORDER="0">&nbsp;Run
  an application at Windows startup without putting the
  application in the Programs | Startup menu.&nbsp;
  (02-14-1999)&nbsp; <A HREF="#Bmk005">Go to the trick</A><A
  HREF="#Bmk006">.</A>
</P> 
<P><IMG SRC="../Images/bludiamd.gif"
  NAME="Graphic10" ALIGN="BOTTOM" WIDTH="14" HEIGHT="14"
  BORDER="0">&nbsp;Unpublish a VCL property.&nbsp;
  (02-14-1999)&nbsp; <A HREF="#Bmk006">Go to the trick</A><A
  HREF="#Bmk007">.</A>
</P> 
<P><IMG SRC="../Images/bludiamd.gif"
  NAME="Graphic15" ALIGN="BOTTOM" WIDTH="14" HEIGHT="14"
  BORDER="0">&nbsp;Disable task switching (e.g., prevent
  applications from using &lt;Alt-Tab&gt; to change
  tasks).&nbsp; (02-18-1999)&nbsp; <A HREF="#Bmk007">Go to
  the trick</A><A HREF="#Bmk008">.</A>
</P> 
<P><IMG SRC="../Images/bludiamd.gif" NAME="Graphic5"
  ALIGN="BOTTOM" WIDTH="14" HEIGHT="14"
  BORDER="0">&nbsp;Debugging access violations.&nbsp;
  (04-14-1999)&nbsp; <A HREF="#Bmk008">Go to the trick</A><A
  HREF="#Bmk009">.</A>
</P> 
<P><IMG SRC="../Images/bludiamd.gif"
  NAME="Graphic18" ALIGN="BOTTOM" WIDTH="14" HEIGHT="14"
  BORDER="0">&nbsp;Easy source code version comparisons, not
  merely cheap, but free (at least with Windows 98).&nbsp;
  (04-17-1999)&nbsp; <A HREF="#Bmk009">Go to the trick</A><A
  HREF="#Bmk010">.</A>
</P> 
<P><IMG SRC="../Images/bludiamd.gif"
  NAME="Graphic19" ALIGN="BOTTOM" WIDTH="14" HEIGHT="14"
  BORDER="0">&nbsp;Simple wildcard matching for
  AnsiStrings.&nbsp; (03-06-2001)&nbsp; <A HREF="#Bmk010">Go
  to the trick.</A>
</P> <HR>
<P><A NAME="Bmk001"></A><B><IMG
  SRC="../Images/bludiamd.gif" NAME="Graphic4" ALIGN="BOTTOM"
  WIDTH="14" HEIGHT="14" BORDER="0">&nbsp;Get access to a
  private or protected class data member or method without
  changing the source.</B>
</P> 
<P>Borland, for some unfathomable reason, decided to make
  member data private in many of the VCL classes.&nbsp; I
  cannot count how many times that this has interfered with
  my plans.&nbsp; Here is a rather clever way to get around
  it, (although it is analogous to killing a fly with a
  surface-to-air missile):
</P> <PRE STYLE="margin-left: 0.5in">#define private public
#define protected public
#include &lt;theworld.h&gt;
#undef private
#undef public</PRE>

<P> Harold Howe's comments:&nbsp; &quot;Don't laugh.&nbsp;
  I've used this to get out of jams when there was no other
  way out than to edit a header file.&nbsp; I usually only
  define the variables for the one header file that is
  causing the problem, then I undef them.&quot;
</P> 
<P>Glommed from borland.public.cppbuilder.non-technical
  newsgroup post by Harold Howe (Team B).
</P> <HR>
<P><A NAME="Bmk002"></A><B><IMG
  SRC="../Images/bludiamd.gif" NAME="Graphic3" ALIGN="BOTTOM"
  WIDTH="14" HEIGHT="14" BORDER="0">&nbsp;Giving an
  application real-time priority.</B>
</P> 
<P>Generally, changing the
  processing priority is *not* a Good Thing for applications
  to do.&nbsp; But if you absolutely must change the
  priorities, Serge Kreutzmann provided the following code
  and notes:
</P> <PRE STYLE="margin-left: 0.5in">// HIGH_PRIORITY_CLASS is in most cases a better choice, then the REALTIME_PRIORITY_CLASS
// ****************************************************
//  Fuction changes priority of current process:
//
//  following arguments can be used:
//       IDLE_PRIORITY_CLASS, NORMAL_PRIORITY_CLASS,
//       HIGH_PRIORITY_CLASS, REALTIME_PRIORITY_CLASS
// ****************************************************
void SetAppPriority(DWORD dwPiority)
{
   // Detemine Process Handle using OpenProcess() and pass it to
   // SetPriorityClass():

   if(!::SetPriorityClass(GetCurrentProcess(),dwPiority))
     ShowMessage(&quot;Cannot change the Process Priority!&quot;);
}</PRE>

<P> Of course, use this only where absolutely necessary.
</P> <HR>
<P><A NAME="Bmk003"></A><B><IMG
  SRC="../Images/bludiamd.gif" NAME="Graphic11"
  ALIGN="BOTTOM" WIDTH="14" HEIGHT="14"
  BORDER="0">&nbsp;Constrain a value to a permitted range of
  values.</B>
</P> 
<P>I frequently find myself writing code that looks
  something like this:
</P> <PRE STYLE="margin-left: 0.5in">if (x &lt; 1) x = 1;
if (x &gt; 10) x = 10;</PRE>

<P> All I want to do is ensure that x lies between 1 and 10
  (in this example).&nbsp; Here is a template that makes this
  a bit simpler:
</P> <PRE STYLE="margin-left: 0.5in">template&lt;class T&gt; inline T constrain(const T&amp; value, const T&amp; low,const T&amp; high) {
        return (high &lt; value) ? high : (value &lt; low) ? low : value;
        }</PRE>

<P> With this template defined, you can simply write:
</P> <PRE STYLE="margin-left: 0.5in">x = constrain(x, 1, 10);</PRE>

<P> Put this in your toolbox to save a few keystrokes.
</P> <HR>
<P><A NAME="Bmk004"></A><B><IMG
  SRC="../Images/bludiamd.gif" NAME="Graphic12"
  ALIGN="BOTTOM" WIDTH="14" HEIGHT="14"
  BORDER="0">&nbsp;Associate a file extension with an
  application.</B>
</P> 
<P>From a newsgroup post:&nbsp; &quot;How can I get my
  application to register a file type with Windows?&nbsp; I
  would like my application to open when someone
  double-clicks on one of the files, that the application
  creates in Explorer.&quot;&nbsp; Here is one response:
</P> 
<P>You have to create some keys in
  the registry, under HKEY_CLASSES_ROOT:
</P> <PRE STYLE="margin-left: 0.5in">key:  &lt;fileextension&gt;  (e.g., .dat, containing the dot)
default value: &lt;typename&gt;  (e.g., myApp.Datafile)

key: &lt;typename&gt;
default value: &lt;display name&gt; (displayed in Explorer for the file type)

key: &lt;typename&gt;\shell\open\command
default value: &lt;full executable path&gt; &quot;%1&quot;</PRE>

<P> Use RegEdit to examine some
  existing entries, e.g., for the *.txt extension.
</P> 
<P>Another response:
</P> 
<P>Assuming you can write to the
  appropriate areas of the Registry (i.e., you are not
  running under WinNT with funky security problems) then you
  can create a key structure similar to this:
</P> <PRE STYLE="margin-left: 0.5in">HKEY_CLASSES_ROOT\.ext
    (Default)   &quot;MyProg.File&quot;</PRE>

<P> This sets the association
  between the file extension &quot;.ext&quot; with the type
  &quot;MyProg.File&quot;:
</P> <PRE STYLE="margin-left: 0.5in">HKEY_CLASSES_ROOT\MyProg.File
    (Default)   &quot;Type Description&quot;
HKEY_CLASSES_ROOT\MyProg.File\Shell\Open\Command
    (Default)   &quot;c:\path\myprog.exe &quot;%1&quot;&quot;</PRE>

<P> Those three values will launch
  the program &quot;c:\path\myprog.exe&quot; in response to a
  double-click in Explorer (or right-click and select
  'Open'), passing the name of the file that you
  double-clicked on.
</P> 
<P>You might also want to set a
  default icon for your new filetype:
</P> <PRE STYLE="margin-left: 0.5in">HKEY_CLASSES_ROOT\MyProg.File\DefaultIcon
    (Default)   &quot;F:\WIN95\SYSTEM\shell32.dll,-154&quot;</PRE>

<P> (I yanked that icon
  declaration out of the Win95 registry entry for 'vxdfile' -
  play around with it, or add icons to your program for your
  files).
</P> 
<P>Glommed from borland.public.delphi.winapi newsgroup
  posts by Peter Below (TeamB) and Corey Murtagh.
</P> <HR>
<P><A NAME="Bmk005"></A><B><IMG
  SRC="../Images/bludiamd.gif" NAME="Graphic13"
  ALIGN="BOTTOM" WIDTH="14" HEIGHT="14" BORDER="0">&nbsp;Run
  an application at Windows startup without putting the
  application in the Programs | Startup menu.</B>
</P> 
<P>A netizen asked:&nbsp; &quot;I don't want to use the
  StartUp group.&nbsp; How can I have a program run on
  Win95/98 start (a la the &quot;load&quot; and
  &quot;run&quot; entries in win.ini)?&quot;&nbsp; Yoto
  Yotov, a quite reliable source, gave this (edited) advice:
</P> <PRE STYLE="margin-left: 0.5in">Add a value to the Registry entry:
        HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run.

Example:
        Name: MyApp
        Data: &quot;c:\myapppath\myappname.exe&quot;

Visit &quot;The Bits&quot; (http://www.cbuilder.dthomas.co.uk) for some tutorials
on how to edit the registry.</PRE>

<P> Glommed from borland.public.cppbuilder.language
  newsgroup post by Yoto Yotov.
</P> <HR>
<P><A NAME="Bmk006"></A><B><IMG
  SRC="../Images/bludiamd.gif" NAME="Graphic14"
  ALIGN="BOTTOM" WIDTH="14" HEIGHT="14"
  BORDER="0">&nbsp;Unpublish a VCL property.</B>
</P> 
<P>Another newsgroup question:&nbsp; &quot;Is there a way
  to 'unpublish' inherited published properties, so that they
  are not displayed by the object inspector?&quot;&nbsp;
  Frankly, I thought that this was pretty close to
  impossible, especially given Borland's &quot;you cannot
  unpublish properties&quot; commentary in several
  sources.&nbsp; Here is slightly edited advice that solves
  the problem imperfectly, but adequately:
</P> 
<P>Assume that the component you
  inherit from is TDummy:
</P> <PRE STYLE="margin-left: 0.5in">TDummy = class (TComponent)
published
        property DummyProperty : String read GetDummyProperty write SetDummyProperty;
end;</PRE>

<P> Then you want your component
  to inherit from this (stupid) component:
</P> <PRE STYLE="margin-left: 0.5in">TDummyEx = class (TDummy)
        ...
end;</PRE>

<P> To hide the property, just do
  this:
</P> <PRE STYLE="margin-left: 0.5in">TDummyEx = class(TDummy)
        ...
published
        property DummyProperty : String read GetDummyProperty;
end;</PRE>

<P> You tell Delphi that this
  property becomes read-only, and then it won't show it in
  the object inspector.&nbsp; If you (the component
  developer) need to modify this property value by code just
  call the inherited one.&nbsp; If GetDummyProperty was
  private (bad!), just make a wrapper method to call the
  inherited one:
</P> <PRE STYLE="margin-left: 0.5in">TDummyEx = class(TDummy)
...
protected
        function GetMyDummyProperty : String;
published
        property DummyProperty : String read GetMyDummyProperty;
end;

with:
function TDummyEx.GetMyDummyProperty : String;
begin
        result := inherited DummyProperty;
end;</PRE>

<P> Although the example is Delphi code, I am pretty sure
  that I have used this same technique (admittedly, by
  accident) with the same results in BCB.
</P> 
<P>Glommed from
  borland.public.delphi.vcl.components.writing newsgroup post
  by Olivier Deckmyn.
</P> <HR>
<P><A NAME="Bmk007"></A><B><IMG
  SRC="../Images/bludiamd.gif" NAME="Graphic17"
  ALIGN="BOTTOM" WIDTH="14" HEIGHT="14"
  BORDER="0">&nbsp;Disable task switching (e.g., prevent
  applications from using &lt;Alt-Tab&gt; to change
  tasks).</B>
</P> 
<P>A surprising number of newsgroup posts ask how to
  prevent users from changing to another task.&nbsp; I must
  admit that I find this to be an odd request &#150; why
  would anyone want to subvert the normal Win95 user
  interface?&nbsp; And there is typically no justification
  for these requests.&nbsp; Frankly, I do not wish to find
  that most of my application software behaves in this
  fashion and, worse yet, I find myself questioning why
  anyone would want to do this.&nbsp; However, it is so
  simple that anyone that thinks this is desirable and
  necessary can easily find the solution, so I will share it
  here.
</P> 
<P>The solution is to trick Windows into thinking that a
  screen saver is running.&nbsp; Here is a post answered,
  once again, by the knowledgeable Mr. Yotov.
</P> 
<P STYLE="margin-left: 0.5in"><B>Question:&nbsp; </B>How do
  I prevent task switching (Alt-Tab, Ctrl-Esc, Ctrl-Alt-Del)
  in my application?
</P> 
<P STYLE="margin-left: 0.5in"><B>Answer:</B>&nbsp;
  Preventing a user from switching to another application is
  possible under Windows 95 [and Win98 &#150;ed] and earlier
  versions of Windows by tricking Windows into thinking the
  screen saver is running.&nbsp; This method does not work
  under Windows NT and is not guaranteed to be available in
  future versions of Windows.&nbsp; Many versions of Windows
  may also respond to a task switching trap installed by a
  CBT (Computer Based Training) application hook.&nbsp; To
  prevent task switching under Windows NT, you will need
  access to a third party keyboard device device driver.
</P> 
<P STYLE="margin-left: 0.5in">The following code will trick
  Windows 3.1/95 [and 98 &#150;ed] into believing that the
  screen saver is running:
</P> <PRE STYLE="margin-left: 1in">unsigned long OldValue;
//turns trap on
SystemParametersInfo(97, true, &amp;OldValue, 0);
//turns trap off
SystemParametersInfo(97, false, &amp;OldValue, 0);</PRE>

<P> Glommed from borland.public.cppbuilder.language
  newsgroup post by Yoto Yotov.
</P> <HR>
<P><A NAME="Bmk008"></A><B><IMG
  SRC="../Images/bludiamd.gif" NAME="Graphic16"
  ALIGN="BOTTOM" WIDTH="14" HEIGHT="14"
  BORDER="0">&nbsp;Debugging access violations.</B>
</P> 
<P>Debugging is a pain, especially when you get
  uninformative errors from the operating system.&nbsp; For
  example, a developer posted this problem:&nbsp; An access
  violation occurred when he closed his program.&nbsp; The
  following edited and partial answer demonstrates a
  generally useful technique.
</P> 
<P>The access violation dialog
  should say that an access violation happened at XXXXXX:
  read of address YYYYYY.&nbsp; Try running your program in
  the debugger.&nbsp; Pause the program and bring up the view
  CPU pane.&nbsp; In the upper left pane, right click and
  select Go To Address.&nbsp; Go to the address that caused
  the access violation.&nbsp; Look around a little bit and
  see if you can find where you are in the program.
</P> 
<P>Insert some breakpoints and try
  to close the program.&nbsp; When you hit a breakpoint, view
  the call stack and see if it gives any clues.
</P> 
<P>Glommed from borland.public.cppbuilder.language
  newsgroup post by Harold Howe (TeamB).
</P> <HR>
<P><A NAME="Bmk009"></A><B><IMG
  SRC="../Images/bludiamd.gif" NAME="Graphic6" ALIGN="BOTTOM"
  WIDTH="14" HEIGHT="14" BORDER="0">&nbsp;Easy source code
  version comparisons, not merely cheap, but free (at least
  with Windows 98).</B>
</P> 
<P>I frequently find myself trying to identify the
  differences between two versions of a source file.&nbsp;
  Usually, the code worked before making several changes, now
  it is broken, and I do not recall what I did.&nbsp; If only
  I had a tool for comparing the old and new versions....
</P> 
<P>Well, Microsoft had already come to my rescue &#150; I
  just did not know it.&nbsp; I stumbled upon Start Menu |
  Programs | Accessories | Windows 98 Resource Kit | Tools
  Management Console, a freebie from the Windows 98 upgrade
  disk.&nbsp; The Console has a number of useful tools
  including a source code comparison utility called WinDiff.
</P> 
<P>WinDiff is pretty neat.&nbsp; It allows you to enter two
  directories to compare.&nbsp; It then identifies the files
  that exist in only one or the other directory, the files
  that exist in both directories, and, for these, which are
  the same and which are different.&nbsp; From this list you
  can open a file that exists in both directories with a
  click.&nbsp; This displays the files with lines that were
  added, deleted, or changed highlighted in different
  colors.&nbsp; A creative and effective graphical
  representation of your current location with respect to
  differences in the files is presented in a separate pane to
  the left of the source code.
</P> 
<P>It took me a while to figure out how to use it (hint
  &#150; spend some time with the help file), but once I did,
  life got much easier.&nbsp; My only complaint is that
  selecting the directories to be compared is not done using
  a Browse Folders dialog.&nbsp; Instead, you must know the
  full path names of the folders and key them into simple
  edit boxes.&nbsp; I worked around this annoyance by writing
  a &quot;launcher&quot; that takes advantage of the
  documented command line interface to start WinDiff with a
  pair of directories already selected.&nbsp; (If you would
  like a copy of the WinDiff Launcher executable, drop me an
  e-mail.&nbsp; If I get enough requests, I will post it on
  the site.)
</P> 
<P>If you are interested in this utility, scan your
  drive(s) for WinDiff.exe.&nbsp; On my machine, it is
  located at C:\Win98CD\tools\reskit\file\windiff.exe.&nbsp;
  If you do not find it, look on your Windows 98 installation
  disk in \tools\reskit\file.&nbsp; If you have Windows 95 or
  NT, look around and let me know if you find it (and send me
  the details about where you found it so that I may add the
  information to this entry).
</P> <HR>
<P><A NAME="Bmk010"></A><B><IMG
  SRC="../Images/bludiamd.gif" NAME="Graphic20"
  ALIGN="BOTTOM" WIDTH="14" HEIGHT="14"
  BORDER="0">&nbsp;Simple wildcard matching for
  AnsiStrings.</B>
</P> 
<P>The VCL contains an extremely poorly documented class,
  TMask, that allows wildcard comparisons of strings.&nbsp;
  TMask works similarly to filename masks, but adds a bit
  more flexibility and works with AnsiStrings directly.
</P> 
<P>Ok, that is a bit oblique, so an example may help.&nbsp;
  Assume that you have an AnsiString called SomeString and
  you want to know if it begins with &quot;foo&quot; and ends
  with &quot;bar&quot; with any number of characters between
  &quot;foo&quot; and &quot;bar&quot;.&nbsp; You can use the
  following to test for this:
</P> <PRE STYLE="margin-left: 0.5in">// required #include for the TMask class
#include &quot;masks.hpp&quot;
AnsiString SomeString;
bool Matches;

TMask* foobarMask = new TMask(&quot;foo*bar&quot;);
SomeString = &quot;foobar&quot;;
Matches = foobarMask-&gt;Matches(SomeString);  // Matches is true
SomeString = &quot;fooXXXbar&quot;;
Matches = foobarMask-&gt;Matches(SomeString);  // Matches is true
SomeString = &quot;fobar&quot;;
Matches = foobarMask-&gt;Matches(SomeString);  // Matches is false

delete foobarMask;</PRE>

<P> As you see, '*' matches zero or more characters.&nbsp;
  You can also use '?' to match exactly one character;
  &quot;[a-c]&quot; to match exactly one 'a', 'b', or 'c';
  and &quot;[!a-c]&quot; to match any character except 'a',
  'b', and 'c'.&nbsp; See the BCB help for TMask for more
  information and, if you are still unsure how it works, play
  with it a bit....
</P> <HR>
<TABLE WIDTH="100%" BORDER="0" CELLPADDING="2"
 CELLSPACING="0"> 
<TR VALIGN="TOP">
  <TD WIDTH="*" BGCOLOR="#e6e6e6">
	 <P><FONT SIZE="-1"><B><A HREF="../Yacs.html" TARGET="_top">Home</A> |
		<A HREF="#TopOfPage" TARGET="_top">Top Of Page</A> |
		<A HREF="../Yacs.html#CodeSection" TARGET="_top">Code</A> |
		<A HREF="../Yacs.html#Papers" TARGET="_top">Papers</A> |
		<A HREF="../Yacs.html#FAQs" TARGET="_top">FAQs</A> |
		<A HREF="../Links.html" TARGET="_top">Links</A> |
		<A HREF="../Yacs.html#SiteSearch" TARGET="_top">Search</A>
		| <A HREF="../Yacs.html#ContactMe" TARGET="_top">Feedback</A></B></FONT>
	 </P> 
  </TD>
  <TD WIDTH="*" BGCOLOR="#e6e6e6">
	 <P ALIGN="RIGHT"><FONT SIZE="-1">Page updated 
		<SCRIPT LANGUAGE="javascript" TYPE="text/javascript" SRC="../lstmoddt.js">
			</SCRIPT> </FONT>
	 </P> 
  </TD>
</TR>
</TABLE> 
<P ALIGN="CENTER"><FONT SIZE="-1"><B>Copyright &copy; 1998-2001 Thin Air
  Enterprises and Robert Dunn.&nbsp; All rights reserved.</B></FONT>
</P> 
</BODY>
</HTML>


