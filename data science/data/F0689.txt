ID=F0689
URL=http://vbtechniques.com/content.asp?a=co&cID=626
SIZE=7832
DATE=09/07/2002
TIME=13:24:34
DATASET=Visual Basic
HTML=<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<title>VB Techniques: New Functions in Visual Basic 6.0</title>
<style type="text/css" title="Techniques Style Sheet">
<!-- This is the toolbar at the top of the page -->
.headingbar {
	background-color : Black;
	color: White;
}
.headinglink {
	color : White;
	text-decoration : none;
	font-family : Tahoma, Arial, sans-serif;
	font-size : 8pt;
}

<!-- All standard text in the page gets this style -->
.text {
	color: Black;
	font-family: Tahoma, Arial, sans-serif;
	font-size: 10pt;
}

.text_grayed {
	color: Silver;
	font-family: Tahoma, Arial, sans-serif;
	font-size: 10pt;
}

.text_error {
	color: Red;
	font-family: Tahoma, Arial, sans-serif;
	font-size: 10pt;
}

<!-- The title on the page uses this style -->
.pageheading {
	color: #000080;
	font-family: Verdana, Arial, sans-serif;
	font-size: 16pt;
	font-weight: bold;
	
}
.subheading {
	color: #000080;
	font-family: Verdana, Arial, sans-serif;
	font-size: 12pt;
	font-weight: bold;
}
.copyright
{
    COLOR: #000000;
    TEXT-ALIGN: left;
    FONT-FAMILY: Tahoma, Arial, sans-serif;
    FONT-SIZE: 8pt
}

<!-- Prompts and boxes in forms use this style -->
.form {
	font-family: Arial, sans-serif;
	font-size: 8pt;
}
.tableheading {
	font-family: Arial, sans-serif;
	font-size: 8pt;
	color: white;
	background-color: #000080;
	text-align : center;
}
.table {
	font-family: Arial, sans-serif;
	font-size: 8pt;
	background-color: White;
}
.tableshaded {
	font-family: Arial, sans-serif;
	font-size: 8pt;
	background-color: Silver;
}
.tabletoday {
	font-family: Arial, sans-serif;
	font-size: 8pt;
	background-color: Silver;
}
PRE {
   padding-top: 10px;
   padding-bottom: 10px;
   padding-left: 10px;
   background-color: #EEEEEE;
}

</style>
<script language="JavaScript">
function onLink(L)
{
	if (L.style.color = 'White')
	{
	   L.style.color = 'Yellow';
		L.style.textDecoration = "underline";
	}
}
function offLink(L)
{
	if (L.style.color = 'Yellow')
	{
		L.style.color = 'White';
		L.style.textDecoration = "none";
	}
		
}
</script>
</head>
<body leftmargin="0" topmargin="0" marginheight="0" marginwidth="0" bgcolor="#FFFFFF">
<table width=100% cellspacing=0 cellpadding=4 border=0>
<tr><td width="250" background="/images/stripe_vb.gif"><img src="/images/logo_vb.gif" valign="middle" width=250 height=80 border=0></td><td width="100%" background="/images/stripe_vb.gif"><a href="http://click.linksynergy.com/fs-bin/stat?id=0DYcYQoW7OM&subid=0"><IMG alt=icon border=0 hspace=50 vspace=10  width=468 height=60 src="http://ad.linksynergy.com/fs-bin/show?id=0DYcYQoW7OM&bids=+22117.10000191+22117.10000192+22117.10000196+27778+29496+29744+31083&gridnum=1&subid=0"></a></td></tr>
<tr><td colspan=2 class=headingbar bgcolor="#000000##"><span class=headinglink>
<a href="default.asp"><span class="headinglink" onmouseover="onLink(this);" onmouseout="offLink(this);">Home</span></a>
&nbsp;&#8226;&nbsp;
<a href="search.asp"><span class="headinglink" onmouseover="onLink(this);" onmouseout="offLink(this);">Search</span></a>
&nbsp;&#8226;&nbsp;
<a href="forum.asp"><span class="headinglink" onmouseover="onLink(this);" onmouseout="offLink(this);">Forums</span></a>
&nbsp;&#8226;&nbsp;
<a href="content.asp?a=se&sID=5"><span class="headinglink" onmouseover="onLink(this);" onmouseout="offLink(this);">Articles</span></a>
&nbsp;&#8226;&nbsp;
<a href="content.asp?a=se&sID=8"><span class="headinglink" onmouseover="onLink(this);" onmouseout="offLink(this);">Interviews</span></a>
&nbsp;&#8226;&nbsp;
<a href="content.asp?a=se&sID=9"><span class="headinglink" onmouseover="onLink(this);" onmouseout="offLink(this);">Links</span></a>
&nbsp;&#8226;&nbsp;
<a href="content.asp?a=se&sID=6"><span class="headinglink" onmouseover="onLink(this);" onmouseout="offLink(this);">Reviews</span></a>
&nbsp;&#8226;&nbsp;
<a href="content.asp?a=se&sID=28"><span class="headinglink" onmouseover="onLink(this);" onmouseout="offLink(this);">Tip Archive</span></a>
&nbsp;&#8226;&nbsp;
<a href="content.asp?a=se&sID=34"><span class="headinglink" onmouseover="onLink(this);" onmouseout="offLink(this);">VB 6.0 Toolkit</span></a>
&nbsp;&#8226;&nbsp;
<a href="content.asp?a=se&sID=7"><span class="headinglink" onmouseover="onLink(this);" onmouseout="offLink(this);">Visual Basic 6.0 Bible</span></a>
&nbsp;&#8226;&nbsp;
<a href="about.asp"><span class="headinglink" onmouseover="onLink(this);" onmouseout="offLink(this);">About</span></a>
</td></tr>
<tr><td colspan=2 valign=top width="600">
<span class=subheading>New Functions in Visual Basic 6.0</span>
<span class=text><p>
<p>
Besides the major features added to Visual Basic 6.0, there were also a few new functions added to the VB language. The documentation mentions them but doesn't spend much effort promoting them. Some of these functions were introduced in the last revision of VBScript and have since been brought over to the Visual Basic product. This article documents these functions and how to use them. 
<p>
<b>Filter function</b>
<p>
The Filter function allows you to search an array for all strings that match (or don't match) a set of criteria. The function returns a variant array with the results. This code snippet demonstrates the use of this function.
<p>
<pre>
Sub Main()
   Dim a_strTest(1 To 10) As String
   Dim a_strResult As Variant
   Dim i As Integer
   
   For i = 1 To 10
      a_strTest(i) = "Value " & i
   Next i
   
   a_strResult = Filter(a_strTest, "5")
   
   For i = 0 To UBound(a_strResult)
      Debug.Print a_strResult(i)
   Next i
   
End Sub
</pre>
The Filter function is being used here to only return strings with a 5 in them. The results of this code are to print "Value 5" and nothing else. The return variable has to be a Variant, but you can use the Ubound function to return the upper bound of this zero-based array. This function also has the ability to either match or ignore the case of the characters in the string. 
<p>
<b>InStrRev function</b>
<p>
This function works in a similar manner to the InStr function except that it starts looking for a substring at the end of the string instead of the beginning. 
<p>
<b>Join function</b>
<p>
The Join function takes  an array full of strings and puts them all together into a single string. The function also allows you to specify the string that should go between each pair of strings. Look at this code example:
<p>
<pre>
Sub Main()
   Dim a_strTest(1 To 5) As String
   Dim a_strResult As Variant
   Dim i As Integer
   
   For i = 1 To 5
      a_strTest(i) = "Value " & i
   Next i
   
   Debug.Print Join(a_strTest, ", ")
   
End Sub
</pre>
<p>
The output of this function is:
<p>
<pre>
Value 1, Value 2, Value 3, Value 4, Value 5
</pre>
<p>
<b>Replace function</b>
<p>
The Replace function is going to eliminate a collective ton of code. This function searches a string and replaces a substring with another substring. While this code is easy to build manually, this function has earned a permanent place in my toolbox. Look at this code example:
<p>
<pre>
Sub Main()
   Debug.Print Replace("The quick brown fox", "quick", "slow")
End Sub
</pre>
<p>
The output of this function is:
<p>
<pre>
The slow brown fox
</pre>
<p>
This function has the ability to either match or ignore the case of the characters in the string. 
<p>
<b>Split function</b>
<p>
The Split function is used to break a single string into a Variant array. It breaks the string whenever it finds a particular character or sequence of characters. This is a valuable tool if you are parsing input data that is comma or tab delimited, for instance. You simply feed the string into the Split function and out comes an array that's broken for you. Look at this example:
<p>
<pre>
Sub Main()
   Dim strTest As String
   Dim a_strResult As Variant
   Dim i As Integer
   
   strTest = "The quick brown fox"
   a_strResult = Split(strTest, " ")
   For i = 0 To UBound(a_strResult)
      Debug.Print a_strResult(i)
   Next i
    
End Sub
</pre>
<p>
The result of this function is:
<pre>
The
quick
brown
fox
</pre>
Note that the space character has been stripped from the resulting strings. This function has the ability to only return a certain number of strings and can also ignore or enforce case sensitive matching. 
<p>
<b>StrReverse function</b>
<p>
This function reverses a string, plain and simple. 
<p>
<b>MonthName function</b>
<p>
This function, also a common one in programmer's toolboxes, returns the name or abbreviation of a month. You give the function a number from 1 to 12, and it returns the name of the month. You can specify an additional argument to indicate if the month name should be abbreviated to three letters. 
<p>
<b>WeekdayName function</b>
<p>
This function returns the name of the weekday. You give the function a number from 1 to 7, and it returns the name of the day. The first day of the week is set in your Control Panel under Regional Settings. You can also abbreviate the name to three characters by adding an additional argument. 

</p>
<p class="text"><i>Written by Eric Smith on 3/1/2000</i></p>
<p class="text"><b>Categories</b></p>
<span class="text"><a href="http://vbtechniques.com/content.asp?a=ct&cID=85">VB Techniques Articles, Built-in Functions and Objects Category</a><br>
</span>
</span>
</td></tr></table>
<table width="100%" cellpadding=4><tr><td>
<br><br><br><hr noshade>
<span class=copyright>
Copyright &copy; 2002 by Northstar Computer Systems.<br>
Contact the <a href="mailto:editor@vbtechniques.com">webmaster</a> with any comments, questions or problems with the site.</span>
</td></tr></table>
</body></html>

