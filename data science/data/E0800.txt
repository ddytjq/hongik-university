ID=E0800
URL=http://www.linuxdoc.org/HOWTO/PHP-HOWTO-7.html
SIZE=3053
DATE=12/07/02
TIME=19:24:33
DATASET=C
HTML=<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
 <META NAME="GENERATOR" CONTENT="SGML-Tools 1.0.9">
 <TITLE>PHP HOW-TO: A Simple Example</TITLE>
 <LINK HREF="PHP-HOWTO-8.html" REL=next>
 <LINK HREF="PHP-HOWTO-6.html" REL=previous>
 <LINK HREF="PHP-HOWTO.html#toc7" REL=contents>
</HEAD>
<BODY>
<A HREF="PHP-HOWTO-8.html">Next</A>
<A HREF="PHP-HOWTO-6.html">Previous</A>
<A HREF="PHP-HOWTO.html#toc7">Contents</A>
<HR>
<H2><A NAME="s7">7. A Simple Example</A></H2>

<P>Suppose you have a form:
<BLOCKQUOTE><CODE>
<PRE>
&lt;FORM ACTION="/cgi-bin/php.cgi/~userid/display.html" METHOD=POST> 
&lt;INPUT TYPE="text" name="name"> 
&lt;INPUT TYPE="text" name="age"> 
&lt;INPUT TYPE="submit"> 
&lt;FORM> 
</PRE>
</CODE></BLOCKQUOTE>

Your display.html file could then contain something like:
<BLOCKQUOTE><CODE>
<PRE>
&lt; ?echo "Hi $ name, you are $ age years old!&lt;p>" &gt;
</PRE>
</CODE></BLOCKQUOTE>

It's that simple! PHP automatically creates a variable for each form
input field in your form. You can then use these variables in the ACTION
URL file.
<P>The next step once you have figured out how to use variables is to start
playing with some logical flow tags in your pages. For example, if you
wanted to display different messages based on something the user inputs,
you would use if/else logic. In our above example, we can display different
things based on the age the user entered by changing our display.html to:
<BLOCKQUOTE><CODE>
<PRE>
&lt;?
    if($age>50);
        echo "Hi $name, you are ancient!&lt;p>";
    elseif($age>30);
        echo "Hi $name, you are very old!&lt;p>";
    else;
        echo "Hi $name.";
    endif;
>
</PRE>
</CODE></BLOCKQUOTE>

PHP provides a very powerful scripting language which will do much more
than what the above simple example demonstrates. See the section on the
PHP Script Language for more information.
<P>You can also use PHP to configure who is allowed to access your pages.
This is done using a built-in configuration screen. With this you could for
example specify that only people from certain domains would be allowed to
see your pages, or you could create a rule which would password protect
certain pages. See the Access Control section for more details.
<P>PHP is also capable of receiving file uploads from any RFC-1867
compliant web browser. This feature lets people upload both text and binary
files. With PHP's access control and logical functions, you have full
control over who is allowed to upload and what is to be done with the file
once it has been uploaded. See the File Upload section for more details.
<P>PHP has support for the PostgreSQL database package. It supports
embedded SQL queries in your .HTML files.
<P>PHP also has support for the mysql database package. It supports
embedded SQL queries in your .HTML files.
<P>
<P>
<P>
<P>
<HR>
<A HREF="PHP-HOWTO-8.html">Next</A>
<A HREF="PHP-HOWTO-6.html">Previous</A>
<A HREF="PHP-HOWTO.html#toc7">Contents</A>
</BODY>
</HTML>

