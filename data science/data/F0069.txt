ID=F0069
URL=http://www.angelfire.com/ny3/visualbasic/14.html
SIZE=7126
DATE=09/07/2002
TIME=13:13:50
DATASET=Visual Basic
HTML=<style TYPE="text/css">
   A{text-decoration: none;}
   A:hover { color: blue; text-decoration: underline;  }
</style>

<p align=center>
<font face="tahoma">
<font size="2">
<font color="red">
<B>More Controls</b>
</font>
</p>

<p align=left>
<font face="tahoma">
<font size="2">
In this section you will learn about a few other controls such as <B>Frames</b>, <B>Option Buttons</b>, <B>Check Boxes</b>, <B>ScrollBars</b> and finally <B>Timers</b>. Frames gather and organize controls, Option buttons and Check Boxes provide choices that the user can click. ScrollBars let you move things such as text, for a better view, and Timers are like clocks...<Br>
</p>


<p align=left>
<font face="tahoma">
<font size="2">
<font color="blue">Frames<Br>
</font>
<Br>
What frames basically do is hold controls inside of them, and therefore differentiate them into a set. When you want to use frames, remember that you must add the frame to the form and <i>then</i> move controls inside of the frame. In order to do this, after placing the frame on the form, click & select the frame (so it's blue), then click on a control in the toolbox and draw it in the frame. Not only does your application look better, but the frames also work great w/ Option Buttons...<Br>
<Br>
<font color="blue">
Frame properties:</font><Br>
</font>
<Br>
<font color="red">
BorderStyle</font> - Changes the way the border looks<Br>
<Br>
<font color="red">
BackColor</font> - Changes the backround of the frame<Br>
<Br>
<font color="red">
Caption</font> - Changes its caption<Br>
</p>

<p align=left>
<font face="tahoma">
<font size="2">
<font color="blue">
Option Buttons<Br>
</font>
<Br>
Option buttons give you selection and choice. For example if you had 3 option buttons for answering a question such as "Where do you live?" - the first option button might say NY, the second, NJ and the third CA. Only one can be selected at a time. That's fine and all, but what if you also asked "What's your area code?" on that same form (meaning w/ more option buttons)? That's where frames come in... As you know frames hold controls, and therefore making them 1 set. You could put your "area code" option buttons in the frame and then you would be able to click both sets, answering where you live, and your area code.<Br>
<Br>
<font color="blue">
Option button properties:</font><Br>
<Br>
<font color="red">
Caption</font> - Changes the option buttons caption<Br>
<Br>
<font color="red">
Style</font> - Changes the option buttons look<Br>
<Br>
Coding example...<Br>
<Br>
&nbsp;&nbsp;&nbsp; Private Sub Command1_Click()<Br>
<Br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If Option1.Value = True Then<Br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Me.Caption = "Option1 was clicked"<Br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If<Br>
<Br>
<font color="green">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'If the Option1 button was clicked then<Br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'the form's (refered to as "Me") caption changes<Br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'to "Option1 was clicked"</font><Br>
<Br>
&nbsp;&nbsp;&nbsp;End Sub<Br>
</p>


<p align=left>
<font face="tahoma">
<font size="2">
<font color="blue">Check Boxes<Br>
</font>
<Br>
Check boxes are similar to option buttons, except you can have as many check boxes on your form <i>checked</i> at the same time w/o having frames for them.<Br>
<Br>
<font color="blue">
Check box properties:</font><Br>
<Br>
<font color="red">
Style</font> - Changes the style<Br>
<Br>
Coding example...<Br>
<Br>
&nbsp;&nbsp;&nbsp; Private Sub Command1_Click()<Br>
<Br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If Check1.Value = 1 Then<Br>
<font color="green">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'Note<Br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'The "1" is another way of saying "True"<Br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'And "0" is another way of saying "False"<Br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'If the check box is checked then show form2<Br>
</font>
<Br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Form2.Show<Br>
<Br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Else<Br>
<Br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Form2.Hide<Br>
<font color="green">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'If it's not checked then hide form2</font><Br>
<Br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If<Br>
<Br>
&nbsp;&nbsp;&nbsp; End Sub<Br>
</p>

<p align=left>
<font face="tahoma">
<font size="2">
<font color="blue">Scrollbars<Br>
</font>
<Br>
Scroll bars are used for changin' values. Moving the scroll bar does just that with the addition of some code.<Br>
<Br>
<font color="blue">
Scroll bar properties:<Br>
</font>
<Br>
<font color="red">
LargeChange</font> - Changes the amount of the scroll when the user clicks the scroll bar area<Br>
<Br>
<font color="red">
Max</font> - Changes the maximum value of the scrollbars position<Br>
<Br>
<font color="red">
Min</font> - Changes the minimum value of the scrollbars position (switch them & run it and you will understand what I'm saying)<Br>
<Br>
<font color="red">
SmallChange</font> - Changes the amount of the scroll when the user clicks the scroll bar area<Br>
<Br>
Heres some code to change a labels caption to whatever the scrollbars value is:<Br>
<Br>
&nbsp;&nbsp;&nbsp; Private Sub HScroll1_Change()<Br>
<Br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Label1.Caption = HScroll1.Value<Br>
<Br>
&nbsp;&nbsp;&nbsp; End Sub<Br>
</p>

<p align=left>
<font face="tahoma">
<font size="2">
<font color="blue">Timers<Br>
</font>
<Br>
Timers are very useful, and are used a lot. They are very easy to understand too, b/c they simply are what they are called, "Timers." You can get how much time has passed w/ them, loop codes etc.<Br>
<Br>
<font color="blue">
Timer properties:</font><Br>
<Br>
<font color="red">
Interval</font> - A value (1 to 65535) <i>milliseconds</i> which is thousandths of a second<Br>
<Br>
So lets say you wanted the computer to tell you whenever a second has gone by the codes would look something like this:<Br>
<Br>
&nbsp;&nbsp;&nbsp; Private Sub Timer1_Timer()<Br>
<Br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If Timer1.Interval = 1000 Then <font color="green">'1000 m/s is equal to 1 second</font><Br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgBox "1 second has passed", vbInformation<Br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If<Br>
<Br>
&nbsp;&nbsp;&nbsp; End Sub<Br>
</p>


<p align=center>
<font face="tahoma">
<font size="2">
<font color="red">
<img src="http://www.angelfire.com/ny3/visualbasic/images/note.jpg"> <B>Note:</b> Timers are always hidden and will not show at run time
</font>
</p>


<p align=left>
<font face="tahoma">
<font size="2">
Well now you know more then enough controls to keep you busy for a while. Next up, Dialog boxes.
</p>

<p align=center>
<font face="tahoma">
<A HREF ="13.html" TARGET="MainWindow"><font color="blue">Back</a>
<A HREF ="15.html" TARGET="MainWindow"><font color="blue">Next</a>
</p>





