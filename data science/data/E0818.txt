ID=E0818
URL=http://www.rit.edu/~jpw9607/gne/html/classGNE_1_1ServerConnectionListener.html
SIZE=18264
DATE=12/07/02
TIME=19:24:45
DATASET=C
HTML=<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>GNE::ServerConnectionListener class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body bgcolor="#ffffff">
<!-- Generated by Doxygen 1.2.13.1 -->
<center>
<a class="qindex" href="main.html">Main Page</a> &nbsp; <a class="qindex" href="namespaces.html">Namespace List</a> &nbsp; <a class="qindex" href="hierarchy.html">Class Hierarchy</a> &nbsp; <a class="qindex" href="annotated.html">Compound List</a> &nbsp; <a class="qindex" href="files.html">File List</a> &nbsp; <a class="qindex" href="namespacemembers.html">Namespace Members</a> &nbsp; <a class="qindex" href="functions.html">Compound Members</a> &nbsp; <a class="qindex" href="pages.html">Related Pages</a> &nbsp; </center>
<hr><h1>GNE::ServerConnectionListener  Class Reference</h1>A connection that listens for other connections. 
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="ServerConnectionListener_8h-source.html">ServerConnectionListener.h</a>&gt;</code>
<p>
<a href="classGNE_1_1ServerConnectionListener-members.html">List of all members.</a><table border=0 cellpadding=0 cellspacing=0>
<tr><td colspan=2><br><h2>Public Methods</h2></td></tr>
<tr><td nowrap align=right valign=top><a name="a0" doxytag="GNE::ServerConnectionListener::ServerConnectionListener"></a>
&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1ServerConnectionListener.html#a0">ServerConnectionListener</a> ()</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Initalizes this class.</em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top><a name="a1" doxytag="GNE::ServerConnectionListener::~ServerConnectionListener"></a>
virtual&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1ServerConnectionListener.html#a1">~ServerConnectionListener</a> ()</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>The destructor will close down a listening object, so when you are done listening, just destroy this object.</em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>bool&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1ServerConnectionListener.html#a2">open</a> (int port)</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Opens a socket ready for listening, but not yet listening.</em> <a href="#a2">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>bool&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1ServerConnectionListener.html#a3">listen</a> ()</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Starts this socket listening.</em> <a href="#a3">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top><a name="a4" doxytag="GNE::ServerConnectionListener::isListening"></a>
bool&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1ServerConnectionListener.html#a4">isListening</a> () const</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Returns true if this <a class="el" href="classGNE_1_1ServerConnectionListener.html">ServerConnectionListener</a> is active.</em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top><a class="el" href="classGNE_1_1Address.html">Address</a>&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1ServerConnectionListener.html#a5">getLocalAddress</a> () const</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Returns the address of the listening socket.</em> <a href="#a5">More...</a><em></em></font><br><br></td></tr>
<tr><td colspan=2><br><h2>Protected Methods</h2></td></tr>
<tr><td nowrap align=right valign=top>virtual void&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1ServerConnectionListener.html#b0">onListenFailure</a> (const <a class="el" href="classGNE_1_1Error.html">Error</a> &amp;error, const <a class="el" href="classGNE_1_1Address.html">Address</a> &amp;from, <a class="el" href="classGNE_1_1ConnectionListener.html">ConnectionListener</a> *listener)=0</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>There was a failure when trying to listen on this socket.</em> <a href="#b0">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>virtual void&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1ServerConnectionListener.html#b1">onListenSuccess</a> (<a class="el" href="classGNE_1_1ConnectionListener.html">ConnectionListener</a> *listener)</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>This is an optional event to catch which is called after <a class="el" href="classGNE_1_1ConnectionListener.html#a3">ConnectionListener::onNewConn</a>.</em> <a href="#b1">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>virtual void&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1ServerConnectionListener.html#b2">getNewConnectionParams</a> (int &amp;inRate, int &amp;outRate, bool &amp;allowUnreliable, <a class="el" href="classGNE_1_1ConnectionListener.html">ConnectionListener</a> *&amp;listener)=0</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>A new connection is starting, and now we want the parameters for this new connection.</em> <a href="#b2">More...</a><em></em></font><br><br></td></tr>
<tr><td colspan=2><br><h2>Friends</h2></td></tr>
<tr><td nowrap align=right valign=top><a name="l0" doxytag="GNE::ServerConnectionListener::ServerConnection"></a>
class&nbsp;</td><td valign=bottom><b>ServerConnection</b></td></tr>
<tr><td nowrap align=right valign=top><a name="l1" doxytag="GNE::ServerConnectionListener::ServerListener"></a>
class&nbsp;</td><td valign=bottom><b>ServerListener</b></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
A connection that listens for other connections.
<p>
Inherit from this class, overriding the functions from <a class="el" href="classGNE_1_1Connection.html">Connection</a> and <a class="el" href="classGNE_1_1ClientConnection.html">ClientConnection</a> based on the events you wish to respond to. 
<p>
<hr><h2>Member Function Documentation</h2>
<a name="a5" doxytag="GNE::ServerConnectionListener::getLocalAddress"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classGNE_1_1Address.html">Address</a> GNE::ServerConnectionListener::getLocalAddress </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp;          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns the address of the listening socket.
<p>
The socket must be opened when this function is called, but does not have to be listening.     </td>
  </tr>
</table>
<a name="b2" doxytag="GNE::ServerConnectionListener::getNewConnectionParams"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void GNE::ServerConnectionListener::getNewConnectionParams </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int &amp;&nbsp;</td>
          <td class="mdname" nowrap>&nbsp; <em>inRate</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>int &amp;&nbsp;</td>
          <td class="mdname" nowrap>&nbsp; <em>outRate</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>bool &amp;&nbsp;</td>
          <td class="mdname" nowrap>&nbsp; <em>allowUnreliable</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="classGNE_1_1ConnectionListener.html">ConnectionListener</a> *&amp;&nbsp;</td>
          <td class="mdname" nowrap>&nbsp; <em>listener</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [protected, pure virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
A new connection is starting, and now we want the parameters for this new connection.
<p>
The three parameters passed should be modified to give the new connection's flow control parameters and listener.
<p>
The last parameter should be set to the initial event listener for the <a class="el" href="classGNE_1_1ServerConnection.html">ServerConnection</a> that is being created. This could be an entirely new <a class="el" href="classGNE_1_1ConnectionListener.html">ConnectionListener</a> or an already existing one, it doesn't matter. The returned listener cannot be NULL, since onNewConn must be called or a memory leak will occur.
<p>
This pointer will be returned to you through the socket failure event (in this case it was never used, but it is returned in case you need to delete it). If the connection is successful you can get your pointer back through the resulting <a class="el" href="classGNE_1_1ServerConnection.html">ServerConnection</a> class by using <a class="el" href="classGNE_1_1Connection.html#a2">Connection::getListener</a>.
<p>
This function can be called from multiple threads at the same time.
<p>
See <a class="el" href="classGNE_1_1PacketStream.html#a0">PacketStream::PacketStream</a> for more info about inRate and outRate. <dl compact><dt><b>
Parameters: </b><dd>
<table border=0 cellspacing=2 cellpadding=0>
<tr><td valign=top><em>inRate</em>&nbsp;</td><td>
the maximum rate we will accept. </td></tr>
<tr><td valign=top><em>outRate</em>&nbsp;</td><td>
the maximum rate of data we are able/willing to send. </td></tr>
<tr><td valign=top><em>wantUnreliable</em>&nbsp;</td><td>
set to true if you want to have an unreliable data socket. If either this function or the client refuses the unreliable socket, then it will not be created, and any data marked to be sent unreliably will instead be sent reliably. You want want to disallow this if you are not using unreliable data, or your firewall/gateway makes UDP or IPX communication difficult or impossible. </td></tr>
</table>
</dl>    </td>
  </tr>
</table>
<a name="a3" doxytag="GNE::ServerConnectionListener::listen"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool GNE::ServerConnectionListener::listen </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp;          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Starts this socket listening.
<p>
onNewConn will be called when a new connection has been negotiated and error checked. When you are finished, delete this object and the dtor will clean things up. <dl compact><dt><b>
See also: </b><dd>
<a class="el" href="classGNE_1_1ServerConnectionListener.html#b0">onListenFailure</a> </dl><dl compact><dt><b>
Returns: </b><dd>
true, if there was an error. </dl>    </td>
  </tr>
</table>
<a name="b0" doxytag="GNE::ServerConnectionListener::onListenFailure"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void GNE::ServerConnectionListener::onListenFailure </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="classGNE_1_1Error.html">Error</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap>&nbsp; <em>error</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="classGNE_1_1Address.html">Address</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap>&nbsp; <em>from</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="classGNE_1_1ConnectionListener.html">ConnectionListener</a> *&nbsp;</td>
          <td class="mdname" nowrap>&nbsp; <em>listener</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [protected, pure virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
There was a failure when trying to listen on this socket.
<p>
This is not called when the actual low-level listen fails (that error is returned from listen), but instead high-level errors while connecting such as a version mismatch are sent here. Only errors that occur before or during the <a class="el" href="classGNE_1_1ConnectionListener.html#a3">ConnectionListener::onNewConn</a> event are sent here.
<p>
This function may be called from multiple threads at the same time, and may block if it wishes; it does not have the "non-blocking" restriction most <a class="el" href="namespaceGNE.html">GNE</a> events have.
<p>
Depending on when and under what circumstances the failure happened, in any case, from might be an invalid address, and listener may be NULL.<dl compact><dt><b>
Parameters: </b><dd>
<table border=0 cellspacing=2 cellpadding=0>
<tr><td valign=top><em>error</em>&nbsp;</td><td>
the type of error </td></tr>
<tr><td valign=top><em>from</em>&nbsp;</td><td>
the remote address the failed attempt came from </td></tr>
<tr><td valign=top><em>listener</em>&nbsp;</td><td>
the unused <a class="el" href="classGNE_1_1ConnectionListener.html">ConnectionListener</a> that was obtained from getNewConnectionParams. If it is NULL, then getNewConnectionParams was never called. </td></tr>
</table>
</dl>    </td>
  </tr>
</table>
<a name="b1" doxytag="GNE::ServerConnectionListener::onListenSuccess"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void GNE::ServerConnectionListener::onListenSuccess </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classGNE_1_1ConnectionListener.html">ConnectionListener</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp; <em>listener</em>          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap><code> [protected, virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This is an optional event to catch which is called after <a class="el" href="classGNE_1_1ConnectionListener.html#a3">ConnectionListener::onNewConn</a>.
<p>
The default behavior for this event is to do nothing, but you may overload it to catch it.
<p>
This method may block, but until it completes the connection will be marked as connecting and not as connected, and listener will not start to receive any events (besides the onNewConn it just got) until this function completes.
<p>
See the expong example of a case where the onListenSuccess event can be useful, where the same implementation using only onNewConn would be harder to program and understand.<dl compact><dt><b>
Parameters: </b><dd>
<table border=0 cellspacing=2 cellpadding=0>
<tr><td valign=top><em>listener</em>&nbsp;</td><td>
The listener than you returned from getNewConnectionParams. </td></tr>
</table>
</dl>    </td>
  </tr>
</table>
<a name="a2" doxytag="GNE::ServerConnectionListener::open"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool GNE::ServerConnectionListener::open </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp; <em>port</em>          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Opens a socket ready for listening, but not yet listening.
<p>
<dl compact><dt><b>
Parameters: </b><dd>
<table border=0 cellspacing=2 cellpadding=0>
<tr><td valign=top><em>port</em>&nbsp;</td><td>
the port to listen on. </td></tr>
</table>
</dl><dl compact><dt><b>
Returns: </b><dd>
true if could not open a socket on the port. </dl>    </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="ServerConnectionListener_8h-source.html">ServerConnectionListener.h</a><li>ServerConnectionListener.cpp</ul>
<hr><address><small>Generated on Fri Mar 8 03:03:23 2002 for GNE by
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.gif" alt="doxygen" align="middle" border=0 
width=110 height=53></a>1.2.13.1 written by <a href="mailto:dimitri@stack.nl">Dimitri van Heesch</a>,
 &copy;&nbsp;1997-2001</small></address>
</body>
</html>

