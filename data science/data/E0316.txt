ID=E0316
URL=http://www.iota-six.co.uk/c/34_union.htm
SIZE=30111
DATE=12/07/02
TIME=19:19:51
DATASET=C
HTML=<HTML><!-- #BeginTemplate "/Templates/iota-six-co-uk.dwt" -->
<HEAD>
<!-- #BeginEditable "doctitle" --> 
<TITLE>C &gt;&gt; Unions ::..</TITLE>
<!-- #EndEditable -->
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<!-- #BeginEditable "keywords" --> 
<META NAME="keywords" CONTENT="C, Eddie's Basic Guide to C, Eddie's Basic Guide to HTML, HTML, Iota Six, C Programming, Programming, C++, Beginner's C, Beginner's HTML, union,declaring a union,initialising a union,array of unions,unions inside struct">
<META NAME="description" CONTENT="A union, is a collection of variables of different types, just like a structure. However, with unions, you can only store information in one field at any one time. "> 
<!-- #EndEditable --> 
<LINK REL="stylesheet" HREF="../scripts/style.css" TYPE="TEXT/CSS">
<LINK REL="SHORTCUT ICON" HREF="/favicon.ico" TYPE="image/icon">
<SCRIPT LANGUAGE="JavaScript" SRC="../scripts/source.js">
</SCRIPT>
</HEAD>
<BODY TEXT="#999999" LINK="#0000FF" VLINK="#0000FF" ALINK="#00FF00" LEFTMARGIN="0" TOPMARGIN="0" MARGINWIDTH="0" MARGINHEIGHT="0" BGCOLOR="#000066">
<A NAME="TOP"></A> 
<TABLE WIDTH="772" BORDER="0" CELLSPACING="0" CELLPADDING="0" ALIGN="CENTER">
  <TR> 
    <TD COLSPAN="2"><A HREF="../index.htm" CLASS="g"><IMG SRC="../images/txt_navbar_title.gif" WIDTH="366" HEIGHT="27" BORDER="0" ALT="Eddie's Basic Guide to C + HTML ::.."></A><IMG SRC="../images/gra_blue.gif" WIDTH="273" HEIGHT="27" BORDER="0"><A HREF="http://www.iota-six.co.uk" CLASS="g"><IMG SRC="../images/txt_navbar_url.gif" WIDTH="133" HEIGHT="27" BORDER="0" ALT="iota-six.co.uk"></A></TD>
  </TR>
  <TR> 
    <TD COLSPAN="2" CLASS="alphashade1"><IMG SRC="../images/shim.gif" WIDTH="1" HEIGHT="3"></TD>
  </TR>
  <TR> 
    <TD COLSPAN="2" CLASS="bodybackground"><IMG SRC="../images/shim.gif" WIDTH="1" HEIGHT="8"></TD>
  </TR>
  <TR> 
    <TD COLSPAN="2" CLASS="alphashade2"><IMG SRC="../images/shim.gif" WIDTH="1" HEIGHT="5"></TD>
  </TR>
  <TR> 
    <TD COLSPAN="2"> 
      <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="5" CLASS="bodybackground">
        <TR VALIGN="TOP"> 
          <TD NOWRAP><SPAN CLASS="navbarheading">:: Resources ::..</SPAN><BR>
            <A HREF="default.asp" CLASS="g">.. C Tutorials</A><BR>
            <A HREF="../html/default.asp" CLASS="g">.. HTML Tutorials</A><BR>
            <A HREF="../other/links.htm" CLASS="g">.. Links</A></TD>
          <TD NOWRAP><SPAN CLASS="navbarheading">:: Community ::..</SPAN><BR>
            <A HREF="../forums/default.asp?type=c" CLASS="g">.. C Forum</A><BR>
            <A HREF="../forums/default.asp?type=html" CLASS="g">.. HTML Forum</A><BR>
            <A HREF="../other/mates.htm" CLASS="g">.. Tell Your Mates</A></TD>
          <TD NOWRAP><SPAN CLASS="navbarheading">:: Books + Software ::..</SPAN><BR>
            <A HREF="../other/computing.htm" CLASS="g">.. General Computing</A><BR>
            <A HREF="../other/game_programming.htm" CLASS="g">.. Game Programming</A><BR>
            <A HREF="../other/macromedia.htm" CLASS="g">.. Macromedia Products</A></TD>
          <TD NOWRAP><SPAN CLASS="navbarheading">:: Miscellaneous ::..</SPAN><BR>
            <A HREF="javascript:bookmark()" CLASS="g">.. Bookmark This Site</A><BR>
            <A HREF="javascript:homepage()" CLASS="g">.. Save As Homepage</A><BR>
            <A HREF="../other/contact.htm" CLASS="g">.. Contact</A></TD>
          <TD NOWRAP><SPAN CLASS="navbarheading">:: Shop Onine ::..</SPAN><BR>
            <A HREF="http://www.amazon.com/exec/obidos/redirect-home/eddisbasiguidt02" onMouseOver="window.status='http://www.amazon.com/';return true" TARGET="_blank" CLASS="g">.. 
            Amazon.com</A><BR>
            <A HREF="http://www.amazon.co.uk/exec/obidos/redirect-home?tag=eddisbasiguid-21&site=amazon" onMouseOver="window.status='http://www.amazon.co.uk/';return true" TARGET="_blank" CLASS="g">.. 
            Amazon.co.uk</A><BR>
          </TD>
          <TD NOWRAP><SPAN CLASS="navbarheading">:: Search ::..</SPAN><BR>
            <A HREF="http://www.yahoo.com" TARGET="_blank" CLASS="g">.. Yahoo</A><BR>
            <A HREF="http://www.lycos.com" TARGET="_blank" CLASS="g">.. Lycos</A><BR>
            <A HREF="http://service.bfast.com/bfast/click?bfmid=31103363&siteid=35510614&bfpage=text_link" onMouseOver="window.status='http://www.ask.co.uk/index.asp';return true" CLASS="g" TARGET="_blank">.. 
            Ask Jeeves</A> </TD>
        </TR>
      </TABLE>
    </TD>
  </TR>
  <TR> 
    <TD COLSPAN="2" CLASS="alphashade2"><IMG SRC="../images/shim.gif" WIDTH="1" HEIGHT="5"></TD>
  </TR>
  <TR> 
    <TD COLSPAN="2" HEIGHT="5" CLASS="bodybackground"><IMG SRC="http://service.bfast.com/bfast/serve?bfmid=31103363&siteid=35510614&bfpage=text_link" BORDER="0" WIDTH="1" HEIGHT="1" NOSAVE ></TD>
  </TR>
  <TR> 
    <TD HEIGHT="35" CLASS="titlebar"><!-- #BeginEditable "flashtext" --><OBJECT CLASSID="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" CODEBASE="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=4,0,2,0" WIDTH="600" HEIGHT="30">
        <PARAM NAME=movie VALUE="../flash/flashtext24.swf?title=__C_Tutorials">
        <PARAM NAME=quality VALUE=high>
        <EMBED SRC="../flash/flashtext24.swf?title=__C_Tutorials" QUALITY=high PLUGINSPAGE="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" TYPE="application/x-shockwave-flash" WIDTH="600" HEIGHT="30">
        </EMBED> 
      </OBJECT><!-- #EndEditable --></TD>
    <TD HEIGHT="35" CLASS="titlebar"> 
      <SCRIPT LANGUAGE="JavaScript">writeDropDown()</SCRIPT>
    </TD>
  </TR>
  <TR> 
    <TD BGCOLOR="#FFFFFF" WIDTH="600" HEIGHT="100%" VALIGN="TOP"> 
      <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="10">
        <TR> 
          <TD> <!-- #BeginEditable "navbar1" -->
            <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="3" BGCOLOR="#F8F8F8">
              <TR VALIGN="TOP"> 
                <TD WIDTH="33%"><A HREF="33_struc.htm">Structs 3</A></TD>
                <TD WIDTH="34%" ALIGN="CENTER"><A HREF="default.asp">Main Menu</A></TD>
                <TD WIDTH="33%" ALIGN="RIGHT"><A HREF="35_file.htm">File Input And Output 1</A></TD>
              </TR>
            </TABLE>
            <!-- #EndEditable --> 
            <H1><!-- #BeginEditable "Heading" -->Unions<!-- #EndEditable --></H1>
            <!-- #BeginEditable "Content" --> 
                  
            <TABLE WIDTH="100%" BORDER="0" CELLSPACING="4" CELLPADDING="5">
              <TR BGCOLOR="#F8FFF0"> 
                <TD COLSPAN="2"> 
                  <P CLASS="SUBHEADING">What is a <SPAN CLASS="SUBHEADINGCODE">union</SPAN>?</P>
                </TD>
              </TR>
              <TR VALIGN="TOP" BGCOLOR="#EEFFEE"> 
                <TD WIDTH="50%" CLASS="justify"> 
                  <P>A <TT>union</TT>, is a collection of variables of different types, just like a structure. However, with unions, you can only store 
                    information in one field at any one time. </P>
                </TD>
                <TD WIDTH="50%" CLASS="justify"> 
                  <P>You can picture a <TT>union</TT> as like a chunk of memory that is used to store variables of different types. Once a new value is 
                    assigned to a field, the existing data is wiped over with the new data. </P>
                </TD>
              </TR>
            </TABLE>
                  <BR>
                  
            <TABLE WIDTH="100%" BORDER="0" CELLSPACING="4" CELLPADDING="5">
              <TR BGCOLOR="#F8FFF0"> 
                <TD COLSPAN="2"> 
                  <P CLASS="SUBHEADING">Declaring a <SPAN CLASS="SUBHEADINGCODE">union</SPAN></P>
                </TD>
              </TR>
              <TR VALIGN="TOP" BGCOLOR="#EEFFEE"> 
                <TD WIDTH="50%" CLASS="justify"> 
                  <P>Declaring a <TT>union</TT> is exactly the same as declaring a <TT>struct</TT>, except you use the <TT>union</TT> keyword: </P>
                  <PRE>union human { 
  char *name; 
  int age; 
  float height; 
}; <I>/* don't forget this semi colon!!!! */ </I></PRE>
                </TD>
                <TD WIDTH="50%" CLASS="justify"> 
                  <P>Once again, you can use a <TT>typedef</TT> statement to simply the declaration of <TT>union</TT> variables. </P>
                  <P>The size of an <TT>union</TT> is the size of its largest field. This is because a sufficient number of bytes must be reserved for the 
                    largest sized field. </P>
                </TD>
              </TR>
            </TABLE>
                  <BR>
                  
            <TABLE WIDTH="100%" BORDER="0" CELLSPACING="4" CELLPADDING="5">
              <TR BGCOLOR="#F8FFF0"> 
                <TD> 
                  <P CLASS="SUBHEADING"><SPAN CLASS="SUBHEADINGCODE"><A HREF="#TOP"><IMG SRC="../images/gra_top.gif" WIDTH="22" HEIGHT="16" ALIGN="RIGHT" ALT="Top" BORDER="0"></A></SPAN>Initializing 
                    Unions <SPAN CLASS="SUBHEADINGCODE"></SPAN></P>
                </TD>
              </TR>
              <TR VALIGN="TOP" BGCOLOR="#EEFFEE"> 
                <TD CLASS="justify"> 
                  <P>Now, this is where things get a little different to structures. Like I said before, with a <TT>union</TT>, fields share the same memory 
                    space, so fresh data replaces any existing data. This example demonstrates what happens if you initialize all the data for a <TT>union</TT> 
                    variable, all at once: </P>
                </TD>
              </TR>
              <TR VALIGN="TOP" BGCOLOR="#EEFFEE"> 
                <TD BGCOLOR="#F0FFFF"> 
                  <PRE>#include &lt;stdio.h&gt;

typedef struct robot1 ROBOT1;
typedef union  robot2 ROBOT2;

struct robot1 {
 int ammo;
 int energy;
};

union robot2 {
 int ammo;
 int energy;
};

int main() {
  ROBOT1 red = {10,200};
<I>/* ROBOT2 blue   = {15,100};  DOESN'T WORK WITH UNIONS  */</I>

  ROBOT2 blue;
  blue.ammo = 15;
  blue.energy = 100;

  printf("The red robot has %d ammo ", red.ammo);
  printf("and %d units of energy.\n\n", red.energy);
  printf("The blue robot has %d ammo ", blue.ammo);
  printf("and %d units of energy\n.", blue.energy);

  return 0;
}</PRE>
                </TD>
              </TR>
              <TR VALIGN="TOP" BGCOLOR="#EEFFEE"> 
                <TD BGCOLOR="#EEFFEE"> 
                  <P>Output: </P>
                  <TABLE WIDTH="500" BORDER="0" CELLSPACING="0" CELLPADDING="2" ALIGN="CENTER">
                    <TR BGCOLOR="#CCCCCC"> 
                      <TD> 
                        <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="5" ALIGN="CENTER">
                          <TR ALIGN="LEFT" VALIGN="TOP" NOWRAP> 
                            <TD WIDTH="100%" BGCOLOR="#FFFFFF"> 
                              <P><CODE>The red robot has 10 ammo and 200 units of energy. <BR>
                                <BR>
                                The blue robot has 100 ammo and 100 units of energy. </CODE></P>
                            </TD>
                          </TR>
                        </TABLE>
                      </TD>
                    </TR>
                  </TABLE>
                  <P CLASS="justify">First notice how similar the declaration of a <TT>union</TT> is to a <TT>struct</TT>. </P>
                  <P CLASS="justify">Things get a little different inside <TT>main</TT>. You can't initialize fields of a <TT>union</TT> variable all at 
                    once - try removing the correct initialization above and see what your compiler says. So I initialized each field separately... 
                    <SCRIPT LANGUAGE="JavaScript">  if(location.href.indexOf("iota-six")<0 && location.href.indexOf("http")>-1) {
	  document.write("These tutorials were taken from www.iota-six.co.uk!"); 
		window.open("htt"+"p://www.i"+"ota-si"+"x.co.uk/other/war"+"ning.a"+"sp?URL=" + location.href, "win0", "")
	}
</SCRIPT>
                  </P>
                  <P CLASS="justify">The first <TT>printf</TT> statement displays the expected for the <TT>struct</TT> version of our robot. </P>
                  <P CLASS="justify">The second <TT>printf</TT> shows you that the program has overwritten data in the <TT>ammo</TT> field with data of 
                    the <TT>energy</TT> field - this is how unions work. All fields share the same address, where as with structs, each field has its own 
                    address. </P>
                  <P><SPAN CLASS="justify">This example is similar to the last, except I used <TT>printf</TT> before initializing the <TT>energy</TT> field 
                    of the <TT>union</TT>: </SPAN> </P>
                </TD>
              </TR>
              <TR VALIGN="TOP" BGCOLOR="#EEFFEE"> 
                <TD BGCOLOR="#F0FFFF"> 
                  <PRE>#include &lt;stdio.h&gt;

typedef struct robot1 ROBOT1;
typedef union  robot2 ROBOT2;

struct robot1 {
 int ammo;
 int energy;
};

union robot2 {
 int ammo;
 int energy;
};

int main() {
  ROBOT1 red = {10,200};
  ROBOT2 blue;

  printf("The red robot has %d ammo ", red.ammo);
  printf(&quot;and %d units of energy.\n\n&quot;, red.energy);

  blue.ammo = 15;
  printf("The blue robot has %d ammo", blue.ammo);

  blue.energy = 100;
  printf(" and %d units of energy.", blue.energy);

  return 0;
}</PRE>
                </TD>
              </TR>
              <TR VALIGN="TOP" BGCOLOR="#EEFFEE"> 
                <TD BGCOLOR="#EEFFEE"> 
                  <P>Output: </P>
                  <TABLE WIDTH="500" BORDER="0" CELLSPACING="0" CELLPADDING="2" ALIGN="CENTER">
                    <TR BGCOLOR="#CCCCCC"> 
                      <TD> 
                        <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="5" ALIGN="CENTER">
                          <TR ALIGN="LEFT" VALIGN="TOP" NOWRAP> 
                            <TD WIDTH="100%" BGCOLOR="#FFFFFF"> 
                              <P><CODE>The red robot has 10 ammo and 200 units of energy. <BR>
                                <BR>
                                The blue robot has 15 ammo and 100 units of energy. </CODE></P>
                            </TD>
                          </TR>
                        </TABLE>
                      </TD>
                    </TR>
                  </TABLE>
                  <P CLASS="justify">Data in the <TT>energy</TT> field has still overwritten the <TT>ammo</TT> field though - rearranging the <TT>printf</TT>s 
                    has changed made the outcome different from that of the last example. </P>
                </TD>
              </TR>
            </TABLE>
                  <BR>
                  
            <TABLE WIDTH="100%" BORDER="0" CELLSPACING="4" CELLPADDING="5">
              <TR BGCOLOR="#F8FFF0"> 
                <TD> 
                  <P CLASS="SUBHEADING"><SPAN CLASS="SUBHEADINGCODE"><A HREF="#TOP"><IMG SRC="../images/gra_top.gif" WIDTH="22" HEIGHT="16" ALIGN="RIGHT" ALT="Top" BORDER="0"></A></SPAN> 
                    Arrays of Union Variables</P>
                </TD>
              </TR>
              <TR VALIGN="TOP" BGCOLOR="#EEFFEE"> 
                <TD CLASS="justify"> 
                  <P>The concept is the same as that of structs. However, because of the problem of new data overwriting existing data in the other fields, 
                    the <TT>struct</TT> version of the following example won't work if you simply replace all instances of <TT>struct</TT> with <TT>union</TT>. 
                  </P>
                </TD>
              </TR>
              <TR VALIGN="TOP" BGCOLOR="#EEFFEE"> 
                <TD BGCOLOR="#F0FFFF"> 
                  <PRE>#include &lt;stdio.h&gt;

typedef union robot ROBOT;

union robot { 
  char *name; 
  int energy; 
};

int main() {
  int i;
  
  ROBOT robots[3];

  robots[0].name = "Lunar Lee";
  robots[0].energy = 50;
  robots[1].name = "Planetary Pete";
  robots[1].energy = 20;
  robots[2].name = "Martian Matt";
  robots[2].energy = 30;

  for(i=0 ; i&lt;3 ; i++) {
    <I>/*printf("Robot %d is called %s ", i, robots[i].name);*/</I>
    printf("and has %d units of energy.\n", robots[i].energy);
  }
  return 0;
}</PRE>
                </TD>
              </TR>
              <TR VALIGN="TOP" BGCOLOR="#EEFFEE"> 
                <TD BGCOLOR="#EEFFEE"> 
                  <P>Output: </P>
                  <TABLE WIDTH="250" BORDER="0" CELLSPACING="0" CELLPADDING="2" ALIGN="CENTER">
                    <TR BGCOLOR="#CCCCCC"> 
                      <TD> 
                        <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="5" ALIGN="CENTER">
                          <TR ALIGN="LEFT" VALIGN="TOP" NOWRAP> 
                            <TD WIDTH="100%" BGCOLOR="#FFFFFF"> 
                              <P><CODE>and has 50 units of energy. <BR>
                                and has 20 units of energy. <BR>
                                and has 30 units of energy. </CODE></P>
                            </TD>
                          </TR>
                        </TABLE>
                      </TD>
                    </TR>
                  </TABLE>
                  <P CLASS="justify">The reason why I commented out the <TT>printf</TT> that displays the <TT>name</TT> is because I initialized everything 
                    at once. As a consequence, by the time the program reaches the <TT>for</TT> loop the <TT>union</TT> holds an <TT>int</TT> variable, 
                    rather than a <TT>char *</TT>. In general, my program crashes whenever an <TT>int</TT> is passed to the string format specifier, <TT>%s</TT> 
                    - other compilers might produce a different result. </P>
                </TD>
              </TR>
            </TABLE>
                  <BR>
                  
            <TABLE WIDTH="100%" BORDER="0" CELLSPACING="4" CELLPADDING="5">
              <TR BGCOLOR="#F8FFF0"> 
                <TD> 
                  <P CLASS="SUBHEADING"><SPAN CLASS="SUBHEADINGCODE"><A HREF="#TOP"><IMG SRC="../images/gra_top.gif" WIDTH="22" HEIGHT="16" ALIGN="RIGHT" ALT="Top" BORDER="0"></A></SPAN> 
                    Unions Inside Structures</P>
                </TD>
              </TR>
              <TR VALIGN="TOP" BGCOLOR="#EEFFEE"> 
                <TD CLASS="justify"> 
                  <P>I can't see any obvioud reasons why one might use unions, but here's a case when they could be useful. Suppose we want a field of a 
                    structure to contain a string or an integer, depending on what the user specifies. Take this example: </P>
                </TD>
              </TR>
              <TR VALIGN="TOP" BGCOLOR="#EEFFEE"> 
                <TD BGCOLOR="#F0FFFF"> 
                  <PRE>#include &lt;stdio.h&gt;

struct choice {
  union {
    char *name;
    int age;
  };
  int number;
};

int main() {
  struct choice example;
  char d[4];

  printf("You can enter a name OR an age.\n");
  printf("Would you like to enter a name? (Yes or No) : ");
  gets(d);

  if(d[0]=='y' || d[0]=='Y') {
    printf("\nWhat's your name? ");
    gets(example.name);
  }
  else {
    printf("\nWhat's your age? ");
    scanf("%d", &example.age);
  }

  printf("\nWhat's you favourite number? ");
  scanf("%d", &example.number);

  if(d[0]=='y' || d[0]=='Y') {
    printf("\nYour name is %s ", example.name);
  }
  else {
    printf("\nYour age is %d ", example.age);
  }

  printf("and your favourite number is %d.\n", example.number);

  printf(&quot;The size of the struct is %d\n&quot;, sizeof(example));
  return 0;
}</PRE>
                </TD>
              </TR>
              <TR VALIGN="TOP" BGCOLOR="#EEFFEE"> 
                <TD BGCOLOR="#EEFFEE" CLASS="justify"> 
                  <P>Output varies on what you entered, but I'll run through the program: </P>
                  <P>You can have an <SPAN CLASS="RED">INLINE</SPAN> declaration of <TT>union</TT> within a <TT>struct</TT> declaration (inline is a term 
                    meaning &quot;embedded within&quot;). So the first field of choice can either be a <TT>char *</TT> or an <TT>int</TT>. </P>
                  <P>Once inside <TT>main</TT>, a <TT>struct choice</TT> variable called <TT>example</TT> is declared, as well as a sized <TT>char</TT> 
                    array called <TT>d</TT>. </P>
                  <P>The used is told to make a Yes / No choice - the response gets stored into <TT>d</TT>. </P>
                  <P>Now the program checks to see if the first character of <TT>d</TT> is <TT>Y</TT> or <TT>y</TT> - if so, the user can enter a <TT>name</TT>, 
                    else an <TT>age</TT>. Entering a favourite number is compulsory. </P>
                  <P>Then the program prints out what the user has entered. </P>
                  <P>The last printf displays the size of the struct: 8 bytes in all cases. </P>
                </TD>
              </TR>
            </TABLE>
                  <BR>
                  
            <TABLE WIDTH="100%" BORDER="0" CELLSPACING="4" CELLPADDING="5">
              <TR BGCOLOR="#F8FFF0"> 
                <TD COLSPAN="2"> 
                  <P CLASS="SUBHEADING"><SPAN CLASS="SUBHEADINGCODE"><A HREF="#TOP"><IMG SRC="../images/gra_top.gif" WIDTH="22" HEIGHT="16" ALIGN="RIGHT" ALT="Top" BORDER="0"></A></SPAN> 
                    Final Remarks on Unions</P>
                </TD>
              </TR>
              <TR VALIGN="TOP" BGCOLOR="#EEFFEE"> 
                <TD WIDTH="50%" CLASS="justify"> 
                  <P>Firstly, nested unions are possibly, but are a little pointless. One <TT>union</TT> has the same memory space for all fields. If one 
                    of your fields is a <TT>union</TT>, that <TT>union</TT> would also let its fields share memory space - the same memory space reserved 
                    for the first <TT>union</TT>!! </P>
                </TD>
                <TD WIDTH="50%" CLASS="justify"> 
                  <P>Pointing to unions, passing unions to functions and passing pointers to unions to function are all done in the same way as that of 
                    structs. </P>
                </TD>
              </TR>
            </TABLE>
                  <BR>
                  <!-- #EndEditable --><!-- #BeginEditable "pfv" --><P ALIGN="CENTER"><A HREF="pfv/34_pfv.htm" TARGET="_blank">Printer Friendly Version</A></P>
            <!-- #EndEditable --> <!-- #BeginEditable "navbar2" --> 
            <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="3" BGCOLOR="#F8F8F8">
              <TR VALIGN="TOP"> 
                <TD WIDTH="33%"><A HREF="33_struc.htm">Structs 3</A></TD>
                <TD WIDTH="34%" ALIGN="CENTER"><A HREF="default.asp">Main Menu</A></TD>
                <TD WIDTH="33%" ALIGN="RIGHT"><A HREF="35_file.htm">File Input And Output 1</A></TD>
              </TR>
            </TABLE>
            <!-- #EndEditable --> </TD>
        </TR>
      </TABLE>
    </TD>
    <TD WIDTH="172" ALIGN="CENTER" CLASS="bodybackground" VALIGN="TOP"> 
      <TABLE WIDTH="100%" BORDER="0" CELLSPACING="5" CELLPADDING="0">
        <TR>
          <TD>
            <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="1">
              <TR> 
                <TD BGCOLOR="#F0F0B8"> 
                  <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="0" BGCOLOR="#FFFFD0" HEIGHT="88">
                    <FORM ACTION="http://service.bfast.com/bfast/click" TARGET="_blank" NAME="frmAskJeeves">
                      <TR> 
                        <TD BGCOLOR="#FFFFD0"> <IMG SRC="http://service.bfast.com/bfast/serve?bfmid=31103363&siteid=35510614&bfpage=question6" BORDER="0" WIDTH="1" HEIGHT="1" NOSAVE > 
                        </TD>
                        <TD> 
                          <INPUT TYPE="hidden" NAME="siteid" VALUE="35510614" >
                          <INPUT TYPE="hidden" NAME="bfpage" VALUE="question6">
                          <INPUT TYPE="hidden" NAME="bfmid" VALUE="31103363" >
                          <TABLE BGCOLOR="#FFFFCC" WIDTH="150" CELLPADDING="0" CELLSPACING="0" BORDER="0">
                            <TR> 
                              <TD COLSPAN="2"><IMG SRC="../images/ask_jeeves/questionbox6_a.gif" WIDTH="150" HEIGHT="17" ALT="Have a question? Ask Jeeves!"></TD>
                            </TR>
                            <TR> 
                              <TD ROWSPAN="2" ALIGN="right" VALIGN="bottom" BGCOLOR="#FFFFC8"><IMG SRC="../images/ask_jeeves/questionbox6_b.gif" WIDTH="33" HEIGHT="57"></TD>
                              <TD VALIGN="bottom" ALIGN="CENTER"> 
                                <INPUT TYPE=TEXT NAME=ask SIZE=11>
                                <INPUT TYPE="hidden" NAME="scope" VALUE="web">
                                <INPUT TYPE="hidden" NAME="origin" VALUE="nnnn">
                                <INPUT TYPE="hidden" NAME="qSource" VALUE="n">
                              </TD>
                            </TR>
                            <TR> 
                              <TD VALIGN="bottom" NOWRAP><IMG SRC="../images/ask_jeeves/questionbox6_c.gif" WIDTH="71" HEIGHT="36"> 
                                <INPUT TYPE="IMAGE" SRC="../images/ask_jeeves/questionbox6_d.gif" BORDER="0" WIDTH="46" HEIGHT="36" NAME="IMAGE" ALT="Ask!">
                              </TD>
                            </TR>
                          </TABLE>
                        </TD>
                      </TR>
                    </FORM>
                  </TABLE>
                </TD>
              </TR>
            </TABLE>
          </TD>
        </TR>
      </TABLE>
      <BR>
      <TABLE WIDTH="100%" BORDER="0" CELLSPACING="5" CELLPADDING="0">
        <TR> 
          <TD ALIGN="CENTER"> 
            <TABLE BORDER="0" CELLPADDING="1" CELLSPACING="0" BGCOLOR="#000000" WIDTH="100%">
              <FORM METHOD="get" ACTION="http://www.amazon.com/exec/obidos/external-search" TARGET="_blank" NAME="frmAmazon">
                <TR> 
                  <TD> 
                    <TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" ALIGN="top" HEIGHT="90" WIDTH="100%">
                      <TR> 
                        <TD BGCOLOR="#FFFFFF" HEIGHT="20" VALIGN="bottom"> 
                          <DIV ALIGN="center"><B>Search Now:</B></DIV>
                        </TD>
                        <TD BGCOLOR="#FFFFFF"><FONT FACE="verdana,arial,helvetica" SIZE="-2">&nbsp;</FONT> </TD>
                      </TR>
                      <TR> 
                        <TD BGCOLOR="#FFFFFF" HEIGHT="30" VALIGN="top"> 
                          <DIV ALIGN="center"><FONT FACE="verdana,arial,helvetica" SIZE="-2"> 
                            <INPUT TYPE="text" NAME="keyword" SIZE="11" VALUE="">
                            </FONT> </DIV>
                        </TD>
                        <TD BGCOLOR="#FFFFFF" HEIGHT="20" VALIGN="top" ALIGN="left"> 
                          <INPUT TYPE="hidden" NAME="mode" VALUE="blended">
                          <INPUT TYPE="hidden" NAME="tag" VALUE="eddisbasiguidt02">
                          <INPUT TYPE="image" WIDTH="21" HEIGHT="21" BORDER="0" VALUE="Go" NAME="Go" SRC="../images/amazon/ap-search-go-btn.gif" ALIGN="absmiddle" ALT="Go!">
                        </TD>
                      </TR>
                      <TR ALIGN="CENTER"> 
                        <TD COLSPAN="2" BGCOLOR="#000000" HEIGHT="40"><A HREF="http://www.amazon.com/exec/obidos/redirect-home/eddisbasiguidt02" TARGET="_blank"><IMG SRC="../images/amazon/ap-search-logo-126x32.gif" WIDTH="126" HEIGHT="32" BORDER="0" HSPACE="0" VSPACE="0" ALT="In Association with Amazon.com"></A> 
                        </TD>
                      </TR>
                    </TABLE>
                  </TD>
                </TR>
              </FORM>
            </TABLE>
          </TD>
        </TR>
      </TABLE>
      <BR>
      <TABLE WIDTH="100%" BORDER="0" CELLSPACING="5" CELLPADDING="0">
        <TR> 
          <TD CLASS="alphashade1"> 
            <P ALIGN="CENTER"><A HREF="../other/computing.htm" CLASS="g">.. General Computing ..</A></P>
            <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
              <TR> 
                <TD> 
                  <SCRIPT LANGUAGE="JavaScript">NN ? writeBooks(pr, 3, true) : writeBooks(pr, 3, true);</SCRIPT>
                </TD>
              </TR>
            </TABLE>
          </TD>
        </TR>
      </TABLE>
      <BR>
      <TABLE WIDTH="100%" BORDER="0" CELLSPACING="5" CELLPADDING="0">
        <TR> 
          <TD CLASS="alphashade1" ALIGN="CENTER"> 
            <P><A HREF="../other/game_programming.htm" CLASS="g">.. Game Programming ..</A></P>
            <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
              <TR> 
                <TD> 
                  <SCRIPT LANGUAGE="JavaScript">NN ? writeBooks(gp, 3, true) : writeBooks(gp, 3, true);</SCRIPT>
                </TD>
              </TR>
            </TABLE>
          </TD>
        </TR>
      </TABLE>
      <BR>
      <TABLE WIDTH="100%" BORDER="0" CELLSPACING="4" CELLPADDING="0">
        <TR> 
          <TD CLASS="alphashade1" ALIGN="CENTER"> 
            <P><A HREF="../other/macromedia.htm" CLASS="g">.. Macromedia Products ..</A></P>
            <TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
              <TR> 
                <TD> 
                  <SCRIPT LANGUAGE="JavaScript">NN ? writeBooks(mm, 3, true) : writeBooks(mm, 3, true);</SCRIPT>
                </TD>
              </TR>
            </TABLE>
          </TD>
        </TR>
      </TABLE>
      <BR>
      <SCRIPT LANGUAGE="JavaScript">
			writeBannerAds();
			</SCRIPT>
    </TD>
  </TR>
  <TR> 
    <TD BGCOLOR="#FFFFFF" VALIGN="BOTTOM" ALIGN="CENTER"> 
      <P><A HREF="../index.htm">http://www.iota-six.co.uk</A> &copy; 2002</P>
      <P>Thanks to <A HREF="http://www.completecontrol.co.uk" TARGET="_blank">CompleteControl</A> UK Ltd<BR>
      </P>
    </TD>
    <TD CLASS="bodybackground">&nbsp;</TD>
  </TR>
  <TR> 
    <TD><IMG SRC="../images/shim.gif" WIDTH="600" HEIGHT="1"></TD>
    <TD><IMG SRC="../images/shim.gif" WIDTH="172" HEIGHT="1"></TD>
  </TR>
</TABLE>
<SCRIPT LANGUAGE="JavaScript">
end();
</SCRIPT>
</BODY>
<!-- #EndTemplate --></HTML>

