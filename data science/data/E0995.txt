ID=E0995
URL=http://gcc.gnu.org/cgi-bin/gnatsweb.pl?cmd=view&amp;pr=1027&amp;database=gcc
SIZE=16557
DATE=12/07/02
TIME=19:26:36
DATASET=C
HTML=<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html
	PUBLIC "-//W3C//DTD XHTML Basic 1.0//EN"
	"http://www.w3.org/TR/xhtml-basic/xhtml-basic10.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US"><head><title>View PR 1027 - gnatsweb</title>
</head><body bgcolor="#ffffff"><TABLE WIDTH="100%" BORDER="0" CELLPADDING="0" CELLSPACING="0"><TR>
<TD><TABLE BORDER="0" CELLSPACING="0" CELLPADDING="3" WIDTH="100%"><TR STYLE="background-color: #000000">
<TD ALIGN="LEFT"><SPAN STYLE="  color: #ffffff;
  font-family: 'Verdana', 'Arial', 'Helvetica', 'sans';
  font-weight: light;
  text-decoration: none;
 font-size: 14pt; ">gcc&nbsp;&nbsp;</SPAN><SPAN STYLE="  color: #ffffff;
  font-family: 'Verdana', 'Arial', 'Helvetica', 'sans';
  font-weight: light;
  text-decoration: none;
 font-size: 8pt; ">User: guest&nbsp;&nbsp;</SPAN><SPAN STYLE="  color: #ffffff;
  font-family: 'Verdana', 'Arial', 'Helvetica', 'sans';
  font-weight: light;
  text-decoration: none;
 font-size: 8pt; ">Access: viewconf</SPAN>
</TD>
<TD ALIGN="RIGHT">
           <A HREF="/cgi-bin/gnatsweb.pl?database=gcc" STYLE="  color: #ffffff;
  font-family: 'Verdana', 'Arial', 'Helvetica', 'sans';
  font-weight: light;
  text-decoration: none;
 font-size: 14pt; ">gnatsweb</A>
             </TD>
</TR>
</TABLE></TD></TR>
<TR>
<TD COLSPAN="2"><TABLE BORDER="1" CELLSPACING="0" BGCOLOR="#000000" CELLPADDING="3"><TR>
<TD><A HREF="/cgi-bin/gnatsweb.pl?database=gcc" STYLE="  color: #ffffff;
  font-family: 'Verdana', 'Arial', 'Helvetica', 'sans';
  font-size: 8pt;
  font-weight: normal;
  text-decoration: none;
">MAIN PAGE</A></TD><TD><A HREF="http://gcc.gnu.org/cgi-bin/gnatsweb.pl?cmd=create&database=gcc&return_url=http%3A%2F%2Fgcc.gnu.org%2Fcgi-bin%2Fgnatsweb.pl%3Fcmd%3Dview%26amp%3D%26amp%3D%26pr%3D1027%26database%3Dgcc" STYLE="  color: #ffffff;
  font-family: 'Verdana', 'Arial', 'Helvetica', 'sans';
  font-size: 8pt;
  font-weight: normal;
  text-decoration: none;
">CREATE</A></TD><TD><A HREF="/cgi-bin/gnatsweb.pl?database=gcc&cmd=query" STYLE="  color: #ffffff;
  font-family: 'Verdana', 'Arial', 'Helvetica', 'sans';
  font-size: 8pt;
  font-weight: normal;
  text-decoration: none;
">QUERY</A></TD><TD><A HREF="/cgi-bin/gnatsweb.pl?database=gcc&cmd=advanced%20query" STYLE="  color: #ffffff;
  font-family: 'Verdana', 'Arial', 'Helvetica', 'sans';
  font-size: 8pt;
  font-weight: normal;
  text-decoration: none;
">ADV. QUERY</A></TD><TD><A HREF="/cgi-bin/gnatsweb.pl?database=gcc&cmd=login%20again" STYLE="  color: #ffffff;
  font-family: 'Verdana', 'Arial', 'Helvetica', 'sans';
  font-size: 8pt;
  font-weight: normal;
  text-decoration: none;
">LOGIN AGAIN</A></TD><TD><A HREF="/cgi-bin/gnatsweb.pl?database=gcc&cmd=help" STYLE="  color: #ffffff;
  font-family: 'Verdana', 'Arial', 'Helvetica', 'sans';
  font-size: 8pt;
  font-weight: normal;
  text-decoration: none;
">HELP</A></TD></TR>
</TABLE>
</TD>
</TR></TABLE><h1>View Problem Report: 1027</h1><form method="post" action="/cgi-bin/gnatsweb.pl?cmd=view&amp;pr=1027&amp;database=gcc" enctype="application/x-www-form-urlencoded">
<input type="hidden" name="database" value="gcc" /><input type="hidden" name="pr" value="1027" /><p> or <a href="mailto:gcc-gnats%40gcc.gnu.org%2C%20gcc-prs%40gcc.gnu.org%2C%20gcc-bugs%40gcc.gnu.org%2C%20cwitty%40newtonlabs.com%2C%20jsm28%40gcc.gnu.org?Subject=Re%3A%20c%2F1027%3A%20slightly%20misleading%20printf%20format%20warning&Body=http%3A%2F%2Fgcc.gnu.org%2Fcgi-bin%2Fgnatsweb.pl%3Fcmd%3Dview%2520audit-trail%26database%3Dgcc%26pr%3D1027">send email to interested parties</a>
</p><hr /><table>
<tr>
<td><b>Reporter's email:</b></td>
<td><tt>cwitty@newtonlabs.com</tt></td>
</tr>
<tr>
<td><b>CC these people<br>on PR status email:</b></td>
<td><tt></tt></td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>
<tr><td  nowrap><b>Number:</b></td>
<td><tt>1027</tt>
</td>
</tr>
<tr><td  nowrap><b>Category:</b></td>
<td><tt>c</tt>
</td>
</tr>
<tr><td  nowrap><b>Synopsis:</b></td>
<td><tt>slightly misleading printf format warning</tt>
</td>
</tr>
<tr><td  nowrap><b>Confidential:</b></td>
<td><tt>no</tt>
</td>
</tr>
<tr><td  nowrap><b>Severity:</b></td>
<td><tt>non-critical</tt>
</td>
</tr>
<tr><td  nowrap><b>Priority:</b></td>
<td><tt>low</tt>
</td>
</tr>
<tr><td  nowrap><b>Responsible:</b></td>
<td><tt>jsm28</tt>
</td>
</tr>
<tr><td  nowrap><b>State:</b></td>
<td><tt>analyzed</tt>
</td>
</tr>
<tr><td  nowrap><b>Class:</b></td>
<td><tt>sw-bug</tt>
</td>
</tr>
<tr><td  nowrap><b>Submitter-Id:</b></td>
<td><tt>net</tt>
</td>
</tr>
<tr><td  nowrap><b>Arrival-Date:</b></td>
<td><tt>Sat Dec 09 17:46:01 PST 2000</tt>
</td>
</tr>
<tr><td  nowrap><b>Closed-Date:</b></td>
<td><tt></tt>
</td>
</tr>
<tr><td  nowrap><b>Last-Modified:</b></td>
<td><tt>Sun Dec 10 05:06:01 PST 2000</tt>
</td>
</tr>
<tr><td  nowrap><b>Originator:</b></td>
<td><tt>Carl Witty</tt>
</td>
</tr>
<tr><td  nowrap><b>Release:</b></td>
<td><tt>gcc version 2.7.2.3 (also with Code Sourcery compilation server as of 20001209)</tt>
</td>
</tr>
<tr><td valign=top nowrap><b>Organization:</b></td>
<td><tt></tt>
</td>
</tr>
<tr><td valign=top nowrap><b>Environment:</b></td>
<td><tt>Debian GNU/Linux (slink); x86<br>
</tt>
</td>
</tr>
<tr><td valign=top nowrap><b>Description:</b></td>
<td><tt>When you compile the following code with -c -O -Wall -g,<br>
the warning messages include:<br>
7: warning: char format, double arg (arg 2)<br>
for the line<br>
printf(&quot;%s&quot;, &amp;d);<br>
I find this warning misleading; I would prefer:<br>
warning: char* format, double* arg (arg 2)<br>
</tt>
</td>
</tr>
<tr><td valign=top><b>File Attachments:</b></td>
<td></td>
</tr>
<tr><td valign=top nowrap><b>How-To-Repeat:</b></td>
<td><tt>#include &lt;stdio.h&gt;<br>
<br>
void foo() {<br>
&nbsp; double d;<br>
<br>
&nbsp; printf(&quot;%c&quot;, d);<br>
&nbsp; printf(&quot;%s&quot;, &amp;d);<br>
&nbsp; printf(&quot;%c&quot;, &amp;d);<br>
&nbsp; printf(&quot;%s&quot;, d);<br>
}<br>
</tt>
</td>
</tr>
<tr><td valign=top nowrap><b>Fix:</b></td>
<td><tt><br>
</tt>
</td>
</tr>
<tr><td valign=top nowrap><b>Release-Note:</b></td>
<td><tt><br>
</tt>
</td>
</tr>
<tr><td valign=top nowrap><b>Unformatted:</b></td>
<td><tt><br>
</tt>
</td>
</tr>
</table><hr />
<p> or <a href="mailto:gcc-gnats%40gcc.gnu.org%2C%20gcc-prs%40gcc.gnu.org%2C%20gcc-bugs%40gcc.gnu.org%2C%20cwitty%40newtonlabs.com%2C%20jsm28%40gcc.gnu.org?Subject=Re%3A%20c%2F1027%3A%20slightly%20misleading%20printf%20format%20warning&Body=http%3A%2F%2Fgcc.gnu.org%2Fcgi-bin%2Fgnatsweb.pl%3Fcmd%3Dview%2520audit-trail%26database%3Dgcc%26pr%3D1027">send email to interested parties</a>
</p>
</form><h3>Audit Trail:</h3>
<pre>
From: &quot;Joseph S. Myers&quot; &lt;jsm28@cam.ac.uk&gt;
To: &lt;cwitty@newtonlabs.com&gt;
Cc: &lt;gcc-gnats@gcc.gnu.org&gt;,  &lt;gcc-bugs@gcc.gnu.org&gt;
Subject: Re: c/1027: slightly misleading printf format warning
Date: Sun, 10 Dec 2000 11:40:57 +0000 (GMT)

 On 10 Dec 2000 cwitty@newtonlabs.com wrote:
 
 &gt; When you compile the following code with -c -O -Wall -g,
 &gt; the warning messages include:
 &gt; 7: warning: char format, double arg (arg 2)
 &gt; for the line
 &gt; printf(&quot;%s&quot;, &amp;d);
 &gt; I find this warning misleading; I would prefer:
 &gt; warning: char* format, double* arg (arg 2)
 
 The problem is that the code for printing type names when format checking
 tries to be too clever about working out the names to use and deciding
 that types are the same from their names when it had already decided that
 they were different types.  This leads to various other oddities with
 messages referring to &quot;different type arg&quot; when they could be more
 precise.
 
 The C++ front end includes general support for producing a name for an
 arbitrary type in diagnostics with the %T format specifier in cp_error,
 cp_pedwarn etc..  What&#39;s needed to fix this problem properly is for the C
 front end to get something along the lines of what the C++ front end has
 for formatting types; then the actual argument type could be formatted
 with %T.  (Adding these capabilities to the C front end could probably
 also lead to better diagnostics in various other places.)
 
 -- 
 Joseph S. Myers
 jsm28@cam.ac.uk
 

From: Gabriel Dos Reis &lt;gdr@codesourcery.com&gt;
To: &quot;Joseph S. Myers&quot; &lt;jsm28@cam.ac.uk&gt;
Cc: &lt;cwitty@newtonlabs.com&gt;, &lt;gcc-gnats@gcc.gnu.org&gt;, &lt;gcc-bugs@gcc.gnu.org&gt;
Subject: Re: c/1027: slightly misleading printf format warning
Date: 10 Dec 2000 12:57:16 +0100

 &quot;Joseph S. Myers&quot; &lt;jsm28@cam.ac.uk&gt; writes:
 
 | On 10 Dec 2000 cwitty@newtonlabs.com wrote:
 | 
 | &gt; When you compile the following code with -c -O -Wall -g,
 | &gt; the warning messages include:
 | &gt; 7: warning: char format, double arg (arg 2)
 | &gt; for the line
 | &gt; printf(&quot;%s&quot;, &amp;d);
 | &gt; I find this warning misleading; I would prefer:
 | &gt; warning: char* format, double* arg (arg 2)
 | 
 | The problem is that the code for printing type names when format checking
 | tries to be too clever about working out the names to use and deciding
 | that types are the same from their names when it had already decided that
 | they were different types.  This leads to various other oddities with
 | messages referring to &quot;different type arg&quot; when they could be more
 | precise.
 | 
 | The C++ front end includes general support for producing a name for an
 | arbitrary type in diagnostics with the %T format specifier in cp_error,
 | cp_pedwarn etc..  What&#39;s needed to fix this problem properly is for the C
 | front end to get something along the lines of what the C++ front end has
 | for formatting types; then the actual argument type could be formatted
 | with %T.  (Adding these capabilities to the C front end could probably
 | also lead to better diagnostics in various other places.)
 
 I&#39;ve already put in the necessary machinery for so doing in
 diagnostics.*.  What remains to be done is to replace error_with_decl()
 and warning_with_decl() to error() and warning() (maybe error_at())
 with use of those specifiers.  That was planed but I didn&#39;t get the
 chance to finish the work.  Already on my TODO list but I would love
 to assist any taker. 
 
 -- Gaby

From: &quot;Joseph S. Myers&quot; &lt;jsm28@cam.ac.uk&gt;
To: Gabriel Dos Reis &lt;gdr@codesourcery.com&gt;
Cc: &lt;cwitty@newtonlabs.com&gt;,  &lt;gcc-gnats@gcc.gnu.org&gt;, 
     &lt;gcc-bugs@gcc.gnu.org&gt;
Subject: Re: c/1027: slightly misleading printf format warning
Date: Sun, 10 Dec 2000 12:09:45 +0000 (GMT)

 On 10 Dec 2000, Gabriel Dos Reis wrote:
 
 &gt; I&#39;ve already put in the necessary machinery for so doing in
 &gt; diagnostics.*.  What remains to be done is to replace error_with_decl()
 &gt; and warning_with_decl() to error() and warning() (maybe error_at())
 &gt; with use of those specifiers.  That was planed but I didn&#39;t get the
 &gt; chance to finish the work.  Already on my TODO list but I would love
 &gt; to assist any taker.
 
 What&#39;s also needed for the present PR is for the code in cp/error.c for
 formatting types to move to common code where C can use it as well.  (I&#39;d
 guess that most of it can probably be shared, though stylistic differences
 such as &quot;int*&quot; for C++ versus &quot;int *&quot; for C should be allowed for.  Or, a
 version covering only C types might be a lot simpler.)  The existing code
 in c-lang.c
 
     case &#39;D&#39;:
     case &#39;F&#39;:
     case &#39;T&#39;:
       {
         const char *n = DECL_NAME (t)
           ? (*decl_printable_name) (t, 2)
           : &quot;({anonymous})&quot;;
         output_add_string (buffer, n);
       }
       return 1;
 
 along with the default decl_printable_name / decl_name doesn&#39;t seem
 adequate for even the simple case of this PR (where a name for a pointer
 type should be constructed).
 
 -- 
 Joseph S. Myers
 jsm28@cam.ac.uk
 

From: Gabriel Dos_Reis &lt;gdosreis@sophia.inria.fr&gt;
To: &quot;Joseph S. Myers&quot; &lt;jsm28@cam.ac.uk&gt;
Cc: Gabriel Dos Reis &lt;gdr@codesourcery.com&gt;, &lt;cwitty@newtonlabs.com&gt;,
   &lt;gcc-gnats@gcc.gnu.org&gt;, &lt;gcc-bugs@gcc.gnu.org&gt;
Subject: Re: c/1027: slightly misleading printf format warning
Date: Sun, 10 Dec 2000 13:45:40 +0100 (MET)

 | On 10 Dec 2000, Gabriel Dos Reis wrote:
 | 
 | &gt; I&#39;ve already put in the necessary machinery for so doing in
 | &gt; diagnostics.*.  What remains to be done is to replace error_with_decl()
 | &gt; and warning_with_decl() to error() and warning() (maybe error_at())
 | &gt; with use of those specifiers.  That was planed but I didn&#39;t get the
 | &gt; chance to finish the work.  Already on my TODO list but I would love
 | &gt; to assist any taker.
 | 
 | What&#39;s also needed for the present PR is for the code in cp/error.c for
 | formatting types to move to common code where C can use it as well.  (I&#39;d
 | guess that most of it can probably be shared, though stylistic differences
 | such as &quot;int*&quot; for C++ versus &quot;int *&quot; for C should be allowed for.  
 
 Certainly.  In C++ we tend to systematically print scopes and such.
 But it is true that all those differences can be parameterized through
 call-backs.  The codes in cp/error.c are still under development
 (although there has been no visible activity about them).
 In the long run cp_error() and cp_warning() are supposed to killed in
 favor of error() and warning().
 
 | ... Or, a
 | version covering only C types might be a lot simpler.)  The existing code
 | in c-lang.c
 | 
 |     case &#39;D&#39;:
 |     case &#39;F&#39;:
 |     case &#39;T&#39;:
 |       {
 |         const char *n = DECL_NAME (t)
 |           ? (*decl_printable_name) (t, 2)
 |           : &quot;({anonymous})&quot;;
 |         output_add_string (buffer, n);
 |       }
 |       return 1;
 | 
 | along with the default decl_printable_name / decl_name doesn&#39;t seem
 | adequate for even the simple case of this PR (where a name for a pointer
 | type should be constructed).
 
 Do you see a better short term solution?
 
 -- Gaby
 CodeSourcery, LLC		
        <a href="http://www.codesourcery.com">http://www.codesourcery.com</a>

From: &quot;Joseph S. Myers&quot; &lt;jsm28@cam.ac.uk&gt;
To: Gabriel Dos_Reis &lt;gdosreis@sophia.inria.fr&gt;
Cc: Gabriel Dos Reis &lt;gdr@codesourcery.com&gt;,  &lt;cwitty@newtonlabs.com&gt;, 
     &lt;gcc-gnats@gcc.gnu.org&gt;,  &lt;gcc-bugs@gcc.gnu.org&gt;
Subject: Re: c/1027: slightly misleading printf format warning
Date: Sun, 10 Dec 2000 12:55:17 +0000 (GMT)

 On Sun, 10 Dec 2000, Gabriel Dos_Reis wrote:
 
 &gt; Do you see a better short term solution?
 
 No.  I don&#39;t think this PR is release-critical, so fixing it can wait
 until the diagnostics support for type names is shared between C and C++.
 
 -- 
 Joseph S. Myers
 jsm28@cam.ac.uk
 
Responsible-Changed-From-To: unassigned-&gt;jsm28
Responsible-Changed-By: jsm28
Responsible-Changed-When: Sun Dec 10 04:59:32 2000
Responsible-Changed-Why:
    I&#39;ll fix this when the necessary diagnostics support
    (see messages sent to this PR) is available in GCC.
State-Changed-From-To: open-&gt;analyzed
State-Changed-By: jsm28
State-Changed-When: Sun Dec 10 04:59:32 2000
State-Changed-Why:
    Confirmed as a bug.

From: jsm28@gcc.gnu.org
To: cwitty@newtonlabs.com, gcc-gnats@gcc.gnu.org, jsm28@cam.ac.uk,
  jsm28@gcc.gnu.org, nobody@gcc.gnu.org
Cc:  
Subject: Re: c/1027
Date: 10 Dec 2000 12:59:32 -0000

 Synopsis: slightly misleading printf format warning
 
 Responsible-Changed-From-To: unassigned-&gt;jsm28
 Responsible-Changed-By: jsm28
 Responsible-Changed-When: Sun Dec 10 04:59:32 2000
 Responsible-Changed-Why:
     I&#39;ll fix this when the necessary diagnostics support
     (see messages sent to this PR) is available in GCC.
 State-Changed-From-To: open-&gt;analyzed
 State-Changed-By: jsm28
 State-Changed-When: Sun Dec 10 04:59:32 2000
 State-Changed-Why:
     Confirmed as a bug.
 
 
        <a href="http://gcc.gnu.org/cgi-bin/gnatsweb.pl?cmd=view&amp;pr=1027&amp;database=gcc">http://gcc.gnu.org/cgi-bin/gnatsweb.pl?cmd=view&amp;pr=1027&amp;database=gcc</a>
</pre></body></html>
