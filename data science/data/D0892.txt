ID=D0892
URL=http://www.jadcentral.com/newscentral/feature.jsp?feature_ID=49
SIZE=32786
DATE=16/07/02
TIME=15:01:09
DATASET=Java
HTML=



















<HTML>
<HEAD>
<TITLE>JADCentral : Resolving Internet Addresses using Java
</TITLE>
 	
    <link href="/css/jadcentral.css" media="screen" type="text/css" rel="stylesheet"/>

<script type="text/javascript" language="javascript">
function removeCode (URL)
{
  
  alert ("You must be logged in to use this feature ..");
  
  
}

function addComment (URL)
{
  
  alert ("You must be logged in to use this feature ..");
  
  
}
function partnerInquiryWin (URL)
{
  var inquiry_win = window.open (URL,"comment_win","width=405,height=175,resizable=yes,screenX=300,screenY=100"); 
  inquiry_win.focus();
  
}

function jugInquiryWin (URL)
{
  var inquiry_win = window.open (URL,"inquiry_win","width=405,height=175,resizable=yes,screenX=300,screenY=100"); 
  inquiry_win.focus();
  
}

function partnerLinkWin (URL)
{
  
  alert ("You must be logged in to use this feature ..");
  
  
}

function jugLinkWin (URL)
{

  var edit_win = window.open (URL,"edit_win","width=420,height=227,scrollbars=yes,resizable=yes,screenX=300,screenY=100"); 
  edit_win.focus();

}

function jugEventWin (URL)
{
  
  alert ("You must be logged in to use this feature ..");
  
  
}

function closeWin ()
{
opener = window.opener;
href = opener.location.href;
opener.location.href=href;
window.close();
}

function partnerWhitepaperWin (URL)
{
  
  alert ("You must be logged in to use this feature ..");
  
  
}

function partnerEditWin (URL)
{
  
  alert ("You must be logged in to use this feature ..");
  
  
}
function jugEditWin (URL)
{

  var edit_win = window.open (URL,"edit_win","width=415,height=390,scrollbars=yes,resizable=yes,screenX=300,screenY=100"); 
  edit_win.moveTo(200,100);
  edit_win.focus();

  
}

function removePartner (URL)
{
  if (confirm("Do you want to remove this partner?"))
  {
  	window.location.href=URL;
  }
}

function removeJUG (URL)
{
  if (confirm("Do you want to remove this Java User Group?"))
  {
  	window.location.href=URL;
  }
}

function newFocusWin (URL)
{
  var new_win = window.open (URL,"new_win","");
  new_win.focus();
}

function addFavorite (URL)
{
  
  alert ("You must be logged in to use this feature ..");
  
  
}

function addNotify (URL)
{
  
  alert ("You must be logged in to use this feature ..");
  
}

function downloadCode (URL)
{
  
  alert ("You must be logged in to download code..");
  
}


function profileOption (URL)
{
  
  alert ("You must be logged in to use this feature ..");
  
}

function removeFromFeatured(URL)
{

}

function addFeaturedCode(URL)
{

}

function removeFeature(URL)
{
  if (confirm("Do you want to remove this Feature Story?"))
  	window.location.href=URL;
 
}

if (document.images) {


var codecentral_on = new Image();
codecentral_on.src = "/images/topnav/codecentral-on.gif";
var codecentral_off = new Image();
codecentral_off.src = "/images/topnav/codecentral-off.gif";

var forums_on = new Image();
forums_on.src = "/images/topnav/forums-on.gif";
var forums_off = new Image();
forums_off.src = "/images/topnav/forums-off.gif";

var newscentral_on = new Image();
newscentral_on.src = "/images/topnav/newscentral-on.gif";
var newscentral_off = new Image();
newscentral_off.src = "/images/topnav/newscentral-off.gif";

var resources_on = new Image();
resources_on.src = "/images/topnav/resources-on.gif";
var resources_off = new Image();
resources_off.src = "/images/topnav/resources-off.gif";

var jugcentral_on = new Image();
jugcentral_on.src = "/images/topnav/jugcentral-on.gif";
var jugcentral_off = new Image();
jugcentral_off.src = "/images/topnav/jugcentral-off.gif";

var tech_showcase_on = new Image();
tech_showcase_on.src = "/images/topnav/tech_showcase-on.gif";
var tech_showcase_off = new Image();
tech_showcase_off.src = "/images/topnav/tech_showcase-off.gif";


}

function rollOn ( imageBase )
{
  //alert("rollOn");
  if (document.images)
  {
    document.images[imageBase].src = eval(imageBase+"_on.src");
  }
}
function rollOff ( imageBase )
{
  //alert("rollOff");
  if (document.images)
  {
    document.images[imageBase].src = eval(imageBase+"_off.src");
  }
}
</script>

</HEAD>

<body bgcolor="#ffffff" marginwidth="0" marginheight="0" topmargin="0" leftmargin="0" >




<!--- TOP --->
<table width="750" cellspacing="0" cellpadding="0" border="0">
<tr>
    <td width="60" height="65" valign="top" rowspan="4"><a href="/"><img src="/images/box.gif" width=60 height=65 alt="" border="0"></a></td>
    <td align="right" height="14"><img src="/images/separator-top.gif" width=2 height=14 alt="" border="0"><a href="/"><img src="/images/topnav/home-off.gif" width=44 height=14 alt="home" border="0"></a><img src="/images/separator-top.gif" width=2 height=14 alt="" border="0"><a href="/my_account/login_action.jsp"><img src="/images/topnav/myaccount-off.gif" width=85 height=14 alt="my account" border="0"></a><img src="/images/separator-top.gif" width=2 height=14 alt="" border="0"><a href="/help/"><img src="/images/topnav/help-off.gif" width=44 height=14 alt="help" border="0"></a><img src="/images/separator-top.gif" width=2 height=14 alt="" border="0"><img src="/images/spacer.gif" width=14 height=14 alt="" border="0"></td>
</tr>
<tr>
    <td height="21"><a href="/"><img src="/images/logo.gif" width=396 height=20 alt="" border="0"></a></td>
</tr>
<tr>
    <td height="2" bgcolor="#CCCCCC"><img src="/images/spacer.gif" width=1 height=2 alt="" border="0"></td>
</tr>
<tr>
    <td height="28" bgcolor="#999999" valign="top">
	<table width="690" cellspacing="0" cellpadding="0" border="0">
    <tr><form action="/search.jsp" method=GET>
	    <td valign="top"><a href="/codecentral/" onMouseOver="rollOn('codecentral')" onMouseOut="rollOff('codecentral')"><img src="/images/topnav/codecentral-off.gif" width=84 height=19 alt="" border="0" name="codecentral"></a><img src="/images/spacer.gif" width=8 height=14 alt="" border="0"><a href="/forums/" onMouseOver="rollOn('forums')" onMouseOut="rollOff('forums')"><img src="/images/topnav/forums-off.gif" width=47 height=19 alt="" border="0" name="forums"></a><img src="/images/spacer.gif" width=8 height=14 alt="" border="0"><a href="/newscentral/"><img src="/images/topnav/newscentral-on.gif" width=86 height=19 alt="" border="0" name="newscentral"></a><img src="/images/spacer.gif" width=8 height=14 alt="" border="0"><a href="/resources/" onMouseOver="rollOn('resources')" onMouseOut="rollOff('resources')"><img src="/images/topnav/resources-off.gif" width=67 height=19 alt="" border="0" name="resources"></a><img src="/images/spacer.gif" width=8 height=14 alt="" border="0"><a href="/tech_showcase/" onMouseOver="rollOn('tech_showcase')" onMouseOut="rollOff('tech_showcase')"><img src="/images/topnav/tech_showcase-off.gif" width=97 height=19 alt="" border="0" name="tech_showcase"></a><a href="/jugcentral/" onMouseOver="rollOn('jugcentral')" onMouseOut="rollOff('jugcentral')"><img src="/images/topnav/jugcentral-off.gif" width=79 height=19 alt="" border="0" name="jugcentral"></a></td>
	    <td align="right"><img src="/images/spacer.gif" width=1 height=3 alt="" border="0"><br>
		
		
		<table cellspacing="0" cellpadding="0" border="0" width="178">
		<tr>
		    <td bgcolor="#cccccc" width="1" valign="top"><img src="/images/corner-search.gif" width=1 height=1 alt="" border="0"></td>
		    <td bgcolor="#cccccc" width="54" rowspan="2" align="center"><img src="/images/search.gif" width=41 height=7 alt="" border="0"></td>
		    <td bgcolor="#cccccc" width="94" rowspan="2" class=content><input type="text" class="search" name="search" size="12"></td>
		    <td bgcolor="#cccccc" width="23" rowspan="2"><input type="image" src="/images/search-arrow.gif" width=23 height=11 alt="" border="0"></td>			
		    <td bgcolor="#cccccc" width="1" valign="top"><img src="/images/corner-search.gif" width=1 height=1 alt="" border="0"></td>
		    <td bgcolor="#999999" width="5" rowspan="2"><img src="/images/spacer.gif" width=5 height=1 alt="" border="0"></td>
		</tr>
		<tr>
		    <td bgcolor="#cccccc" width="1" valign="bottom"><img src="/images/corner-search.gif" width=1 height=1 alt="" border="0"></td>
		    <td bgcolor="#cccccc" width="1" valign="bottom"><img src="/images/corner-search.gif" width=1 height=1 alt="" border="0"></td>					
		</tr>
		</table>
		
		</td>
	</form>
	</tr>
	</table>	
	</td>
</tr>
<tr>
    <td height="2" bgcolor="#CCCCCC" colspan="2"><img src="/images/spacer.gif" width=1 height=2 alt="" border="0"></td>
</tr>
</table>
<!--- END TOP --->

<!--- MAIN --->
<table width="750" cellspacing="0" cellpadding="0" border="0">
<tr>
    <td width="14"><img src="/images/spacer.gif" width=14 height=1 alt="" border="0"></td>
    <td width="544" valign="top" class=content>
	<img src="/images/spacer.gif" width=300 height=20 alt="" border="0"><br>
	
	<!--- *****CONTENT TABLE***** --->
	
	<font class=articletitle>Resolving Internet Addresses using Java
</font>
	
	<br><br>
	
	<font class="articlebyline"></font>
	
	<br><br>
	
	<i>JavaCats.Com</i><br><br>
	
	
	
	
	<font class="content">It is easier for us, humans, to remember symbolic
names rather than a bunch of numbers, for example it is easier to memorize
the string fundy.csd.unbsj.ca rather than 138.119.1.2. This article gives
a brief introduction to Internet addressing and naming, then it shows how
to translate symbolic names into Internet addresses and visa versa using
Java. We conclude by implementing a utility that checks for the reachablity
of a remote machine.</I> </P><BR><BR><b>Introduction to Internet Addressing/Naming</b><BR><BR><P>The Internet uses symbolic names for hostnames and networks, such as
prep.ai.mit.edu or columbia.edu. These symbolic names are called domain
names, and they are convenient for us, humans; however, these symbolic
names have to be translated to Internet addresses (IP addresses, IP stands
for Internet Protocol) before they can be used as communication identifiers.
IP address are 32-bit numeric identifiers containing a network identifier
and a host identifier that uniquely identify the network and a host on
that particular network. The translation from symbolic names to IP identifiers
is usually done by a name service. This service is known as the Domain
Name System (DNS). </P><BR><BR><P>IP identifiers are used when a host is sending packets to other hosts
on the same network or another network, or receiving packets from hosts
on the same network or another network. If a host is sending packets to
another host on the same network, only the host identifier is used to locate
that host on the network. On the other hand, if a host is sending packets
to a host on another network then both the host and network identifiers
are used to locate that foreign host. The process of locating networks
and hosts, and delivering packets to them is called routing. A router on
a network contains an IP layer that implements a routing algorithm that
moves packets to their destinations. It is the IP layer responsibility
for moving packets from source to destination on the Internet. IP forwards
each packet based on a four-byte destination address known as the IP number.
Ranges (see below) of IP numbers are assigned by the Internet authorities,
Network Information Center (NIC), to different organizations which in turn
assign numbers to departments. </P><BR><BR><P>While data is being routed, the data can be lost in intermediate networks.
Thus, it is the responsiblity of the underlying transmission protocol used
to verify the correct delivery of data from source to destination. For
example, TCP (Transfer Control Protocol) has support to detect errors or
lost data and to re-transmit data until it is correctly received. </P><BR><BR><P>There are three classes of Internet addresses: A, B, and C. Also, there
is another class known as "Multicast" which is implemented on
some Internet hosts. These different classes of addresses meet the requirement
of different organizations. For example, class A addresses are used for
large networks that have more than 65,536 hosts. Class B addresses are
used for intermediate size networks that have more than 255 but less than
65,536 hosts. Class C addresses are used for networks that have less than
256 hosts. </P><BR><BR><P>The decimal representation of the various classes of Internet Addresses
is shown below: <BR>
Class A: </P><BR><BR><TABLE BORDER=1 CELLPADDING=5 WIDTH="100%" >
<TR>
<TD valign="top" width="25%">Network ID</TD><BR><BR><TD align="center" valign="top" width="75%">Host ID</TD>
</TR>
</TABLE><BR><BR><TABLE BORDER=1 CELLPADDING=5 WIDTH="100%" >
<TR>
<TD align="center" valign="top" width="25%">1 to 127</TD><BR><BR><TD align="center" valign="top" width="25%">0 to 255</TD><BR><BR><TD align="center" valign="top" width="25%">0 to 255</TD><BR><BR><TD align="center" valign="top" width="25%">0 to 255</TD>
</TR>
</TABLE><BR><BR><P><BR>
Class B: </P><BR><BR><TABLE BORDER=1 CELLPADDING=5 WIDTH="100%" >
<TR>
<TD align="center" valign="top" width="50%">Network ID</TD><BR><BR><TD align="center" valign="top" width="50%">Host ID</TD>
</TR>
</TABLE><BR><BR><TABLE BORDER=1 CELLPADDING=5 WIDTH="100%" >
<TR>
<TD align="center" valign="top" width="25%">128 to 191</TD><BR><BR><TD align="center" valign="top" width="25%">0 to 255</TD><BR><BR><TD align="center" valign="top" width="25%">0 to 255</TD><BR><BR><TD align="center" valign="top" width="25%">0 to 255</TD>
</TR>
</TABLE><BR><BR><P><BR>
Class C: </P><BR><BR><TABLE BORDER=1 CELLPADDING=5 WIDTH="100%" >
<TR>
<TD align="center" valign="top" width="75%">Network ID</TD><BR><BR><TD align="center" valign="top" width="25%">Host ID</TD>
</TR>
</TABLE><BR><BR><TABLE BORDER=1 CELLPADDING=5 WIDTH="100%" >
<TR>
<TD align="center" valign="top" width="25%">191 to 233</TD><BR><BR><TD align="center" valign="top" width="25%">0 to 255</TD><BR><BR><TD align="center" valign="top" width="25%">0 to 255</TD><BR><BR><TD align="center" valign="top" width="25%">1 to 254</TD>
</TR>
</TABLE><BR><BR><P><BR>
Multicast: </P><BR><BR><TABLE BORDER=1 CELLPADDING=5 WIDTH="100%" >
<TR>
<TD align="center" valign="top" width="100%">Multicast</TD>
</TR>
</TABLE><BR><BR><TABLE BORDER=1 CELLPADDING=5 WIDTH="100%" >
<TR>
<TD align="center" valign="top" width="25%">234 to 255</TD><BR><BR><TD align="center" valign="top" width="25%">0 to 255</TD><BR><BR><TD align="center" valign="top" width="25%">0 to 255</TD><BR><BR><TD align="center" valign="top" width="25%">1 to 254</TD>
</TR>
</TABLE><BR><BR><P><BR>
</P><BR><BR><P>The decimal numbers shown above represent the permissible range values
for each class of addresses. </P><BR><BR><P>The numbers 0 and 255 have special meanings. The number 0 is reserved
for machines that do not know their address. In certain cases (misconfiguration),
it is possible for a machine not to know its own identifier or the identifier
of the network it is running on. For example, a machine in class C with
the number 0.0.0.42 would represent a machine that knew its number, 42,
but didn't know the number of the network it is running on. </P><BR><BR><P>The number 255 is used for broadcasting. Broadcast is a message that
when you send out you want it to be seen by every machine on the network.
</P><BR><BR><P>Hopefully, the very brief introduction above has given you a basic understanding
of Internet addresses and how they are constructed. Now, let's see how
Java can help us in determining host name, IP addresses, and converting
from symbolic names to IP addresses and vice versa. </P><BR><BR><P>Sometimes, you are interested in getting the IP address of the network
you are running on, or some other hosts IP addresses. This can be done
using the java.net.InetAddress class found in the java.net package. For
example, if you want to get the IP address of the network you are running
on then you would want to call the <B>getLocalHost()</B> and <B>getAddress()</B>
methods of the class InetAddress in the package java.net. The method <B>getLocalHost()</B>
returns an InetAddress object, and <B>getAddress()</B> returns a byte array
of four bytes. </P><BR><BR><P>If you are writing a network-based application, you may need to know
the symbolic name (hostname) or the IP address of the machine the application
is going to run on. If you are running the application on your machine
and you know the symbolic or IP address of your machine then you could
hard-code the machine name, for example: String localHost = "machine-name";
however, if your application is going to run on different machines then
having the localHost hard-coded is not a good idea. You would rather want
your program to be able to figure out the hostname of the machine it is
running on automatically. The following snippet of code shows an example
of how you could find the symbolic name of the machine you are working
on: </P><BR><BR><PRE><TT><FONT COLOR="#0000A0">/*
 *  Program: GetName.java
 *  @author: Qusay H. Mahmoud <k3is@unb.ca>
 * @version: Oct 29, 1996
 */<BR><BR>import java.net.*;<BR><BR>public class GetName 
    public static void main(String argv[]) throws Exception 
        InetAddress host = null;
        host = InetAddress.getLocalHost();
        System.out.println(host.getHostName());
    {{}
}</FONT></TT>
</PRE><BR><BR><P>InetAddress is a class in the java.net package. In the above code, we
are saying that host is of type InetAddress; the assignment host = InetAddress.getLocalHost()
returns an InetAddress. for example if your machine name is "tucker"
and its IP number is "138.119.1.10" then the variable, host,
would have the value: "tucker/138.119.1.10". However, since we
are interested in the symbolic name only then we can use the method getHostname()
to print the machine name, tucker. </P><BR><BR><P>Internet addresses are in digit formats, they are normally called IP
addresses. The above program returns the machine name (hostname). But,
if you want to return the IP number, i.e. "138.119.1.10" then
we could modify the above program so that it would return the IP number
of the local host we are working on, as follows: </P><BR><BR><PRE><TT><FONT COLOR="#0000A0">/*
 *  Program: GetAddress.java
 *  @author: Qusay H. Mahmoud <k3is@unb.ca>
 * @version: Oct 29, 1996
 */<BR><BR>import java.net.*;<BR><BR>public class GetAddress 
    public static void main(String argv[]) throws Exception 
        InetAddress host = null;
        host = InetAddress.getLocalHost();
        byte ip[] = host.getAddress();
        for (int i=0; i<ip.length; i++) {
	   if (i > 0) System.out.print(".");
           System.out.print(ip[i] & 0xff);
        {{}
        System.out.println();
    }
}</FONT></TT>
</PRE><BR><BR><P>The method, getAddress() returns a byte array of four bytes. For example,
if your IP address is: 138.119.1.10 then the byte array ip defined above
would have the following values: </P><BR><BR><PRE>ip[0] = 138
ip[1] = 119
ip[2] = 1
ip[3] = 10
</PRE><BR><BR><P>As mentioned above, all computers on the Internet have addresses. Each
computer has a unique IP address and name that identifies it. Why do we
need addresses anyway? Addresses are important since they help us identify
location of persistence resources, as well as to support routing. </P><BR><BR><P>There is a huge number of names and IP addresses on the Internet, thus
a name services is needed to map each name to an IP address. This service
is what is known as DNS (Domain Name System). An example of a naming service
(a sophisticated DNS client is the nslookup utility found on UNIX systems).
Using nslookup, one can find the hostname for an IP address or the IP address
for a hostname. It is a very useful utility nevertheless. Let's write a
utility that will allow us to find the IP address for any accessible hostname
on the Internet. </P><BR><BR><PRE><TT><FONT COLOR="#0000A0">/*
 *  Program: nslookup.java
 *  @author: Qusay H. Mahmoud <k3is@unb.ca>
 * @version: Oct 29, 1996
 */<BR><BR>import java.net.*;
public class nslookup 
    // Usage: java nslookup hostname
    public static void main(String argv[]) throws Exception 
        String host = argv[0];
        InetAddress address = null;
        try {
          address = InetAddress.getByName(host);
        {{} catch(UnknownHostException e) 
             System.out.println("Unknown host");
             System.exit(0);
        {}
        byte[] ip = address.getAddress();
        for (int i=0; i<ip.length; i++) 
	   if(i > 0) System.out.print(".");
           System.out.print((ip[i]) & 0xff);
        {}
        System.out.println();
    }
}</FONT></TT>
</PRE><BR><BR><P>Writing a utility to convert IP addresses to symbolic names was not
an easy task in JDK1.0.2 due to a bug in the method getHostName() in the
InetAddress class. However, this bug has been fixed in JDK1.1beta, so the
following code should work on JDK1.1. </P><BR><BR><PRE><TT><FONT COLOR="#0000A0">/*
 *   Program: GetIP.java
 *   @author: Qusay H. Mahmoud <k3is@unb.ca>
 *  @version: Nov 2, 1996 (doesn't work with JDK1.0.2
 * @modified: Dec 9, 1996 (works with JDK1.1beta
 */<BR><BR>import java.net.*;
public class GetIP 
    public static void main(String argv[]) throws Exception 
        String host = argv[0];
        InetAddress address = null;
        try {
          address = InetAddress.getByName(host);
        {{} catch (UnknownHostException e) 
            System.out.println("invalid IP - malformed IP");
            System.exit(0);
        {}
        System.out.println(address.getHostName());
    }
}</FONT></TT>
</PRE><BR><BR><P>Up to now, we have given an introduction to Internet addresses and how
to convert symbolic names into IP address and vice versa using Java. Now,
let's write a utility that will allow us to test for the reachability of
destinations on the Internet. </P><BR><BR><P>Ping (which stands for Packet InterNet Groper) is a program found on
UNIX systems. The purpose of this program is to check for reachability
of remote hosts by sending them an ICMP (Internet Control Message Protocol)
echo request and waiting for a reply. The ICMP (Internet Control Message
Protocol), which was initially designed to allow routers to report the
cause of delivery errors, allows routers and hosts to send error or control
messages to other routers and hosts. </P><BR><BR><P>Ping is implemented on UNIX systems by sending an ICMP echo request
to a remote host and waiting for a reply; if the reply contains exactly
the same data that was sent in the request then the remote host is reachable.
On the other hand, if the router gateway can not deliver the echo request
then it send an unreachable message (with an error code) back to the host.
The error code can be one of the following integer values: </P><BR><BR><PRE>        Value                   What it means
        0                       Network Unreachable
        1                       Host Unreachable
        2                       Protocol Unreachable
        3                       Port Unreachable
        4                       Fragmentation Needed (fragment: dividing a datagram into packets)
        5                       Source Route Failed
</PRE><BR><BR><P>Unfortunately, Java does not have support for ICMP packets. ICMP packets
can be created via a socket with the SOCK_RAW type, but Java only supports
SOCK_STREAM (TCP) and SOCK_DGRAM (UDP) sockets. Also, it is important to
note that the ICMP protocol requires all programs using it to be run as
root or be setuid to root; however, the TCP and UDP protocols do not require
that special privilege. </P><BR><BR><P>All hope is not lost.....we still would like to develop a ping utility
that will help us to test for the reachability of remote destinations.
The utility can be developed using either the TCP or UDP protocol. If ping
was to be developed using UDP then one could approach it by sending a packet
to the remote host's echo port (port 7), and if echo reply contains the
same data that was sent in the sending packet then the host is considered
reachable. Note that UDP is not a reliable protocol, and thus the packet
you send/receive may not be received/sent in the same order they were sent/received;
however, one advantage of using UDP is that it is a connectionless protocol
and thus it is unlike TCP where a connection must be opened and closed,
i.e. there is no communication overhead when using UDP. </P><BR><BR><P>I prefer using TCP, so we will develop the ping program using the TCP
protocol. Using TCP, the ping utility can be developed as follows: we attempt
to establish a connection to the remote host's port number (again, port
7), if the connection is successfully established then the remote host
is considered reachable. We then close the connection. Note that we do
not need to send any data to the echo server! </P><BR><BR><PRE><FONT COLOR="#0000A0">/*
 *  Program: ping.java
 *  @author: Qusay H. Mahmoud <k3is@unb.ca>
 * @version: Nov 2, 1996
 */<BR><BR>import java.io.*;
import java.net.*;<BR><BR>public class ping 
    public final static int ECHO_PORT = 7;
    public static void main(String argv[]) 
        if (argv.length != 1) {
          System.out.println("Usage: java ping hostname");
          System.exit(0);
        {{}
        if (alive(argv[0])) 
          System.out.println(argv[0] + " is alive");
        {} else 
         System.out.println("No response from " + argv[0] +". Host is down or does not exist");
        {}
    }<BR><BR>    public static boolean alive(String host) 
        Socket pingSocket = null;
        try 
            pingSocket = new Socket(host, ECHO_PORT);
        {{} catch (UnknownHostException e) 
            System.err.println("UnknownHostException: " +e);
        {} catch (IOException io) 
            System.out.println("IOException: " + io);
        {}
        if (pingSocket != null) 
           try 
              pingSocket.close();
           {{} catch (IOException e) 
                System.err.println("IOException: " + e);
           {}
           return true;
        } else 
           return false;
        {}
    }
}</FONT>
</PRE><BR><BR><P><B>Conclusion</B>:<BR>
Internet addresses, actually, refer to communication paths rather than
computer names. They help TCP/IP applications to hide physical network
details. Thus, the Internet appears as a single uniform virtual network.
Each host on the Internet consists of a 32-bit Internet address that is
used as a communication identifier. <BR>
Java provides, through the class <B>java.net.InetAddress</B>, a nice way
to represent Internet addresses. The class has some useful methods that
you can use in your network applications. </P>
</font>
	
	<br><br>
	
	<!--- *****END CONTENT TABLE***** --->

	</td>
    <td width="10"><img src="/images/spacer.gif" width=10 height=1 alt="" border="0"></td>
    <td width="1" bgcolor="#e2e2e2"><img src="/images/spacer.gif" width=1 height=1 alt="" border="0"></td>
    	<!--- SIDEBAR --->
	<td width="153" valign="top">
	<table width="153" cellpadding="0" cellspacing="0" border="0">

	<tr>
	    <td valign="top">		
		<!--- *****LOGIN***** --->		
		





		<!--- ***** LOGIN ***** --->
		<table width="150" cellspacing="3" cellpadding="0" border="0">
		<tr valign="top">
		    <td>
		    <table width="150" cellspacing="0" cellpadding="0" border="0">
			<tr>
			    <td bgcolor="#666666"><img src="/images/tableheaders/login.gif" width=149 height=13 alt="" border="0"></td>
			</tr>
			<tr>
			    <td><img src="/images/spacer.gif" width=1 height=2 alt="" border="0"></td>
			</tr>
		    </table>
		    <table width="150" cellspacing="0" cellpadding="0" border="0" align="center">
			<tr>
				<td width="10">&#160</td>
			    <td bgcolor="#ffffff" class="content">
				
	
			
			    <form action="/my_account/sign-in.jsp" method="post">
			    	<a href="/my_account/new_user.jsp">Not a member? register</a><br><br>
			    
			    	<input type="hidden" name="redirectURL" value="/newscentral/feature.jsp?feature_ID=49&">
			    
			    	<table width="145" cellspacing="0" cellpadding="0" border="0" align="center">
					
				<tr>
				    <td colspan="2" class="content"><b>Already registered?</b></td>
				</tr>	
				<tr>
				    	<td width="50"><img src="/images/username.gif" width=45 height=5 alt="" border="0"></td>
				 	<td width="95"><input class="content" type="text" name="user_id" size="11"></td>
                		</tr>
				<tr>
			        	<td width="50"><img src="/images/password.gif" width=49 height=5 alt="" border="0"></td>
					<td width="95"><input class="content" type="password" name="password" size="11"></td>
				</tr>
				</table>
				
				<table width="145" cellspacing="0" cellpadding="0" border="0" align="center">
				<tr>
					<td valign="top" width="20"><input class=content type="checkbox" name="save_cookie" value="true"></td>
					<td width="138" class="content"> Remember me</td> 
			    	</tr>
			    	<tr>
				    <td colspan="2" align="center"><input type="image" src="/images/sign-in.gif" border=0></td>
					
				</tr>	
			    	</table><br>
			    	
			    	<a href="/my_account/forgot_password.jsp">Forgot your password?</a>
			     		
			   
			    	</form>
			    
			
			</td>
			
			</tr>
			</table>
		</td>
		</tr>
		</table>
		
		<!--- ***** END LOGIN ***** --->
		<!--- *****END LOGIN***** --->		
	    </td>
	</tr>
	<tr>
	    <td valign="top" bgcolor="#e2e2e2"><img src="/images/spacer.gif" width=150 height=1 alt="" border="0"></td>
	</tr>
	
	<tr>
	    <td valign="top">
			<table width="150" cellspacing="3" cellpadding="0" border="0">
		<tr valign="top">
		    <td>
		    <table width="150" cellspacing="0" cellpadding="0" border="0">
			<tr>
			    <td bgcolor="#666666"><a href="/resources/developer_tornado.jsp"><img src="/images/tableheaders/developer_tornado.gif" width=149 height=13 alt="" border="0"></a></td>
			</tr>
			<tr>
			    <td><img src="/images/spacer.gif" width=1 height=2 alt="" border="0"></td>
			</tr>
		    </table>
		    <table width="150" cellspacing="0" cellpadding="0" border="0">
			<tr>
			
          <td bgcolor="#ffffff" class="content" align="center"> 
		  
		  <OBJECT classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
 codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=5,0,0,0"
 WIDTH=150 HEIGHT=240>
 <PARAM NAME=movie VALUE="/swf/developer_tornado.swf"> <PARAM NAME=quality VALUE=high> <PARAM NAME=bgcolor VALUE=#FFFFFF> <EMBED src="/swf/developer_tornado.swf" quality=high bgcolor=#FFFFFF  WIDTH=150 HEIGHT=240 TYPE="application/x-shockwave-flash" PLUGINSPAGE="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash"></EMBED>
</OBJECT> 
		  <!--
		  <a target="newwin" href="http://nextel.sourceforge.net"> <img border="0" vspace="5" src="/images/logos/nextel.gif"> 
    </a>
	<a target="newwin" href="http://www.codewarrioru.com/CodeWarriorU"> <img border="0" vspace="5" src="/images/logos/metrowerks.gif" width="115" height="56"> 
    </a>
	<a target="newwin" href="http://www.webgain.com/communities/developers/"> <img border="0" vspace="5" src="/images/logos/webgain.gif"></a> 
		  
	<a target="newwin" href="http://e-www.motorola.com/adc/streamaster/developers/"> <img border="0" vspace="5" src="/images/logos/motorola.gif" width="119" height="42"> 
    </a>
 
		  
		  <a href="http://www-106.ibm.com/developerworks/"><img border="0" vspace="5" src="/images/logos/ibm.gif" width="92" height="40"></a> 
      <a href="http://developer.java.sun.com/?frontpage-jdc"> <img border="0" vspace="5" src="/images/logos/sun.gif" width="132" height="61"> 
    </a> <a href="http://education.bea.com/education/certification_program.jsp"> 
    <img border="0" vspace="5" src="/images/logos/bea.gif" width="92" height="53"> 
    </a> <a href="http://msdn.microsoft.com/community/"> <img border="0" vspace="5" src="/images/logos/microsoft.gif" width="112" height="40"> 
    </a> <a href="http://csa.compaq.com/"> <img border="0" vspace="5" src="/images/logos/compaq.gif" width="131" height="26"> 
    </a>  
    <a href="http://dsportal.eservices.hp.com/dspp/home/home_HomePage_IDX/1,1292,,00.html"> 
    <img border="0" vspace="5" src="/images/logos/hp.gif"></a> <a href="http://www.symbiandevnet.com/"> 
    <img border="0" vspace="5" src="/images/logos/symbian.jpg" width="110" height="47"></a> 
    <a href="http://otn.oracle.com/"><img border="0" vspace="5" src="/images/logos/oracle.gif" width="149" height="24"></a> 
    <a href="http://www.sybase.com/developer"> <img border="0" vspace="5" src="/images/logos/sybase.gif" width="150" height="42"></a> 
    <a href="http://www.redhat.com/devnet/"> <img border="0" vspace="5" src="/images/logos/redhat.gif" width="129" height="31"></a> 
	-->
          </td>
			
			</tr>
			</table>
		</td>
		</tr>
		</table>
		
		
	
		</td>
	</tr>
	<tr>
		<td valign="top" bgcolor="#e2e2e2"><img src="/images/spacer.gif" width=150 height=1 alt="" border="0"></td>
	</tr>
	<tr>
	    <td valign="top">
		
		<table width="150" cellspacing="3" cellpadding="0" border="0">
		<tr>
		    <td>
		    <table width="150" cellspacing="0" cellpadding="0" border="0">
			<tr>
			    
          <td bgcolor="#666666"><a href="/tech_showcase/"><img src="/images/tableheaders/tech_showcase.gif" width=149 height=13 alt="" border="0"></a></td>
			</tr>
			<tr>
			    <td><img src="/images/spacer.gif" width=1 height=2 alt="" border="0"></td>
			</tr>
		    </table>
		    <table width="130" cellspacing="0" cellpadding="10" border="0">
			<tr>
			
 
          <td bgcolor="#ffffff" class="content" align="center"> <a href="/tech_showcase/partner.jsp?partner_ID=11"><img src="/tech_showcase/partner_11/fieldworker.gif" border="0" vspace="4" width="100" height="109"></a><br>
            <a href="/tech_showcase/partner.jsp?partner_ID=99"><img src="/tech_showcase/partner_99/bigface.gif" border="0" vspace="8" width="100" height="28"></a><br>
            <a href="/tech_showcase/partner.jsp?partner_ID=3"><img src="/tech_showcase/partner_3/pblogosml.gif" border="0" vspace="4" width="100" height="30"></a><br>
            <a href="/tech_showcase/partner.jsp?partner_ID=68"><img src="/tech_showcase/partner_74/OnTheEdge2.jpg" border="0" vspace="8" width="120" height="85" ></a><br>
			</td>
			
			</tr>
			</table>
		</td>
		</tr>
		</table>
	
		</td>
	</tr>
<tr>
		<td valign="top" bgcolor="#e2e2e2"><img src="/images/spacer.gif" width=150 height=1 alt="" border="0"></td>
	</tr>
	<tr>
	    <td valign="top">
		<table width="150" cellpadding="0" cellspacing="3" border="0">
	<tr>
	    <td valign="top">	
	    
		<table width="150" cellspacing="0" cellpadding="0" border="0">
		<tr>
		<td bgcolor="#666666" colspan="2" width="150">
		<a href="/newscentral/events/"><img src="/images/tableheaders/java_events.gif" width=149 height=13 alt="" border="0"></a></td>
		
		</tr>
		<tr>
		  <td bgcolor="#ffffff" colspan="2" width="150" align="center"> 
			
<!--<a target="new" href="http://servlet.java.sun.com/javaone/home/0-sf2002.jsp"><img src="/images/events/javaone.gif" width="150" height="40" border="0" vspace="4"></a><br>
	-->		

			  <center>
              <a href="http://www.sys-con.com/java/readerschoice2002/" target="_blank"><img src="/images/events/JDJ_ReadersChoice.jpg" width="65" height="70" border="0" vspace="10"></a> 
            </center>
          </td>
				
		</tr>
		</table>
		
	</td>
</tr>
</table>
	
		</td>
	</tr>
	</table></td>
	<!--- END SIDEBAR --->
</tr>
<tr>
<td colspan="3" align="center">
<font class="textlinks">
<br>

<a href="/codecentral/">CODECENTRAL</a> | <a href="/forums/">FORUMS</a> | <a href="/newscentral/">NEWS CENTRAL</a> | <A href="/resources/">RESOURCES</a> | <a href="/tech_showcase/">TECH SHOWCASE</a> | <a href="/jugcentral/">JUG CENTRAL</a> | <a href="/privacy.jsp">PRIVACY POLICY & DISCLAIMER</a><br>
<a href="/index.jsp">HOME</a> | 
<a href="/my_account/login_action.jsp">MY ACCOUNT</a> | 
<a href="/help/index.jsp">HELP</a> | <a href="/contact_us.jsp">CONTACT US</a>
</font>
</td>
<td colspan="2">&#160;</td>
</tr>

</table>
<!--- END MAIN --->



</body>
</html>

