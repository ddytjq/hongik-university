ID=E0808
URL=http://www.cplusplus.com/ref/cstdio/
SIZE=9578
DATE=12/07/02
TIME=19:24:39
DATASET=C
HTML=<HTML>
<HEAD>
<TITLE>C++ reference: cstdio library (stdio.h)</TITLE>
<META NAME="description" CONTENT="Standard C library for input/output using streams">
<META NAME="keywords" CONTENT="function stdio.h">
</HEAD>
<BODY BGCOLOR="white">
<!--header-->
<TABLE WIDTH=100%><TR><TD BGCOLOR="#D0D0D0" ALIGN="left"><FONT FACE="arial,helvetica,verdana" SIZE=2>&nbsp;
 <A HREF="http://www.cplusplus.com" TARGET="_top">cplusplus.com</A> &gt;
 <A HREF="../indexr.html">reference</A> &gt;
 cstdio
</TD></TR></TABLE>

<TABLE WIDTH=100%><TR><TD>
<FONT FACE="arial,helvetica" SIZE=6><B>
stdio.h
</B></FONT>
</TD><TD ALIGN="right"><!--ad--><script language="Javascript"><!-- 
var a=b=c=d=e=h=i=j=l=n=p=s=t=u=v=w=x=y=z=dc='';
var id=o=k=f=0;  var jar=new Date(); var f=jar.getSeconds() * jar.getMinutes();
dc=document;  n=navigator;  v=parseFloat(n.appVersion);  e=escape(dc.referrer);
dc.cookie='mc=y'; j=(n.javaEnabled()? 'Y':'N'); c=(dc.cookie.length>0?'Y':'N');
if(v>=4){x=screen; } if(n.appName.indexOf('Mic')>=0) {o=1; } if(v>=4){ id=4636;
if(o==1){s=x.colorDepth}w=x.width;h=x.height;}x='|';p=w+x+h+x+s+'||||'+j+x+c+x;
u='ht'+'tp://media.fastclick.net/w'; c=' alt="Click"></a>'; x='/get.media?t=s';
l=' width=468 height=60 border=0 ';t=l+'marginheight=0 marginwidth=';b='&sid=';
i=u+x+b+id+'&m=1&f=a&v=1.2&c='+f+'&j='+p+'&r='+e;d='ameborder=0 scrolling=no>';
u = '<a  hr'+'ef="'+u+'/cli'+'ck.here?sid='+id+'&m=1&c='+f+'"  target="_top">';
dc.writeln('<ifr'+'ame src="'+i+'&d=f"'+t+'0 hspace=0 vspace=0 fr'+d);if(o!=1){
dc.writeln(u+'<i'+'mg sr'+'c="'+i+'&d=n"'+l+c);}dc.writeln('</iframe>'); // -->
</script><noscript><a 
href="http://media.fastclick.net/w/click.here?sid=4636&m=1&c=1"  target="_top">
<img src="http://media.fastclick.net/w/get.media?sid=4636&m=1&d=s&c=1&f=a&v=1.2
" width=468 height=60 border=1></a>
</noscript><!--/ad--></TD></TR></TABLE>
<!--/header-->
<TABLE WIDTH=100%><TR><TD BGCOLOR="gray" ALIGN="right"><FONT FACE="arial,helvetica,verdana" SIZE=2 COLOR="white">cplusplus.com &nbsp;</TD></TR></TABLE>

<!--content-->
<FONT FACE="arial,helvetica" SIZE=3>
Standard C library for Input/Output with streams
</FONT>

<P>&nbsp; <A HREF="#summary">stdio.h summary</A>

<P>
<H2>Functions:</H2>
<BLOCKQUOTE>
<TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0>
<TR><TD WIDTH=100><A HREF="clearerr.html">clearerr</A></TD><TD>Reset error indicators.</TD></TR>
<TR><TD><A HREF="fclose.html">fclose</A></TD><TD>Close a stream.</TD></TR>
<TR><TD><A HREF="feof.html">feof</A></TD><TD>Check if End Of File has been reached.</TD></TR>
<TR><TD><A HREF="ferror.html">ferror</A></TD><TD>Check for errors.</TD></TR>
<TR><TD><A HREF="fflush.html">fflush</A></TD><TD>Flush a stream.</TD></TR>
<TR><TD><A HREF="fgetc.html">fgetc</A></TD><TD>Get next character from a stream.</TD></TR>
<TR><TD><A HREF="fgetpos.html">fgetpos</A></TD><TD>Get position in a stream.</TD></TR>
<TR><TD><A HREF="fgets.html">fgets</A></TD><TD>Get string from a stream.</TD></TR>
<TR><TD><A HREF="fopen.html">fopen</A></TD><TD>Open a file.</TD></TR>
<TR><TD><A HREF="fprintf.html">fprintf</A></TD><TD>Print formatted data to a stream.</TD></TR>
<TR><TD><A HREF="fputc.html">fputc</A></TD><TD>Write character to a stream.</TD></TR>
<TR><TD><A HREF="fputchar.html">fputchar</A></TD><TD>Write character to stdout.</TD></TR>
<TR><TD><A HREF="fputs.html">fputs</A></TD><TD>Write string to a stream.</TD></TR>
<TR><TD><A HREF="fread.html">fread</A></TD><TD>Read block of data from a stream.</TD></TR>
<TR><TD><A HREF="freopen.html">freopen</A></TD><TD>Reopen a file using a different file mode.</TD></TR>
<TR><TD><A HREF="fscanf.html">fscanf</A></TD><TD>Read formatted data from a stream.</TD></TR>
<TR><TD><A HREF="fseek.html">fseek</A></TD><TD>Reposition stream's position indicator.</TD></TR>
<TR><TD><A HREF="fsetpos.html">fsetpos</A></TD><TD>Reposition file pointer to a saved location.</TD></TR>
<TR><TD><A HREF="ftell.html">ftell</A></TD><TD>Return the current position of the file pointer.</TD></TR>
<TR><TD><A HREF="fwrite.html">fwrite</A></TD><TD>Write block of data to a stream.</TD></TR>
<TR><TD><A HREF="getc.html">getc</A></TD><TD>Get the next character.</TD></TR>
<TR><TD><A HREF="getchar.html">getchar</A></TD><TD>Get the next character from stdin.</TD></TR>
<TR><TD><A HREF="gets.html">gets</A></TD><TD>Get a string from stdin.</TD></TR>
<TR><TD><A HREF="getw.html">getw</A></TD><TD>Get the next int value from a stream.</TD></TR>
<TR><TD><A HREF="perror.html">perror</A></TD><TD>Print error message.</TD></TR>
<TR><TD><A HREF="printf.html">printf</A></TD><TD>Print formatted data to stdout.</TD></TR>
<TR><TD><A HREF="putc.html">putc</A></TD><TD>Write character to a stream.</TD></TR>
<TR><TD><A HREF="putchar.html">putchar</A></TD><TD>Write character to stdout.</TD></TR>
<TR><TD><A HREF="puts.html">puts</A></TD><TD>Write a string to stdout.</TD></TR>
<TR><TD><A HREF="putw.html">putw</A></TD><TD>Write an integer to a stream.</TD></TR>
<TR><TD><A HREF="remove.html">remove</A></TD><TD>Delete a file.</TD></TR>
<TR><TD><A HREF="rename.html">rename</A></TD><TD>Rename a file or directory.</TD></TR>
<TR><TD><A HREF="rewind.html">rewind</A></TD><TD>Reposition file pointer to the beginning of a stream.</TD></TR>
<TR><TD><A HREF="scanf.html">scanf</A></TD><TD>Read formatted data from stdin.</TD></TR>
<TR><TD><A HREF="setbuf.html">setbuf</A></TD><TD>Change stream buffering.</TD></TR>
<TR><TD><A HREF="setvbuf.html">setvbuf</A></TD><TD>Change stream buffering.</TD></TR>
<TR><TD><A HREF="sprintf.html">sprintf</A></TD><TD>Format data to a string.</TD></TR>
<TR><TD><A HREF="sscanf.html">sscanf</A></TD><TD>Read formatted data from a string.</TD></TR>
<TR><TD><A HREF="tmpfile.html">tmpfile</A></TD><TD>Open a temporary file.</TD></TR>
<TR><TD><A HREF="tmpnam.html">tmpnam</A></TD><TD>Generate a unique temporary filename.</TD></TR>
<TR><TD><A HREF="ungetc.html">ungetc</A></TD><TD>Push a character back into stream.</TD></TR>
</TABLE>
</BLOCKQUOTE>

<P>&nbsp;<P>
<A NAME="summary"><H2>stdio.h summary:</H2></A>

<P>
<B>Streams.</B><BR>
&nbsp;
Streams are an abstraction used in C and C++ for input and output
operations through I/O devices based on characters, like 
files, keyboard, printer, screen and I/O ports.<BR>
&nbsp;
A <TT>stdio.h</TT> stream is represented by a pointer to a FILE
structure that contains internal info about properties and indicators of a file.
Normally data contained in these structures are not
referred directly.
When using <B>stdio.h</B> functions, pointer to FILE structures are only used
to be passed as parameters to I/O functions.<BR>


<P>
<DL>
<DT><B>Properties.</B><BR>
<DD>&nbsp;
A stream has some properties that defines which functions can be used with it or how the
functions will treat the stream.
Most of them are defined in the <I>mode</I> parameter when <A HREF="fopen.html">fopen</A>
function is called.
<DL>
<DT><I>Access</I>
<DD>Specifies if the operations performed with the stream will have read and/or write access to the file.
<DT><I>Text / Binary</I>
<DD>Text files are those where lines are delimited by the special character EOL (End Of Line),
and some translations occur when this special character is read or written for that these file can
be directly outputed to a console. The End of a
text file is defined by the first occurrence of the EOF character.
<DD>A binary file is a file where each byte is read or written as a character,
no translations occur,
and the End of a binary file matches with the physical End of the File.
<DT><I>Buffer</I>
<DD>A buffer is a block of memory where data is accumulated before being
physically read or written to the file.
Buffered stream causes I/O operations with the stream to be faster because normally buffers are faster than physical devices
like disks or ports. A stream can be unbuffered so the data is directly read or written to the device.
The use of stream buffers can be specified using functions <A HREF="setbuf.html">setbuf</A>
and <A HREF="setvbuf.html">setvbuf</A>.
 </DL>

<P>
<DT><B>Indicators.</B><BR>
<DD>
&nbsp;
A stream has some indicators that specify the current state of it. These are internally
modified and affect the behavior of Input/Output functions:
<DL>
<DT><I>Error Indicator</I>
<DD>This indicator is set when an error has occurred in an operation related with the stream.
This indicator can be checked using <A HREF="ferror.html">ferror</A>,
and can be reset by a call
to <A HREF="clearerr.html">clearerr</A> or by any repositioning functions
(<A HREF="rewind.html">rewind</A>, <A HREF="fseek.html">fseek</A> and <A HREF="fsetpos.html">fsetpos</A>).<BR>
<DT><I>End-Of-File Indicator</I>
<DD>When this indicator is set, the last reading or writing operation permormed
has reached the End of the file associated with
the stream. This can be checked with the <A HREF="feof.html">feof</A> function,
and can be reset by calling
to <A HREF="clearerr.html">clearerr</A> or by any repositioning functions
(<A HREF="rewind.html">rewind</A>, <A HREF="fseek.html">fseek</A> and <A HREF="fsetpos.html">fsetpos</A>).<BR>
<DT><I>Position Indicator (File pointer)</I>
<DD>This indicator is an internal pointer that points to the next character within the stream that has to be read or
written by the next I/O operation. This value can be obtained by the <A HREF="ftell.html">ftell</A>
and <A HREF="fgetpos.html">fgetpos</A> functions,
and can be changed calling to <A HREF="rewind.html">rewind</A>, <A HREF="fseek.html">fseek</A> and <A HREF="fsetpos.html">fsetpos</A> functions
</DL>

<P>
<DT><B>Standard Streams</B><BR>
<DD>
&nbsp;
When a program that includes <TT><B>stdio.h</B></TT> begin its execution, three predefined
streams are opened:
<DL>
<DT><I>stdin</I>
<DD>This is the standard input stream. By default stdin corresponds to the keyboard,
but this can be redirected by the operating system.
<DT><I>stdout</I>
<DD>This is the standard output stream. By default stdout is directed to the screen,
but the operating system can redirect it to a file or any other output device.
<DT><I>stderr</I>
<DD>The standard error stream. This is an output stream specifically intendend to
receive error messages. By default is directed to the standard output (like stdout),
but it can be redirected to a log file or any other output device.
</DL>
</DL>
<!--/content-->
<P><HR><CENTER><FONT FACE="arial,helvetica" SIZE=1>&copy; The C++ Resources Network, 2000</FONT></CENTER>

</BODY>
</HTML>
