ID=E0431
URL=http://www.rit.edu/~jpw9607/gne/html/classGNE_1_1PacketStream.html
SIZE=25150
DATE=12/07/02
TIME=19:20:52
DATASET=C
HTML=<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>GNE::PacketStream class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body bgcolor="#ffffff">
<!-- Generated by Doxygen 1.2.13.1 -->
<center>
<a class="qindex" href="main.html">Main Page</a> &nbsp; <a class="qindex" href="namespaces.html">Namespace List</a> &nbsp; <a class="qindex" href="hierarchy.html">Class Hierarchy</a> &nbsp; <a class="qindex" href="annotated.html">Compound List</a> &nbsp; <a class="qindex" href="files.html">File List</a> &nbsp; <a class="qindex" href="namespacemembers.html">Namespace Members</a> &nbsp; <a class="qindex" href="functions.html">Compound Members</a> &nbsp; <a class="qindex" href="pages.html">Related Pages</a> &nbsp; </center>
<hr><h1>GNE::PacketStream  Class Reference</h1>This class resembles a packet stream through a connection. 
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="PacketStream_8h-source.html">PacketStream.h</a>&gt;</code>
<p>
<p>Inheritance diagram for GNE::PacketStream::
<p><center><img src="classGNE_1_1PacketStream.gif" usemap="#GNE::PacketStream_map" border="0"></center>
<map name="GNE::PacketStream_map">
<area href="classGNE_1_1Thread.html" alt="GNE::Thread" shape="rect" coords="0,0,121,24">
</map>
<a href="classGNE_1_1PacketStream-members.html">List of all members.</a><table border=0 cellpadding=0 cellspacing=0>
<tr><td colspan=2><br><h2>Public Methods</h2></td></tr>
<tr><td nowrap align=right valign=top>&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1PacketStream.html#a0">PacketStream</a> (int reqOutRate2, int maxOutRate2, <a class="el" href="classGNE_1_1Connection.html">Connection</a> &amp;ourOwner)</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Creates a new <a class="el" href="classGNE_1_1PacketStream.html">PacketStream</a> with the given flow control parameters.</em> <a href="#a0">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>virtual&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1PacketStream.html#a1">~PacketStream</a> ()</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Destroys this object.</em> <a href="#a1">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top><a name="a2" doxytag="GNE::PacketStream::getInLength"></a>
int&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1PacketStream.html#a2">getInLength</a> () const</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Returns the current incoming queue length in packets.</em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>int&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1PacketStream.html#a3">getOutLength</a> (bool reliable) const</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Returns the current outgoing queue length in packets.</em> <a href="#a3">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>bool&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1PacketStream.html#a4">isNextPacket</a> () const</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Is there at least one packet in the incoming queue? Note that this does not guarantee that getNextPacket will return a non-NULL value if it is possible for any other thread to try to get the data between your call and getNextPacket.</em> <a href="#a4">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top><a class="el" href="classGNE_1_1Packet.html">Packet</a> *&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1PacketStream.html#a5">getNextPacket</a> ()</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Returns the next packet from the queue, removing it from that queue.</em> <a href="#a5">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>void&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1PacketStream.html#a6">writePacket</a> (const <a class="el" href="classGNE_1_1Packet.html">Packet</a> &amp;packet, bool reliable)</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Adds a packet to the outgoing queue.</em> <a href="#a6">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>int&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1PacketStream.html#a7">getCurrOutRate</a> () const</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Returns the actual outgoing data rate, which may be the same or less that what was originally requested on connection.</em> <a href="#a7">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>int&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1PacketStream.html#a8">getReqOutRate</a> () const</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Returns the maximum outgoing rate that we are requesting.</em> <a href="#a8">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>int&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1PacketStream.html#a9">getRemoteOutLimit</a> () const</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Returns the maximum outgoing rate that the remote computer is allowing us to send to it.</em> <a href="#a9">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>void&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1PacketStream.html#a10">setRates</a> (int reqOutRate2, int maxInRate2)</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Sets new values that we are willing to send or receive.</em> <a href="#a10">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>void&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1PacketStream.html#a11">waitToSendAll</a> (int waitTime=10000) const</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Blocks on this <a class="el" href="classGNE_1_1PacketStream.html">PacketStream</a> until all packets have been sent.</em> <a href="#a11">More...</a><em></em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top><a name="a12" doxytag="GNE::PacketStream::shutDown"></a>
void&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1PacketStream.html#a12">shutDown</a> ()</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Overrides <a class="el" href="classGNE_1_1Thread.html#a3">Thread::shutDown</a> so that the <a class="el" href="classGNE_1_1PacketStream.html">PacketStream</a> daemon thread will be woken up since it might be waiting on a <a class="el" href="classGNE_1_1ConditionVariable.html">ConditionVariable</a>.</em></font><br><br></td></tr>
<tr><td nowrap align=right valign=top>void&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1PacketStream.html#a13">addIncomingPacket</a> (<a class="el" href="classGNE_1_1Packet.html">Packet</a> *packet)</td></tr>
<tr><td>&nbsp;</td><td><font size=-1><em>Add the given packet to the incoming queue.</em> <a href="#a13">More...</a><em></em></font><br><br></td></tr>
<tr><td colspan=2><br><h2>Protected Methods</h2></td></tr>
<tr><td nowrap align=right valign=top>void&nbsp;</td><td valign=bottom><a class="el" href="classGNE_1_1PacketStream.html#b0">run</a> ()</td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
This class resembles a packet stream through a connection.
<p>
This class is maintained by the <a class="el" href="classGNE_1_1Connection.html">Connection</a> class, and you shouldn't have to create your own PacketStreams. NOTE: all functions in this class are thread safe, since this class uses its own mutexes internally. Note that data in the class may change between calls, if another thread changes its state. 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a name="a0" doxytag="GNE::PacketStream::PacketStream"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> GNE::PacketStream::PacketStream </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap>&nbsp; <em>reqOutRate2</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap>&nbsp; <em>maxOutRate2</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="classGNE_1_1Connection.html">Connection</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap>&nbsp; <em>ourOwner</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Creates a new <a class="el" href="classGNE_1_1PacketStream.html">PacketStream</a> with the given flow control parameters.
<p>
Passing a value 0 for a rate is interpreted as "unlimited" or unrestricted rates. Passing a value less than 0 is not allowed. <dl compact><dt><b>
Parameters: </b><dd>
<table border=0 cellspacing=2 cellpadding=0>
<tr><td valign=top><em>reqOutRate2</em>&nbsp;</td><td>
This is the out rate that we are requesting, or in other words, the maximum rate we are willing to send. </td></tr>
<tr><td valign=top><em>maxOutRate2</em>&nbsp;</td><td>
The maximum rate the remote machine is letting us send. The actual outgoing rate, therefore, is the minimum of the two outgoing rate values. </td></tr>
</table>
</dl>    </td>
  </tr>
</table>
<a name="a1" doxytag="GNE::PacketStream::~PacketStream"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> GNE::PacketStream::~PacketStream </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp;          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Destroys this object.
<p>
Any data left remaining in the in or out queues is destroyed as well.     </td>
  </tr>
</table>
<hr><h2>Member Function Documentation</h2>
<a name="a13" doxytag="GNE::PacketStream::addIncomingPacket"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void GNE::PacketStream::addIncomingPacket </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classGNE_1_1Packet.html">Packet</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp; <em>packet</em>          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Add the given packet to the incoming queue.
<p>
This is normalled used internally by the <a class="el" href="classGNE_1_1Connection.html">Connection</a> class to add the packets, but it is safe for the user to call, if they want to delay processing of the packets for a later time and see what other packets are available.<br>
 Remember queues are LIFO, meaning this inserted packet will be the last in the queue after addition.<br>
 Also note that when you pass this object into the queue, you will eventually get it back from <a class="el" href="classGNE_1_1PacketStream.html#a5">getNextPacket</a>(), so you will want to handle deallocation at that point.     </td>
  </tr>
</table>
<a name="a7" doxytag="GNE::PacketStream::getCurrOutRate"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int GNE::PacketStream::getCurrOutRate </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp;          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns the actual outgoing data rate, which may be the same or less that what was originally requested on connection.
<p>
This value is the minimum between the max rate limit from the remote computer, and our maximum outgoing rate. A value of 0 means there is no outgoing rate limit.
<p>
If the requested rate changes, or if the remote computer changes its max allowed limit, this number will change to the new minimum between these rates.     </td>
  </tr>
</table>
<a name="a5" doxytag="GNE::PacketStream::getNextPacket"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classGNE_1_1Packet.html">Packet</a> * GNE::PacketStream::getNextPacket </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp;          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns the next packet from the queue, removing it from that queue.
<p>
It is your responsibility to deallocate the memory for this packet as the calling code becomes the owner of the memory the returned packet occupies. <dl compact><dt><b>
Returns: </b><dd>
A pointer to the next packet, which you are responsible for deleting, or NULL if there is no next packet. </dl>    </td>
  </tr>
</table>
<a name="a3" doxytag="GNE::PacketStream::getOutLength"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int GNE::PacketStream::getOutLength </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">bool&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp; <em>reliable</em>          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns the current outgoing queue length in packets.
<p>
This is meant as a possible hint for your application to tune its performance by knowning when the queues are starting to fill up.<dl compact><dt><b>
Parameters: </b><dd>
<table border=0 cellspacing=2 cellpadding=0>
<tr><td valign=top><em>reliable</em>&nbsp;</td><td>
true for the outgoing reliable packet queue.<br>
 false for the incoming reliable packet queue. </td></tr>
</table>
</dl>    </td>
  </tr>
</table>
<a name="a9" doxytag="GNE::PacketStream::getRemoteOutLimit"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int GNE::PacketStream::getRemoteOutLimit </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp;          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns the maximum outgoing rate that the remote computer is allowing us to send to it.
<p>
This value can change if the remote machine changes its rates through the setRates function. The value 0 means that no limit was requested. <dl compact><dt><b>
See also: </b><dd>
<a class="el" href="classGNE_1_1PacketStream.html#a7">getCurrOutRate</a> , <a class="el" href="classGNE_1_1PacketStream.html#a10">setRates</a> </dl>    </td>
  </tr>
</table>
<a name="a8" doxytag="GNE::PacketStream::getReqOutRate"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int GNE::PacketStream::getReqOutRate </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp;          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns the maximum outgoing rate that we are requesting.
<p>
The value 0 means that no rate limit was requested. <dl compact><dt><b>
See also: </b><dd>
<a class="el" href="classGNE_1_1PacketStream.html#a7">getCurrOutRate</a> , <a class="el" href="classGNE_1_1PacketStream.html#a10">setRates</a> </dl>    </td>
  </tr>
</table>
<a name="a4" doxytag="GNE::PacketStream::isNextPacket"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool GNE::PacketStream::isNextPacket </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp;          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Is there at least one packet in the incoming queue? Note that this does not guarantee that getNextPacket will return a non-NULL value if it is possible for any other thread to try to get the data between your call and getNextPacket.
<p>
This is only useful if you want to passively check for incoming data. If you are wanting to do anything with that data it is suggested that you use getNextPacket and if it is non-NULL then process the data. That method is thread safe.     </td>
  </tr>
</table>
<a name="b0" doxytag="GNE::PacketStream::run"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void GNE::PacketStream::run </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp;          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap><code> [protected, virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<dl compact><dt><b>
<a class="el" href="bug.html#_bug000004">Bug: </a></b><dd>
 we need a way to guarantee that the write won't block when trying to send the <a class="el" href="classGNE_1_1ExitPacket.html">ExitPacket</a> on shutdown. </dl> 
<p>
Reimplemented from <a class="el" href="classGNE_1_1Thread.html#b0">GNE::Thread</a>.    </td>
  </tr>
</table>
<a name="a10" doxytag="GNE::PacketStream::setRates"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void GNE::PacketStream::setRates </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap>&nbsp; <em>reqOutRate2</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap>&nbsp; <em>maxInRate2</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets new values that we are willing to send or receive.
<p>
See the constructor for more information. Pass a value less than 0 to leave one of the rates unchanged. Pass the value 0 for "unrestricted" rates. Changing the rates might cause a packet to get added to the outgoing packet stream to communicate this change to the other side.
<p>
<dl compact><dt><b>
See also: </b><dd>
<a class="el" href="classGNE_1_1PacketStream.html#a0">PacketStream::PacketStream</a> </dl>    </td>
  </tr>
</table>
<a name="a11" doxytag="GNE::PacketStream::waitToSendAll"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void GNE::PacketStream::waitToSendAll </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>&nbsp; <em>waitTime</em> = 10000          </td>
          <td class="md" valign="top">)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Blocks on this <a class="el" href="classGNE_1_1PacketStream.html">PacketStream</a> until all packets have been sent.
<p>
<dl compact><dt><b>
Parameters: </b><dd>
<table border=0 cellspacing=2 cellpadding=0>
<tr><td valign=top><em>waitTime</em>&nbsp;</td><td>
the max amount of time in ms to wait for the outgoing packet queue to clear. </td></tr>
</table>
</dl>    </td>
  </tr>
</table>
<a name="a6" doxytag="GNE::PacketStream::writePacket"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void GNE::PacketStream::writePacket </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="classGNE_1_1Packet.html">Packet</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap>&nbsp; <em>packet</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap>&nbsp; <em>reliable</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Adds a packet to the outgoing queue.
<p>
The packet given will be copied. <dl compact><dt><b>
Parameters: </b><dd>
<table border=0 cellspacing=2 cellpadding=0>
<tr><td valign=top><em>packet</em>&nbsp;</td><td>
the packet to send. </td></tr>
<tr><td valign=top><em>should</em>&nbsp;</td><td>
this packet be sent reliably if the connection supports it? </td></tr>
</table>
</dl>    </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="PacketStream_8h-source.html">PacketStream.h</a><li>PacketStream.cpp</ul>
<hr><address><small>Generated on Fri Mar 8 03:03:23 2002 for GNE by
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.gif" alt="doxygen" align="middle" border=0 
width=110 height=53></a>1.2.13.1 written by <a href="mailto:dimitri@stack.nl">Dimitri van Heesch</a>,
 &copy;&nbsp;1997-2001</small></address>
</body>
</html>

