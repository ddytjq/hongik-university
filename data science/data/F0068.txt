ID=F0068
URL=http://www.geocities.com/vkliew/vb/lesson10.html
SIZE=10764
DATE=09/07/2002
TIME=13:13:45
DATASET=Visual Basic
HTML=<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="Author" content="voon kiong">
   <meta name="GENERATOR" content="Mozilla/4.72 [en] (Win95; I) [Netscape]">
   <title>VB lesson7</title>
</head>
<body>

<center>
<h2>
Lesson 10: Introduction to VB Functions- Part I</h2></center>
Functions are similar to normal procedures but the main purpose of the
functions is to accept certain inputs and pass them on to the main program
to finish the execution. They are two types of function, the built-in functions(or
internal functions) and the functions created by the programmers.
<p>The general format of a function is
<br>&nbsp;
<blockquote>functionName(arguments)</blockquote>
&nbsp;where arguments are values that are passed on to the functions.
<p>In this lesson, we are going to learn two very basic but useful internal
functions, i.e.&nbsp; the MsgBox( ) and InputBox ( ) functions.
<h3>
10.1 MsgBox ( ) Function</h3>
The objective of MsgBox is to produce a pop-up message box and prompt the
user to click on a command button before he /she can continues. This message
box format is as follows:
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; yourMsg=MsgBox(Prompt,
Style Value, Title)
<br>&nbsp;
<p>&nbsp;The first argument, Prompt, will display the message in the message
box. The Style Value&nbsp; will determine what type of command buttons
appear on the message box, please refer Table 10.1 for types of command
button displayed. The Title argument will display the title of the message
board.
<center>
<p><b>Table 10.1: Style Values</b></center>

<p><br>
<center><table BORDER=0 COLS=3 WIDTH="80%" >
<tr BGCOLOR="#FFCC99">
<td WIDTH="20%"><b>Style Value</b></td>

<td><b>Named Constant</b></td>

<td><b>Buttons Displayed</b></td>
</tr>

<tr BGCOLOR="#FFFFCC">
<td>
<center>0</center>
</td>

<td>vbOkOnly</td>

<td>Ok button</td>
</tr>

<tr BGCOLOR="#FFFFCC">
<td>
<center>1</center>
</td>

<td>vbOkCancel</td>

<td>Ok and Cancel buttons</td>
</tr>

<tr BGCOLOR="#FFFFCC">
<td>
<center>2</center>
</td>

<td>vbAbortRetryIgnore</td>

<td>Abort, Retry and Ignore buttons.</td>
</tr>

<tr BGCOLOR="#FFFFCC">
<td>
<center>3</center>
</td>

<td>vbYesNoCancel</td>

<td>Yes, No and Cancel buttons</td>
</tr>

<tr BGCOLOR="#FFFFCC">
<td>
<center>4</center>
</td>

<td>vbYesNo</td>

<td>Yes and No buttons</td>
</tr>

<tr BGCOLOR="#FFFFCC">
<td>
<center>5</center>
</td>

<td>vbRetryCancel</td>

<td>Retry and Cancel buttons</td>
</tr>
</table></center>

<p>We can use named constant in place of integers for the second argument
to make the programs more readable. Infact, VB6 will automatically shows
up a list of names constant&nbsp; where you can select one of them.
<p>example: yourMsg=MsgBox( "Click OK to Proceed", 1, "Startup Menu")
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
and yourMsg=Msg("Click OK to Proceed". vbOkCancel,"Startup Menu")
<p>are the same.
<p>&nbsp;yourMsg is a variable that holds values that are returned by the
MsgBox ( ) function. The values are determined by the type of buttons being
clicked by the users. It has to be declared as Integer data type in the
procedure or in the general declaration section. Table 10.2 shows the values,
the corresponding named constant and buttons.
<center>
<p><b>Table 10.2 : Return Values and Command Buttons</b></center>

<center><table BORDER=0 COLS=3 WIDTH="70%" >
<tr BGCOLOR="#FFCC99">
<td WIDTH="20%">
<center><b>&nbsp;Value</b></center>
</td>

<td><b>Named Constant</b></td>

<td><b>Button Clicked&nbsp;</b></td>
</tr>

<tr BGCOLOR="#FFFFCC">
<td>
<center>1</center>
</td>

<td>vbOk</td>

<td>Ok button</td>
</tr>

<tr BGCOLOR="#FFFFCC">
<td>
<center>2</center>
</td>

<td>vbCancel</td>

<td>Cancel button</td>
</tr>

<tr BGCOLOR="#FFFFCC">
<td>
<center>3</center>
</td>

<td>vbAbort</td>

<td>Abort button</td>
</tr>

<tr BGCOLOR="#FFFFCC">
<td>
<center>4</center>
</td>

<td>vbRetry</td>

<td>Retry button</td>
</tr>

<tr BGCOLOR="#FFFFCC">
<td>
<center>5</center>
</td>

<td>vbIgnore</td>

<td>Ignore button</td>
</tr>

<tr BGCOLOR="#FFFFCC">
<td>
<center>6</center>
</td>

<td>vbYes</td>

<td>Yes button</td>
</tr>

<tr BGCOLOR="#FFFFCC">
<td>
<center>7</center>
</td>

<td>vbNo</td>

<td>No button</td>
</tr>
</table></center>

<p>Example 10.1
<p>i. The Interface:
<p>&nbsp;&nbsp; You draw three command buttons and a label as shown in
Figure 10.1
<center>
<p>Figure 10.1
<p><img SRC="msgbox1.jpg" height=239 width=314></center>

<p>ii. The procedure for the test button:
<blockquote>&nbsp;</blockquote>

<blockquote><font color="#3333FF">Private Sub Test_Click()</font>
<br><font color="#3333FF">Dim </font>testmsg <font color="#3333FF">As</font>
Integer
<br>testmsg = MsgBox("Click to test", 1, "Test message")
<br><font color="#3333FF">If</font> testmsg = 1 <font color="#3333FF">Then</font>
<br>Display.Caption = "Testing Successful"
<br><font color="#3333FF">Else</font>
<br>Display.Caption = "Testing fail"
<br><font color="#3333FF">End If</font>
<p><font color="#3333FF">End Sub</font>
<br>&nbsp;</blockquote>
<font color="#000000">When a user click on the test button, the image like
the one shown in Figure 10.2 will appear. As the user click on the OK button,
the message "Testing sucessful" will be diplayed and when he/she clicks
on the Cancel button, the message "Testing fail" will be displayed.</font>
<center>
<p><font color="#000000">Figure 10.2</font>
<p><img SRC="msgbox1_popup.jpg" height=100 width=185></center>

<p><br>
<br>
<br>
<br>
<p>To make the message box looks more sophisticated, you can add an icon
besides the message. The are four types of icons available in VB as shown
in&nbsp; Table 10.3
<br>&nbsp;
<br>&nbsp;
<br>
<center>
<p>Table 10.3</center>

<p><br>
<center><table BORDER=0 COLS=3 WIDTH="80%" >
<tr BGCOLOR="#FFCC99">
<td WIDTH="20%">
<center><b>Value</b></center>
</td>

<td><b>Named Constant</b></td>

<td WIDTH="15%"><b>Icon&nbsp;</b></td>
</tr>

<tr BGCOLOR="#FFFFCC">
<td>
<center>16</center>
</td>

<td>vbCritical</td>

<td>
<center><img SRC="vbcritical.jpg" height=41 width=39></center>
</td>
</tr>

<tr BGCOLOR="#FFFFCC">
<td>
<center>32</center>
</td>

<td>vbQuestion</td>

<td>
<center><img SRC="vbquestion.jpg" height=38 width=41></center>
</td>
</tr>

<tr BGCOLOR="#FFFFCC">
<td>
<center>48</center>
</td>

<td>vbExclamation</td>

<td>
<center><img SRC="vbexlamation.jpg" height=41 width=39></center>
</td>
</tr>

<tr BGCOLOR="#FFFFCC">
<td>
<center>64</center>
</td>

<td>vbInformation</td>

<td>
<center><img SRC="vbInformation.jpg" height=41 width=40></center>
</td>
</tr>
</table></center>

<p>Example 10.2
<p>In this example, the following message box will be displayed:
<center>
<p>Figure 10.3
<p><img SRC="msgbox5_popup.jpg" height=119 width=266></center>

<p>You could draw the same Interface as in example 10.1 but modify the
codes as follows:
<br>&nbsp;
<blockquote><font color="#3333FF">Private Sub </font>test2_Click()
<br><font color="#3333FF">Dim </font>testMsg2 <font color="#3333FF">As
</font>Integer
<br>testMsg2 = MsgBox("Click to Test", vbYesNoCancel + vbExclamation, "Test
Message")
<br><font color="#3333FF">If </font>testMsg2 = 6 <font color="#3333FF">Then</font>
<br>display2.Caption = "Testing successful"
<br><font color="#3333FF">ElseIf</font> testMsg2 = 7 <font color="#3333FF">Then</font>
<br>display2.Caption = "Are you sure?"
<br><font color="#3333FF">Else</font>
<br>display2.Caption = "Testing fail"
<br><font color="#3333FF">End If</font>
<p><font color="#3333FF">End Sub</font>
<br>&nbsp;</blockquote>

<h3>
<font color="#000000">10.2 The InputBox( ) Function</font></h3>
An InputBox( ) function will display a message box where the user can enter
a value or a message in the form of text. The format is
<br>&nbsp;
<blockquote>myMessage=InputBox(Prompt, Title, default_text, x-position,
y-position)</blockquote>
myMessage is a variant data type but typically it is declared as string,
which accept the message input bu the users.The arguments are explained
as follows:
<br>&nbsp;
<ul>
<li>
Prompt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - The message displayed normally
as a question asked.</li>

<li>
Title&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
- The title of the Input Box.</li>

<li>
default-text&nbsp; - The default text that appears in the input field where
users can use it as his intended input or he may change to the message
he wish to key in.</li>

<li>
x-position and y-position - the position or the coordinate of the input
box.</li>
</ul>
Example 10.3
<p>i.&nbsp; The Interface
<center>
<p>Figure 10.4
<p><img SRC="inputbox.jpg" height=240 width=320></center>

<p><br>
<br>
<br>
<p>ii. The procedure for the OK button
<blockquote><font color="#3333FF">Private Sub</font> OK_Click()
<br><font color="#3333FF">Dim</font> userMsg <font color="#3333FF">As</font>
String
<br>userMsg = InputBox("What is your message?", "Message Entry Form", "Enter
your messge here", 500, 700)
<br><font color="#3333FF">If</font> userMsg &lt;> "" <font color="#3333FF">Then</font>
<br>message.Caption = userMsg
<br><font color="#3333FF">Else</font>
<br>message.Caption = "No Message"
<br><font color="#3333FF">End If</font>
<p><font color="#3333FF">End Sub</font></blockquote>
<font color="#000000">When a user click the OK button, the input box as
shown in Figure 10.5 will appear. After user entering the message and click
OK, the message will be displayed on the caption, if he click Cancel, "No
message" will be displayed.</font>
<br>&nbsp;
<blockquote>
<center><img SRC="inputbox2.jpg" height=145 width=363></center>
</blockquote>

<br>&nbsp;
<br>&nbsp;
<center>
<p><a href="vbtutor.html">[<font size=+0>Back to contents&nbsp; page]</font></a></center>

</body>
</html>
<!-- text below generated by server. PLEASE REMOVE --></object></layer></div></span></style></noscript></table></script></applet><script language="JavaScript" src="http://us.i1.yimg.com/us.yimg.com/i/mc/mc.js"></script><script language="JavaScript" src="http://us.geocities.com/js_source/geov2.js"></script><script language="javascript">geovisit();</script><noscript><img src="http://visit.geocities.com/visit.gif?1026141577" border=0 width=1 height=1></noscript>
<IMG SRC="http://geo.yahoo.com/serv?s=76001088&t=1026141577" ALT=1 WIDTH=1 HEIGHT=1>

