}
View(table)
for(j in 1:4){
if(cast[,j]>=20){
table[j][1] =T
}else
table[j][1] =F
}
View(table)
qda.fit=qda(a~p+script+span ,data=table ,subset=train)
for(i in 2:1000){
cast <- html_nodes(html, "a") %>%  html_text()
cast2 <- html_nodes(html,"p") %>% html_text()
cast3 <- html_nodes(html,"script") %>% html_text()
cast4 <- html_nodes(html,"span") %>% html_text()
temp <- data.frame(matrix(nrow=1, ncol=4)) #create table
#4개의 열과 1개의 행을 하나만들고
names(temp) = c('a','p','script','span')
#names 하고 names(m1) = c('a', 'p', 'form', 'span')
#분류 해주고 #a 있다없다.
cast = data.frame(length(cast),length(cast2),length(cast3),length(cast4))
for(j in 1:4){
if(cast[,j]>=15){
temp[j][1] =T
}else
temp[j][1] =F
}
#cbind
table = rbind(table,temp)
}
qda.fit=qda(a~p+script+span ,data=table ,subset=train)
View(table)
train = (table$a==T) ? 1:0
train = (table$a)
test = (!train)
fix(train)
qda.fit=qda(a~p+script+span ,data=table ,subset=train)
lm.fit=lm(a~p, data=table, subset=train)
lm.fit
lm.fit=lm(a~p+span+script, data=table, subset=train)
lm.fit
lm.fit=lm(a~p+span+script, data=table, subset=train)
lm.fit
lm.fit=lm(p~a+span+script, data=table, subset=train)
lm.fit
rm(list=ls())
library("data.table")
options(max.print=999999999)
directory<-c("C:/Users/yosub/Documents/StatewithR/Project/data")
read_file<-list.files(directory)
read_file
str(read_file)
read_file_leng<-length(read_file)
read_file_leng
for(i in 1:read_file_leng){
dataset<-read.table(
paste(directory, "/", read_file[i], sep=""), sep="=", header=FALSE, nrows=6, fill=T)
dataset<-dataset[,c(1:2)]
dataset_mid = as.data.frame(t(dataset))
names(dataset_mid)<-c("ID", "URL", "SIZE", "DATA", "TIME", "DATASET")
rownames(dataset_mid)<-NULL
dataset_mid<-dataset_mid[c(2),]
if(i==1)
dataset_result<-dataset_mid
else
dataset_result<-rbind(dataset_mid, dataset_result)
rm(dataset_mid)
rm(dataset)
}
write.csv(dataset_result, "C:/Users/yosub/Documents/StatewithR/Project/result/data.csv")
library("rvest")
i=1
cast <- html_nodes(html, "a") %>%  html_text()
cast2 <- html_nodes(html,"p") %>% html_text()
html = read_html(paste0(directory, "/", read_file[i], sep=""), encoding="UTF-8")
cast <- html_nodes(html, "a") %>%  html_text()
cast2 <- html_nodes(html,"p") %>% html_text()
cast3 <- html_nodes(html,"script") %>% html_text()
cast4 <- html_nodes(html,"span") %>% html_text()
table <- data.frame(matrix(nrow=1, ncol=4))
names(table) = c('a','p','script','span')
cast = data.frame(length(cast),length(cast2),length(cast3),length(cast4))
for(j in 1:4){
if(cast[,j]>=20){
table[j][1] =T
}else
table[j][1] =F
}
for(i in 2:read_file_leng){
cast <- html_nodes(html, "a") %>%  html_text()
cast2 <- html_nodes(html,"p") %>% html_text()
cast3 <- html_nodes(html,"script") %>% html_text()
cast4 <- html_nodes(html,"span") %>% html_text()
# create table
temp <- data.frame(matrix(nrow=1, ncol=4))
# 4개의 열과 1개의 행을 하나만들고 이름설정,
names(temp) = c('a','p','script','span')
cast = data.frame(length(cast),length(cast2),length(cast3),length(cast4))
# 분류 ( 한 파일내에 태그개수가 20개 이상이면은 true, 아니면 false )
for(j in 1:4){
if(cast[,j]>=15){
temp[j][1] =T
}else
temp[j][1] =F
}
# rbind
table = rbind(table,temp)
}
train = (table$a == T) #table a에 모든 것을 트레이닝한다.
test = (!train) #그 외의 것을 테스트로 설정
lm.fit=lm(a~p+span+script, data=table, subset=train)
lm.fit
glm.fit=glm(as.factor(a)∼p+span+script, data=table ,family=binomial)
for(j in 1:4){
if(cast[,j]>=20){
table[j][1] =0
}else
table[j][1] =1
}
for(i in 2:read_file_leng){
cast <- html_nodes(html, "a") %>%  html_text()
cast2 <- html_nodes(html,"p") %>% html_text()
cast3 <- html_nodes(html,"script") %>% html_text()
cast4 <- html_nodes(html,"span") %>% html_text()
# create table
temp <- data.frame(matrix(nrow=1, ncol=4))
# 4개의 열과 1개의 행을 하나만들고 이름설정,
names(temp) = c('a','p','script','span')
cast = data.frame(length(cast),length(cast2),length(cast3),length(cast4))
# 분류 ( 한 파일내에 태그개수가 20개 이상이면은 true, 아니면 false )
for(j in 1:4){
if(cast[,j]>=15){
temp[j][1] =0
}else
temp[j][1] =1
}
# rbind
table = rbind(table,temp)
}
glm.fit=glm(as.factor(a)~p+span+script, data=table ,family=binomial)
summary(glm.fit)
glm.fit=glm(as.factor(a)~p+span+script, data=table ,family=binomial)
train = (table$a == T) #table a에 모든 것을 트레이닝한다.
test = (!train) #그 외의 것을 테스트로 설정
lm.fit=lm(a~p+span+script, data=table, subset=train)
lm.fit
glm.fit=glm(as.factor(a)~p+span+script, data=table ,family=binomial)
summary(glm.fit)
qda.fit=qda(a~p+span+script, data=table, subset=train)
qda.fit=qda(as.factor(a)~p+span+script, data=table, subset=train)
train = (table$a == 0) #table a에 모든 것을 트레이닝한다.
test = (!train) #그 외의 것을 테스트로 설정
lm.fit=lm(a~p+span+script, data=table, subset=train)
lm.fit
train = (table$a == 1) #table a에 모든 것을 트레이닝한다.
test = (!train) #그 외의 것을 테스트로 설정
lm.fit=lm(a~p+span+script, data=table, subset=train)
for(j in 1:4){
if(cast[,j]>=20){
table[j][1] =1
}else
table[j][1] =0
}
for(i in 2:read_file_leng){
cast <- html_nodes(html, "a") %>%  html_text()
cast2 <- html_nodes(html,"p") %>% html_text()
cast3 <- html_nodes(html,"script") %>% html_text()
cast4 <- html_nodes(html,"span") %>% html_text()
# create table
temp <- data.frame(matrix(nrow=1, ncol=4))
# 4개의 열과 1개의 행을 하나만들고 이름설정,
names(temp) = c('a','p','script','span')
cast = data.frame(length(cast),length(cast2),length(cast3),length(cast4))
# 분류 ( 한 파일내에 태그개수가 20개 이상이면은 true, 아니면 false )
for(j in 1:4){
if(cast[,j]>=15){
temp[j][1] =1
}else
temp[j][1] =0
}
# rbind
table = rbind(table,temp)
}
train = (table$a == 1) #table a에 모든 것을 트레이닝한다.
test = (!train) #그 외의 것을 테스트로 설정
lm.fit=lm(a~p+span+script, data=table, subset=train)
lm.fit
glm.fit=glm(as.factor(a)~p+span+script, data=table ,family=binomial)
summary(glm.fit)
rm(list=ls())
library("data.table")
options(max.print=999999999)
directory<-c("C:/Users/yosub/Documents/StatewithR/Project/data")
read_file<-list.files(directory)
read_file
str(read_file)
read_file_leng<-length(read_file)
read_file_leng
for(i in 1:read_file_leng){
dataset<-read.table(
paste(directory, "/", read_file[i], sep=""), sep="=", header=FALSE, nrows=6, fill=T)
dataset<-dataset[,c(1:2)]
dataset_mid = as.data.frame(t(dataset))
names(dataset_mid)<-c("ID", "URL", "SIZE", "DATA", "TIME", "DATASET")
rownames(dataset_mid)<-NULL
dataset_mid<-dataset_mid[c(2),]
if(i==1)
dataset_result<-dataset_mid
else
dataset_result<-rbind(dataset_mid, dataset_result)
rm(dataset_mid)
rm(dataset)
}
write.csv(dataset_result, "C:/Users/yosub/Documents/StatewithR/Project/result/data.csv")
library("rvest")
i=1
html = read_html(paste0(directory, "/", read_file[i], sep=""), encoding="UTF-8")
cast <- html_nodes(html, "a") %>%  html_text()
cast2 <- html_nodes(html,"p") %>% html_text()
cast3 <- html_nodes(html,"script") %>% html_text()
cast4 <- html_nodes(html,"span") %>% html_text()
table <- data.frame(matrix(nrow=1, ncol=4))
names(table) = c('a','p','script','span')
cast = data.frame(length(cast),length(cast2),length(cast3),length(cast4))
for(j in 1:4){
if(cast[,j]>=20){
table[j][1] =1
}else
table[j][1] =0
}
for(i in 2:read_file_leng){
cast <- html_nodes(html, "a") %>%  html_text()
cast2 <- html_nodes(html,"p") %>% html_text()
cast3 <- html_nodes(html,"script") %>% html_text()
cast4 <- html_nodes(html,"span") %>% html_text()
# create table
temp <- data.frame(matrix(nrow=1, ncol=4))
# 4개의 열과 1개의 행을 하나만들고 이름설정,
names(temp) = c('a','p','script','span')
cast = data.frame(length(cast),length(cast2),length(cast3),length(cast4))
# 분류 ( 한 파일내에 태그개수가 20개 이상이면은 true, 아니면 false )
for(j in 1:4){
if(cast[,j]>=15){
temp[j][1] =1
}else
temp[j][1] =0
}
# rbind
table = rbind(table,temp)
}
train = (table$a == 1) #table a에 모든 것을 트레이닝한다.
test = (!train) #그 외의 것을 테스트로 설정
lm.fit=lm(a~p+span+script, data=table, subset=train)
lm.fit
glm.fit=glm(as.factor(a)~p+span+script, data=table ,family=binomial)
summary(glm.fit)
library("rvest")
i=1
html = read_html(paste0(directory, "/", read_file[i], sep=""), encoding="UTF-8")
cast <- html_nodes(html, "a") %>%  html_text()
cast2 <- html_nodes(html,"p") %>% html_text()
cast3 <- html_nodes(html,"script") %>% html_text()
cast4 <- html_nodes(html,"span") %>% html_text()
table <- data.frame(matrix(nrow=1, ncol=4))
names(table) = c('a','p','script','span')
cast = data.frame(length(cast),length(cast2),length(cast3),length(cast4))
for(j in 1:4){
if(cast[,j]>=20){
table[j][1] =1
}else
table[j][1] =0
}
for(i in 2:read_file_leng){
cast <- html_nodes(html, "a") %>%  html_text()
cast2 <- html_nodes(html,"p") %>% html_text()
cast3 <- html_nodes(html,"script") %>% html_text()
cast4 <- html_nodes(html,"span") %>% html_text()
# create table
temp <- data.frame(matrix(nrow=1, ncol=4))
# 4개의 열과 1개의 행을 하나만들고 이름설정,
names(temp) = c('a','p','script','span')
cast = data.frame(length(cast),length(cast2),length(cast3),length(cast4))
# 분류 ( 한 파일내에 태그개수가 15개 이상이면은 1, 아니면 0 )
for(j in 1:4){
if(cast[,j]>=20){
temp[j][1] =1
}else
temp[j][1] =0
}
# rbind
table = rbind(table,temp)
}
train = (table$a == 1) # a의 값이 1인것들을 train으로 삼는다.
test = (!train) # 그 외의 것을 테스트로 설정한다.
lm.fit=lm(a~p+span+script, data=table, subset=train)
lm.fit
glm.fit=glm(as.factor(a)~p+span+script, data=table ,family=binomial)
summary(glm.fit)
library("rvest")
i=1
html = read_html(paste0(directory, "/", read_file[i], sep=""), encoding="UTF-8")
cast <- html_nodes(html, "a") %>%  html_text()
cast2 <- html_nodes(html,"p") %>% html_text()
cast3 <- html_nodes(html,"script") %>% html_text()
cast4 <- html_nodes(html,"span") %>% html_text()
table <- data.frame(matrix(nrow=1, ncol=4))
names(table) = c('a','p','script','span')
cast = data.frame(length(cast),length(cast2),length(cast3),length(cast4))
for(j in 1:4){
if(cast[,j]>=15){
table[j][1] =1
}else
table[j][1] =0
}
for(i in 2:read_file_leng){
cast <- html_nodes(html, "a") %>%  html_text()
cast2 <- html_nodes(html,"p") %>% html_text()
cast3 <- html_nodes(html,"script") %>% html_text()
cast4 <- html_nodes(html,"span") %>% html_text()
# create table
temp <- data.frame(matrix(nrow=1, ncol=4))
# 4개의 열과 1개의 행을 하나만들고 이름설정,
names(temp) = c('a','p','script','span')
cast = data.frame(length(cast),length(cast2),length(cast3),length(cast4))
# 분류 ( 한 파일내에 태그개수가 15개 이상이면은 1, 아니면 0 )
for(j in 1:4){
if(cast[,j]>=15){
temp[j][1] =1
}else
temp[j][1] =0
}
# rbind
table = rbind(table,temp)
}
train = (table$a == 1) # a의 값이 1인것들을 train로 설정한다.
test = (!train) # 그 외의 것을 test로 설정한다.
lm.fit=lm(a~p+span+script, data=table, subset=train)
lm.fit
glm.fit=glm(as.factor(a)~p+span+script, data=table ,family=binomial)
summary(glm.fit)
for(j in 1:4){
if(cast[,j]>=25){
table[j][1] =1
}else
table[j][1] =0
}
for(i in 2:read_file_leng){
cast <- html_nodes(html, "a") %>%  html_text()
cast2 <- html_nodes(html,"p") %>% html_text()
cast3 <- html_nodes(html,"script") %>% html_text()
cast4 <- html_nodes(html,"span") %>% html_text()
# create table
temp <- data.frame(matrix(nrow=1, ncol=4))
# 4개의 열과 1개의 행을 하나만들고 이름설정,
names(temp) = c('a','p','script','span')
cast = data.frame(length(cast),length(cast2),length(cast3),length(cast4))
# 분류 ( 한 파일내에 태그개수가 15개 이상이면은 1, 아니면 0 )
for(j in 1:4){
if(cast[,j]>=15){
temp[j][1] =1
}else
temp[j][1] =0
}
# rbind
table = rbind(table,temp)
}
i=1
i=1
html = read_html(paste0(directory, "/", read_file[i], sep=""), encoding="UTF-8")
cast <- html_nodes(html, "a") %>%  html_text()
cast2 <- html_nodes(html,"p") %>% html_text()
cast3 <- html_nodes(html,"script") %>% html_text()
cast4 <- html_nodes(html,"span") %>% html_text()
table <- data.frame(matrix(nrow=1, ncol=4))
names(table) = c('a','p','script','span')
cast = data.frame(length(cast),length(cast2),length(cast3),length(cast4))
for(j in 1:4){
if(cast[,j]>=25){
table[j][1] =1
}else
table[j][1] =0
}
for(i in 2:read_file_leng){
cast <- html_nodes(html, "a") %>%  html_text()
cast2 <- html_nodes(html,"p") %>% html_text()
cast3 <- html_nodes(html,"script") %>% html_text()
cast4 <- html_nodes(html,"span") %>% html_text()
# create table
temp <- data.frame(matrix(nrow=1, ncol=4))
# 4개의 열과 1개의 행을 하나만들고 이름설정,
names(temp) = c('a','p','script','span')
cast = data.frame(length(cast),length(cast2),length(cast3),length(cast4))
# 분류 ( 한 파일내에 태그개수가 15개 이상이면은 1, 아니면 0 )
for(j in 1:4){
if(cast[,j]>=15){
temp[j][1] =1
}else
temp[j][1] =0
}
# rbind
table = rbind(table,temp)
}
library("rvest")
i=1
html = read_html(paste0(directory, "/", read_file[i], sep=""), encoding="UTF-8")
cast <- html_nodes(html, "a") %>%  html_text()
cast2 <- html_nodes(html,"p") %>% html_text()
cast3 <- html_nodes(html,"script") %>% html_text()
cast4 <- html_nodes(html,"span") %>% html_text()
table <- data.frame(matrix(nrow=1, ncol=4))
names(table) = c('a','p','script','span')
cast = data.frame(length(cast),length(cast2),length(cast3),length(cast4))
for(j in 1:4){
if(cast[,j]>=20){
table[j][1] =1
}else
table[j][1] =0
}
for(i in 2:read_file_leng){
cast <- html_nodes(html, "a") %>%  html_text()
cast2 <- html_nodes(html,"p") %>% html_text()
cast3 <- html_nodes(html,"script") %>% html_text()
cast4 <- html_nodes(html,"span") %>% html_text()
# create table
temp <- data.frame(matrix(nrow=1, ncol=4))
# 4개의 열과 1개의 행을 하나만들고 이름설정,
names(temp) = c('a','p','script','span')
cast = data.frame(length(cast),length(cast2),length(cast3),length(cast4))
# 분류 ( 한 파일내에 태그개수가 15개 이상이면은 1, 아니면 0 )
for(j in 1:4){
if(cast[,j]>=15){
temp[j][1] =1
}else
temp[j][1] =0
}
# rbind
table = rbind(table,temp)
}
train = (table$a == 1) # a의 값이 1인것들을 train로 설정한다.
test = (!train) # 그 외의 것을 test로 설정한다.
lm.fit=lm(a~p+span+script, data=table, subset=train)
lm.fit
glm.fit=glm(as.factor(a)~p+span+script, data=table ,family=binomial)
summary(glm.fit)
rm(list=ls())
rm(list=ls())
library("data.table")
options(max.print=999999999)
directory<-c("C:/Users/yosub/Documents/StatewithR/Project/data")
read_file<-list.files(directory)
read_file
str(read_file)
read_file_leng<-length(read_file)
read_file_leng
for(i in 1:read_file_leng){
dataset<-read.table(
paste(directory, "/", read_file[i], sep=""), sep="=", header=FALSE, nrows=6, fill=T)
dataset<-dataset[,c(1:2)]
dataset_mid = as.data.frame(t(dataset))
names(dataset_mid)<-c("ID", "URL", "SIZE", "DATA", "TIME", "DATASET")
rownames(dataset_mid)<-NULL
dataset_mid<-dataset_mid[c(2),]
if(i==1)
dataset_result<-dataset_mid
else
dataset_result<-rbind(dataset_mid, dataset_result)
rm(dataset_mid)
rm(dataset)
}
write.csv(dataset_result, "C:/Users/yosub/Documents/StatewithR/Project/result/data.csv")
library("rvest")
i=1
html = read_html(paste0(directory, "/", read_file[i], sep=""), encoding="UTF-8")
cast <- html_nodes(html, "a") %>%  html_text()
cast2 <- html_nodes(html,"p") %>% html_text()
cast3 <- html_nodes(html,"script") %>% html_text()
cast4 <- html_nodes(html,"span") %>% html_text()
table <- data.frame(matrix(nrow=1, ncol=4))
names(table) = c('a','p','script','span')
cast = data.frame(length(cast),length(cast2),length(cast3),length(cast4))
for(j in 1:4){
if(cast[,j]>=20){
table[j][1] =1
}else
table[j][1] =0
}
for(i in 2:read_file_leng){
cast <- html_nodes(html, "a") %>%  html_text()
cast2 <- html_nodes(html,"p") %>% html_text()
cast3 <- html_nodes(html,"script") %>% html_text()
cast4 <- html_nodes(html,"span") %>% html_text()
# create table
temp <- data.frame(matrix(nrow=1, ncol=4))
# 4개의 열과 1개의 행을 하나만들고 이름설정,
names(temp) = c('a','p','script','span')
cast = data.frame(length(cast),length(cast2),length(cast3),length(cast4))
# 분류 ( 한 파일내에 태그개수가 15개 이상이면은 true, 아니면 false )
for(j in 1:4){
if(cast[,j]>=15){
temp[j][1] =1
}else
temp[j][1] =0
}
# rbind
table = rbind(table,temp)
}
train = (table$a == 1) #table a에 모든 것을 트레이닝한다.
test = (!train) #그 외의 것을 테스트로 설정
lm.fit=lm(a~p+span+script, data=table, subset=train)
lm.fit
glm.fit=glm(as.factor(a)~p+span+script, data=table ,family=binomial)
summary(glm.fit)
